{"ast":null,"code":"export default class PostService {\n  constructor(http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  } //common header part\n\n\n  getHeaders() {\n    //get a token from storage and return with headers format\n    const token = this.tokenStorage.getToken();\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  }\n\n  async getPostsByCategory(category) {\n    const query = category ? `/category/${category}` : 'category';\n    return this.http.fetch(query, {\n      method: 'GET',\n      headers: this.getHeaders()\n    });\n  }\n\n  async getPostById(id) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'GET',\n      headers: this.getHeaders()\n    });\n  }\n\n  async createPost(category, title, text) {\n    return this.http.fetch(`/post`, {\n      method: 'POST',\n      headers: this.getHeaders(),\n      body: JSON.stringify({\n        category,\n        title,\n        text\n      })\n    });\n  }\n\n  async updatePost(id, category, title, text) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'PUT',\n      headers: this.getHeaders(),\n      body: JSON.stringify({\n        category,\n        title,\n        text\n      })\n    });\n  }\n\n  async deletePost(id) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'DELETE',\n      headers: this.getHeaders()\n    });\n  }\n\n  async getCategories() {\n    this.http.fetch(`/category`, {\n      method: 'GET',\n      headers: this.getHeaders()\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/service/post.js"],"names":["PostService","constructor","http","tokenStorage","getHeaders","token","getToken","Authorization","getPostsByCategory","category","query","fetch","method","headers","getPostById","id","createPost","title","text","body","JSON","stringify","updatePost","deletePost","getCategories"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,CAAEC,IAAF,EAAQC,YAAR,EAAsB;AAC/B,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACD,GAJ8B,CAM/B;;;AACAC,EAAAA,UAAU,GAAG;AACX;AACA,UAAMC,KAAK,GAAG,KAAKF,YAAL,CAAkBG,QAAlB,EAAd;AACA,WAAO;AAAEC,MAAAA,aAAa,EAAG,UAASF,KAAM;AAAjC,KAAP;AACD;;AAGuB,QAAlBG,kBAAkB,CAACC,QAAD,EAAW;AACjC,UAAMC,KAAK,GAAGD,QAAQ,GAAI,aAAYA,QAAS,EAAzB,GAA6B,UAAnD;AAEA,WAAO,KAAKP,IAAL,CAAUS,KAAV,CAAgBD,KAAhB,EAAuB;AAC5BE,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,OAAO,EAAE,KAAKT,UAAL;AAFmB,KAAvB,CAAP;AAID;;AAEgB,QAAXU,WAAW,CAACC,EAAD,EAAK;AACpB,WAAO,KAAKb,IAAL,CAAUS,KAAV,CAAiB,SAAQI,EAAG,EAA5B,EAA+B;AACpCH,MAAAA,MAAM,EAAE,KAD4B;AAEpCC,MAAAA,OAAO,EAAG,KAAKT,UAAL;AAF0B,KAA/B,CAAP;AAID;;AAEe,QAAVY,UAAU,CAACP,QAAD,EAAWQ,KAAX,EAAkBC,IAAlB,EAAwB;AACtC,WAAO,KAAKhB,IAAL,CAAUS,KAAV,CAAiB,OAAjB,EAAyB;AAC9BC,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE,KAAKT,UAAL,EAFqB;AAG9Be,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEZ,QAAAA,QAAF;AAAYQ,QAAAA,KAAZ;AAAmBC,QAAAA;AAAnB,OAAf;AAHwB,KAAzB,CAAP;AAKD;;AAEe,QAAVI,UAAU,CAACP,EAAD,EAAKN,QAAL,EAAeQ,KAAf,EAAsBC,IAAtB,EAA4B;AAC1C,WAAO,KAAKhB,IAAL,CAAUS,KAAV,CAAiB,SAAQI,EAAG,EAA5B,EAA+B;AACpCH,MAAAA,MAAM,EAAE,KAD4B;AAEpCC,MAAAA,OAAO,EAAE,KAAKT,UAAL,EAF2B;AAGpCe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEZ,QAAAA,QAAF;AAAYQ,QAAAA,KAAZ;AAAmBC,QAAAA;AAAnB,OAAf;AAH8B,KAA/B,CAAP;AAKD;;AAEe,QAAVK,UAAU,CAACR,EAAD,EAAK;AACnB,WAAO,KAAKb,IAAL,CAAUS,KAAV,CAAiB,SAAQI,EAAG,EAA5B,EAA+B;AACpCH,MAAAA,MAAM,EAAE,QAD4B;AAEpCC,MAAAA,OAAO,EAAE,KAAKT,UAAL;AAF2B,KAA/B,CAAP;AAID;;AAEkB,QAAboB,aAAa,GAAG;AACpB,SAAKtB,IAAL,CAAUS,KAAV,CAAiB,WAAjB,EAA6B;AAC3BC,MAAAA,MAAM,EAAE,KADmB;AAE3BC,MAAAA,OAAO,EAAE,KAAKT,UAAL;AAFkB,KAA7B;AAID;;AA1D8B","sourcesContent":["export default class PostService {\n  constructor (http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n\n  //common header part\n  getHeaders() {\n    //get a token from storage and return with headers format\n    const token = this.tokenStorage.getToken();\n    return { Authorization: `Bearer ${token}`, };\n  }\n\n\n  async getPostsByCategory(category) {\n    const query = category ? `/category/${category}` : 'category';\n\n    return this.http.fetch(query, {\n      method: 'GET',\n      headers: this.getHeaders()\n    })\n  }\n\n  async getPostById(id) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'GET',\n      headers : this.getHeaders()\n    });\n  }\n\n  async createPost(category, title, text) {\n    return this.http.fetch(`/post`, {\n      method: 'POST',\n      headers: this.getHeaders(),\n      body: JSON.stringify({ category, title, text })\n    })\n  }\n\n  async updatePost(id, category, title, text) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'PUT',\n      headers: this.getHeaders(),\n      body: JSON.stringify({ category, title, text })\n    })\n  }\n\n  async deletePost(id) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'DELETE',\n      headers: this.getHeaders()\n    })\n  }\n\n  async getCategories() {\n    this.http.fetch(`/category`, {\n      method: 'GET',\n      headers: this.getHeaders()\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}