{"ast":null,"code":"export default class AuthService {\n  constructor(tokenStorage) {\n    this.baseURL = 'http://localhost:8080';\n    this.tokenStorage = tokenStorage;\n  }\n\n  async login(username, password) {\n    const data = await fetch(`${this.baseURL}/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async me() {\n    const token = this.tokenStorage.getToken();\n    return fetch(`${this.baseURL}/auth/me`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n\n}","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/service/auth.js"],"names":["AuthService","constructor","tokenStorage","baseURL","login","username","password","data","fetch","method","body","JSON","stringify","saveToken","token","me","getToken","headers","Authorization","logout","clearToken"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,CAAEC,YAAF,EAAgB;AACzB,SAAKC,OAAL,GAAe,uBAAf;AACA,SAAKD,YAAL,GAAoBA,YAApB;AACD;;AAEU,QAALE,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC9B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKL,OAAQ,aAAjB,EAA+B;AACrDM,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAf;AAF+C,KAA/B,CAAxB;AAIA,SAAKJ,YAAL,CAAkBW,SAAlB,CAA4BN,IAAI,CAACO,KAAjC;AACA,WAAOP,IAAP;AACD;;AAEO,QAAFQ,EAAE,GAAG;AACT,UAAMD,KAAK,GAAG,KAAKZ,YAAL,CAAkBc,QAAlB,EAAd;AAEA,WAAOR,KAAK,CAAE,GAAE,KAAKL,OAAQ,UAAjB,EAA4B;AACtCM,MAAAA,MAAM,EAAE,KAD8B;AAEtCQ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,KAAM;AAAjC;AAF6B,KAA5B,CAAZ;AAID;;AAEW,QAANK,MAAM,GAAG;AACb,SAAKjB,YAAL,CAAkBkB,UAAlB;AACD;;AA1B8B","sourcesContent":["export default class AuthService {\n  constructor (tokenStorage) {\n    this.baseURL = 'http://localhost:8080';\n    this.tokenStorage = tokenStorage;\n  }\n\n  async login(username, password) {\n    const data = await fetch(`${this.baseURL}/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async me() {\n    const token = this.tokenStorage.getToken();\n\n    return fetch(`${this.baseURL}/auth/me`, {\n      method: 'GET',\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n}"]},"metadata":{},"sourceType":"module"}