{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prosemirror_inputrules_1 = require(\"prosemirror-inputrules\");\n\nconst toggleWrap_1 = __importDefault(require(\"../commands/toggleWrap\"));\n\nconst outline_icons_1 = require(\"outline-icons\");\n\nconst React = __importStar(require(\"react\"));\n\nconst react_dom_1 = __importDefault(require(\"react-dom\"));\n\nconst Node_1 = __importDefault(require(\"./Node\"));\n\nclass Notice extends Node_1.default {\n  constructor() {\n    super(...arguments);\n\n    this.handleStyleChange = event => {\n      const {\n        view\n      } = this.editor;\n      const {\n        tr\n      } = view.state;\n      const element = event.target;\n      const {\n        top,\n        left\n      } = element.getBoundingClientRect();\n      const result = view.posAtCoords({\n        top,\n        left\n      });\n\n      if (result) {\n        const transaction = tr.setNodeMarkup(result.inside, undefined, {\n          style: element.value\n        });\n        view.dispatch(transaction);\n      }\n    };\n  }\n\n  get styleOptions() {\n    return Object.entries({\n      info: this.options.dictionary.info,\n      warning: this.options.dictionary.warning,\n      tip: this.options.dictionary.tip\n    });\n  }\n\n  get name() {\n    return \"container_notice\";\n  }\n\n  get schema() {\n    return {\n      attrs: {\n        style: {\n          default: \"info\"\n        }\n      },\n      content: \"block+\",\n      group: \"block\",\n      defining: true,\n      draggable: true,\n      parseDOM: [{\n        tag: \"div.notice-block\",\n        preserveWhitespace: \"full\",\n        contentElement: \"div:last-child\",\n        getAttrs: dom => ({\n          style: dom.className.includes(\"tip\") ? \"tip\" : dom.className.includes(\"warning\") ? \"warning\" : undefined\n        })\n      }],\n      toDOM: node => {\n        const select = document.createElement(\"select\");\n        select.addEventListener(\"change\", this.handleStyleChange);\n        this.styleOptions.forEach(([key, label]) => {\n          const option = document.createElement(\"option\");\n          option.value = key;\n          option.innerText = label;\n          option.selected = node.attrs.style === key;\n          select.appendChild(option);\n        });\n        let component;\n\n        if (node.attrs.style === \"tip\") {\n          component = React.createElement(outline_icons_1.StarredIcon, {\n            color: \"currentColor\"\n          });\n        } else if (node.attrs.style === \"warning\") {\n          component = React.createElement(outline_icons_1.WarningIcon, {\n            color: \"currentColor\"\n          });\n        } else {\n          component = React.createElement(outline_icons_1.InfoIcon, {\n            color: \"currentColor\"\n          });\n        }\n\n        const icon = document.createElement(\"div\");\n        icon.className = \"icon\";\n        react_dom_1.default.render(component, icon);\n        return [\"div\", {\n          class: `notice-block ${node.attrs.style}`\n        }, icon, [\"div\", {\n          contentEditable: false\n        }, select], [\"div\", {\n          class: \"content\"\n        }, 0]];\n      }\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return attrs => toggleWrap_1.default(type, attrs);\n  }\n\n  inputRules({\n    type\n  }) {\n    return [prosemirror_inputrules_1.wrappingInputRule(/^:::$/, type)];\n  }\n\n  toMarkdown(state, node) {\n    state.write(\"\\n:::\" + (node.attrs.style || \"info\") + \"\\n\");\n    state.renderContent(node);\n    state.ensureNewLine();\n    state.write(\":::\");\n    state.closeBlock(node);\n  }\n\n  parseMarkdown() {\n    return {\n      block: \"container_notice\",\n      getAttrs: tok => ({\n        style: tok.info\n      })\n    };\n  }\n\n}\n\nexports.default = Notice;","map":{"version":3,"sources":["../../src/nodes/Notice.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prosemirror_inputrules_1 = require(\"prosemirror-inputrules\");\nconst toggleWrap_1 = __importDefault(require(\"../commands/toggleWrap\"));\nconst outline_icons_1 = require(\"outline-icons\");\nconst React = __importStar(require(\"react\"));\nconst react_dom_1 = __importDefault(require(\"react-dom\"));\nconst Node_1 = __importDefault(require(\"./Node\"));\nclass Notice extends Node_1.default {\n    constructor() {\n        super(...arguments);\n        this.handleStyleChange = event => {\n            const { view } = this.editor;\n            const { tr } = view.state;\n            const element = event.target;\n            const { top, left } = element.getBoundingClientRect();\n            const result = view.posAtCoords({ top, left });\n            if (result) {\n                const transaction = tr.setNodeMarkup(result.inside, undefined, {\n                    style: element.value,\n                });\n                view.dispatch(transaction);\n            }\n        };\n    }\n    get styleOptions() {\n        return Object.entries({\n            info: this.options.dictionary.info,\n            warning: this.options.dictionary.warning,\n            tip: this.options.dictionary.tip,\n        });\n    }\n    get name() {\n        return \"container_notice\";\n    }\n    get schema() {\n        return {\n            attrs: {\n                style: {\n                    default: \"info\",\n                },\n            },\n            content: \"block+\",\n            group: \"block\",\n            defining: true,\n            draggable: true,\n            parseDOM: [\n                {\n                    tag: \"div.notice-block\",\n                    preserveWhitespace: \"full\",\n                    contentElement: \"div:last-child\",\n                    getAttrs: (dom) => ({\n                        style: dom.className.includes(\"tip\")\n                            ? \"tip\"\n                            : dom.className.includes(\"warning\")\n                                ? \"warning\"\n                                : undefined,\n                    }),\n                },\n            ],\n            toDOM: node => {\n                const select = document.createElement(\"select\");\n                select.addEventListener(\"change\", this.handleStyleChange);\n                this.styleOptions.forEach(([key, label]) => {\n                    const option = document.createElement(\"option\");\n                    option.value = key;\n                    option.innerText = label;\n                    option.selected = node.attrs.style === key;\n                    select.appendChild(option);\n                });\n                let component;\n                if (node.attrs.style === \"tip\") {\n                    component = React.createElement(outline_icons_1.StarredIcon, { color: \"currentColor\" });\n                }\n                else if (node.attrs.style === \"warning\") {\n                    component = React.createElement(outline_icons_1.WarningIcon, { color: \"currentColor\" });\n                }\n                else {\n                    component = React.createElement(outline_icons_1.InfoIcon, { color: \"currentColor\" });\n                }\n                const icon = document.createElement(\"div\");\n                icon.className = \"icon\";\n                react_dom_1.default.render(component, icon);\n                return [\n                    \"div\",\n                    { class: `notice-block ${node.attrs.style}` },\n                    icon,\n                    [\"div\", { contentEditable: false }, select],\n                    [\"div\", { class: \"content\" }, 0],\n                ];\n            },\n        };\n    }\n    commands({ type }) {\n        return attrs => toggleWrap_1.default(type, attrs);\n    }\n    inputRules({ type }) {\n        return [prosemirror_inputrules_1.wrappingInputRule(/^:::$/, type)];\n    }\n    toMarkdown(state, node) {\n        state.write(\"\\n:::\" + (node.attrs.style || \"info\") + \"\\n\");\n        state.renderContent(node);\n        state.ensureNewLine();\n        state.write(\":::\");\n        state.closeBlock(node);\n    }\n    parseMarkdown() {\n        return {\n            block: \"container_notice\",\n            getAttrs: tok => ({ style: tok.info }),\n        };\n    }\n}\nexports.default = Notice;\n//# sourceMappingURL=Notice.js.map"]},"metadata":{},"sourceType":"script"}