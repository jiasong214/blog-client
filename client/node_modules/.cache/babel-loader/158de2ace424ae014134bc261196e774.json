{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prosemirror_inputrules_1 = require(\"prosemirror-inputrules\");\n\nconst toggleList_1 = __importDefault(require(\"../commands/toggleList\"));\n\nconst Node_1 = __importDefault(require(\"./Node\"));\n\nclass CheckboxList extends Node_1.default {\n  get name() {\n    return \"checkbox_list\";\n  }\n\n  get schema() {\n    return {\n      group: \"block\",\n      content: \"checkbox_item+\",\n      toDOM: () => [\"ul\", {\n        class: this.name\n      }, 0],\n      parseDOM: [{\n        tag: `[class=\"${this.name}\"]`\n      }]\n    };\n  }\n\n  keys({\n    type,\n    schema\n  }) {\n    return {\n      \"Shift-Ctrl-7\": toggleList_1.default(type, schema.nodes.checkbox_item)\n    };\n  }\n\n  commands({\n    type,\n    schema\n  }) {\n    return () => toggleList_1.default(type, schema.nodes.checkbox_item);\n  }\n\n  inputRules({\n    type\n  }) {\n    return [prosemirror_inputrules_1.wrappingInputRule(/^-?\\s*(\\[ \\])\\s$/i, type)];\n  }\n\n  toMarkdown(state, node) {\n    state.renderList(node, \"  \", () => \"- \");\n  }\n\n  parseMarkdown() {\n    return {\n      block: \"checkbox_list\"\n    };\n  }\n\n}\n\nexports.default = CheckboxList;","map":{"version":3,"sources":["../../src/nodes/CheckboxList.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,wBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,MAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AAEA,MAAqB,YAArB,SAA0C,MAAA,CAAA,OAA1C,CAA8C;AACpC,MAAJ,IAAI,GAAA;AACN,WAAO,eAAP;AACD;;AAES,MAAN,MAAM,GAAA;AACR,WAAO;AACL,MAAA,KAAK,EAAE,OADF;AAEL,MAAA,OAAO,EAAE,gBAFJ;AAGL,MAAA,KAAK,EAAE,MAAM,CAAC,IAAD,EAAO;AAAE,QAAA,KAAK,EAAE,KAAK;AAAd,OAAP,EAA6B,CAA7B,CAHR;AAIL,MAAA,QAAQ,EAAE,CACR;AACE,QAAA,GAAG,EAAE,WAAW,KAAK,IAAI;AAD3B,OADQ;AAJL,KAAP;AAUD;;AAED,EAAA,IAAI,CAAC;AAAE,IAAA,IAAF;AAAQ,IAAA;AAAR,GAAD,EAAiB;AACnB,WAAO;AACL,sBAAgB,YAAA,CAAA,OAAA,CAAW,IAAX,EAAiB,MAAM,CAAC,KAAP,CAAa,aAA9B;AADX,KAAP;AAGD;;AAED,EAAA,QAAQ,CAAC;AAAE,IAAA,IAAF;AAAQ,IAAA;AAAR,GAAD,EAAiB;AACvB,WAAO,MAAM,YAAA,CAAA,OAAA,CAAW,IAAX,EAAiB,MAAM,CAAC,KAAP,CAAa,aAA9B,CAAb;AACD;;AAED,EAAA,UAAU,CAAC;AAAE,IAAA;AAAF,GAAD,EAAS;AACjB,WAAO,CAAC,wBAAA,CAAA,iBAAA,CAAkB,mBAAlB,EAAuC,IAAvC,CAAD,CAAP;AACD;;AAED,EAAA,UAAU,CAAC,KAAD,EAAQ,IAAR,EAAY;AACpB,IAAA,KAAK,CAAC,UAAN,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,MAAM,IAAnC;AACD;;AAED,EAAA,aAAa,GAAA;AACX,WAAO;AAAE,MAAA,KAAK,EAAE;AAAT,KAAP;AACD;;AAtC2C;;AAA9C,OAAA,CAAA,OAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prosemirror_inputrules_1 = require(\"prosemirror-inputrules\");\nconst toggleList_1 = __importDefault(require(\"../commands/toggleList\"));\nconst Node_1 = __importDefault(require(\"./Node\"));\nclass CheckboxList extends Node_1.default {\n    get name() {\n        return \"checkbox_list\";\n    }\n    get schema() {\n        return {\n            group: \"block\",\n            content: \"checkbox_item+\",\n            toDOM: () => [\"ul\", { class: this.name }, 0],\n            parseDOM: [\n                {\n                    tag: `[class=\"${this.name}\"]`,\n                },\n            ],\n        };\n    }\n    keys({ type, schema }) {\n        return {\n            \"Shift-Ctrl-7\": toggleList_1.default(type, schema.nodes.checkbox_item),\n        };\n    }\n    commands({ type, schema }) {\n        return () => toggleList_1.default(type, schema.nodes.checkbox_item);\n    }\n    inputRules({ type }) {\n        return [prosemirror_inputrules_1.wrappingInputRule(/^-?\\s*(\\[ \\])\\s$/i, type)];\n    }\n    toMarkdown(state, node) {\n        state.renderList(node, \"  \", () => \"- \");\n    }\n    parseMarkdown() {\n        return { block: \"checkbox_list\" };\n    }\n}\nexports.default = CheckboxList;\n//# sourceMappingURL=CheckboxList.js.map"]},"metadata":{},"sourceType":"script"}