{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst outline_icons_1 = require(\"outline-icons\");\n\nconst prosemirror_state_1 = require(\"prosemirror-state\");\n\nconst prosemirror_inputrules_1 = require(\"prosemirror-inputrules\");\n\nconst prosemirror_utils_1 = require(\"prosemirror-utils\");\n\nconst styled_components_1 = __importDefault(require(\"styled-components\"));\n\nconst react_medium_image_zoom_1 = __importDefault(require(\"react-medium-image-zoom\"));\n\nconst getDataTransferFiles_1 = __importDefault(require(\"../lib/getDataTransferFiles\"));\n\nconst uploadPlaceholder_1 = __importDefault(require(\"../lib/uploadPlaceholder\"));\n\nconst insertFiles_1 = __importDefault(require(\"../commands/insertFiles\"));\n\nconst Node_1 = __importDefault(require(\"./Node\"));\n\nconst IMAGE_INPUT_REGEX = /!\\[(?<alt>.*?)]\\((?<filename>.*?)(?=\\“|\\))\\“?(?<layoutclass>[^\\”]+)?\\”?\\)/;\n\nconst uploadPlugin = options => new prosemirror_state_1.Plugin({\n  props: {\n    handleDOMEvents: {\n      paste(view, event) {\n        if (view.props.editable && !view.props.editable(view.state) || !options.uploadImage) {\n          return false;\n        }\n\n        if (!event.clipboardData) return false;\n        const files = Array.prototype.slice.call(event.clipboardData.items).map(dt => dt.getAsFile()).filter(file => file);\n        if (files.length === 0) return false;\n        const {\n          tr\n        } = view.state;\n\n        if (!tr.selection.empty) {\n          tr.deleteSelection();\n        }\n\n        const pos = tr.selection.from;\n        insertFiles_1.default(view, event, pos, files, options);\n        return true;\n      },\n\n      drop(view, event) {\n        if (view.props.editable && !view.props.editable(view.state) || !options.uploadImage) {\n          return false;\n        }\n\n        const files = getDataTransferFiles_1.default(event).filter(file => /image/i.test(file.type));\n\n        if (files.length === 0) {\n          return false;\n        }\n\n        const result = view.posAtCoords({\n          left: event.clientX,\n          top: event.clientY\n        });\n\n        if (result) {\n          insertFiles_1.default(view, event, result.pos, files, options);\n          return true;\n        }\n\n        return false;\n      }\n\n    }\n  }\n});\n\nconst IMAGE_CLASSES = [\"right-50\", \"left-50\"];\n\nconst getLayoutAndTitle = tokenTitle => {\n  if (!tokenTitle) return {};\n\n  if (IMAGE_CLASSES.includes(tokenTitle)) {\n    return {\n      layoutClass: tokenTitle\n    };\n  } else {\n    return {\n      title: tokenTitle\n    };\n  }\n};\n\nconst downloadImageNode = async node => {\n  const image = await fetch(node.attrs.src);\n  const imageBlob = await image.blob();\n  const imageURL = URL.createObjectURL(imageBlob);\n  const extension = imageBlob.type.split(\"/\")[1];\n  const potentialName = node.attrs.alt || \"image\";\n  const link = document.createElement(\"a\");\n  link.href = imageURL;\n  link.download = `${potentialName}.${extension}`;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n\nclass Image extends Node_1.default {\n  constructor() {\n    super(...arguments);\n\n    this.handleKeyDown = ({\n      node,\n      getPos\n    }) => event => {\n      if (event.key === \"Enter\") {\n        event.preventDefault();\n        const {\n          view\n        } = this.editor;\n        const pos = getPos() + node.nodeSize;\n        view.focus();\n        view.dispatch(prosemirror_utils_1.setTextSelection(pos)(view.state.tr));\n        return;\n      }\n\n      if (event.key === \"Backspace\" && event.target.innerText === \"\") {\n        const {\n          view\n        } = this.editor;\n        const $pos = view.state.doc.resolve(getPos());\n        const tr = view.state.tr.setSelection(new prosemirror_state_1.NodeSelection($pos));\n        view.dispatch(tr.deleteSelection());\n        view.focus();\n        return;\n      }\n    };\n\n    this.handleBlur = ({\n      node,\n      getPos\n    }) => event => {\n      const alt = event.target.innerText;\n      const {\n        src,\n        title,\n        layoutClass\n      } = node.attrs;\n      if (alt === node.attrs.alt) return;\n      const {\n        view\n      } = this.editor;\n      const {\n        tr\n      } = view.state;\n      const pos = getPos();\n      const transaction = tr.setNodeMarkup(pos, undefined, {\n        src,\n        alt,\n        title,\n        layoutClass\n      });\n      view.dispatch(transaction);\n    };\n\n    this.handleSelect = ({\n      getPos\n    }) => event => {\n      event.preventDefault();\n      const {\n        view\n      } = this.editor;\n      const $pos = view.state.doc.resolve(getPos());\n      const transaction = view.state.tr.setSelection(new prosemirror_state_1.NodeSelection($pos));\n      view.dispatch(transaction);\n    };\n\n    this.handleDownload = ({\n      node\n    }) => event => {\n      event.preventDefault();\n      event.stopPropagation();\n      downloadImageNode(node);\n    };\n\n    this.component = props => {\n      const {\n        theme,\n        isSelected\n      } = props;\n      const {\n        alt,\n        src,\n        title,\n        layoutClass\n      } = props.node.attrs;\n      const className = layoutClass ? `image image-${layoutClass}` : \"image\";\n      return React.createElement(\"div\", {\n        contentEditable: false,\n        className: className\n      }, React.createElement(ImageWrapper, {\n        className: isSelected ? \"ProseMirror-selectednode\" : \"\",\n        onClick: this.handleSelect(props)\n      }, React.createElement(Button, null, React.createElement(outline_icons_1.DownloadIcon, {\n        color: \"currentColor\",\n        onClick: this.handleDownload(props)\n      })), React.createElement(react_medium_image_zoom_1.default, {\n        image: {\n          src,\n          alt,\n          title\n        },\n        defaultStyles: {\n          overlay: {\n            backgroundColor: theme.background\n          }\n        },\n        shouldRespectMaxDimension: true\n      })), React.createElement(Caption, {\n        onKeyDown: this.handleKeyDown(props),\n        onBlur: this.handleBlur(props),\n        className: \"caption\",\n        tabIndex: -1,\n        role: \"textbox\",\n        contentEditable: true,\n        suppressContentEditableWarning: true\n      }, alt));\n    };\n  }\n\n  get name() {\n    return \"image\";\n  }\n\n  get schema() {\n    return {\n      inline: true,\n      attrs: {\n        src: {},\n        alt: {\n          default: null\n        },\n        layoutClass: {\n          default: null\n        },\n        title: {\n          default: null\n        }\n      },\n      content: \"text*\",\n      marks: \"\",\n      group: \"inline\",\n      selectable: true,\n      draggable: true,\n      parseDOM: [{\n        tag: \"div[class~=image]\",\n        getAttrs: dom => {\n          const img = dom.getElementsByTagName(\"img\")[0];\n          const className = dom.className;\n          const layoutClassMatched = className && className.match(/image-(.*)$/);\n          const layoutClass = layoutClassMatched ? layoutClassMatched[1] : null;\n          return {\n            src: img.getAttribute(\"src\"),\n            alt: img.getAttribute(\"alt\"),\n            title: img.getAttribute(\"title\"),\n            layoutClass: layoutClass\n          };\n        }\n      }],\n      toDOM: node => {\n        const className = node.attrs.layoutClass ? `image image-${node.attrs.layoutClass}` : \"image\";\n        return [\"div\", {\n          class: className\n        }, [\"img\", Object.assign(Object.assign({}, node.attrs), {\n          contentEditable: false\n        })], [\"p\", {\n          class: \"caption\"\n        }, 0]];\n      }\n    };\n  }\n\n  toMarkdown(state, node) {\n    let markdown = \" ![\" + state.esc((node.attrs.alt || \"\").replace(\"\\n\", \"\") || \"\") + \"](\" + state.esc(node.attrs.src);\n\n    if (node.attrs.layoutClass) {\n      markdown += ' \"' + state.esc(node.attrs.layoutClass) + '\"';\n    } else if (node.attrs.title) {\n      markdown += ' \"' + state.esc(node.attrs.title) + '\"';\n    }\n\n    markdown += \")\";\n    state.write(markdown);\n  }\n\n  parseMarkdown() {\n    return {\n      node: \"image\",\n      getAttrs: token => {\n        return Object.assign({\n          src: token.attrGet(\"src\"),\n          alt: token.children[0] && token.children[0].content || null\n        }, getLayoutAndTitle(token.attrGet(\"title\")));\n      }\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return {\n      downloadImage: () => async state => {\n        const {\n          node\n        } = state.selection;\n\n        if (node.type.name !== \"image\") {\n          return false;\n        }\n\n        downloadImageNode(node);\n        return true;\n      },\n      deleteImage: () => (state, dispatch) => {\n        dispatch(state.tr.deleteSelection());\n        return true;\n      },\n      alignRight: () => (state, dispatch) => {\n        const attrs = Object.assign(Object.assign({}, state.selection.node.attrs), {\n          title: null,\n          layoutClass: \"right-50\"\n        });\n        const {\n          selection\n        } = state;\n        dispatch(state.tr.setNodeMarkup(selection.from, undefined, attrs));\n        return true;\n      },\n      alignLeft: () => (state, dispatch) => {\n        const attrs = Object.assign(Object.assign({}, state.selection.node.attrs), {\n          title: null,\n          layoutClass: \"left-50\"\n        });\n        const {\n          selection\n        } = state;\n        dispatch(state.tr.setNodeMarkup(selection.from, undefined, attrs));\n        return true;\n      },\n      alignCenter: () => (state, dispatch) => {\n        const attrs = Object.assign(Object.assign({}, state.selection.node.attrs), {\n          layoutClass: null\n        });\n        const {\n          selection\n        } = state;\n        dispatch(state.tr.setNodeMarkup(selection.from, undefined, attrs));\n        return true;\n      },\n      createImage: attrs => (state, dispatch) => {\n        const {\n          selection\n        } = state;\n        const position = selection.$cursor ? selection.$cursor.pos : selection.$to.pos;\n        const node = type.create(attrs);\n        const transaction = state.tr.insert(position, node);\n        dispatch(transaction);\n        return true;\n      }\n    };\n  }\n\n  inputRules({\n    type\n  }) {\n    return [new prosemirror_inputrules_1.InputRule(IMAGE_INPUT_REGEX, (state, match, start, end) => {\n      const [okay, alt, src, matchedTitle] = match;\n      const {\n        tr\n      } = state;\n\n      if (okay) {\n        tr.replaceWith(start - 1, end, type.create(Object.assign({\n          src,\n          alt\n        }, getLayoutAndTitle(matchedTitle))));\n      }\n\n      return tr;\n    })];\n  }\n\n  get plugins() {\n    return [uploadPlaceholder_1.default, uploadPlugin(this.options)];\n  }\n\n}\n\nexports.default = Image;\nconst Button = styled_components_1.default.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  border: 0;\n  margin: 0;\n  padding: 0;\n  border-radius: 4px;\n  background: ${props => props.theme.background};\n  color: ${props => props.theme.textSecondary};\n  width: 24px;\n  height: 24px;\n  display: inline-block;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 100ms ease-in-out;\n\n  &:active {\n    transform: scale(0.98);\n  }\n\n  &:hover {\n    color: ${props => props.theme.text};\n    opacity: 1;\n  }\n`;\nconst ImageWrapper = styled_components_1.default.span`\n  line-height: 0;\n  display: inline-block;\n  position: relative;\n\n  &:hover {\n    ${Button} {\n      opacity: 0.9;\n    }\n  }\n`;\nconst Caption = styled_components_1.default.p`\n  border: 0;\n  display: block;\n  font-size: 13px;\n  font-style: italic;\n  color: ${props => props.theme.textSecondary};\n  padding: 2px 0;\n  line-height: 16px;\n  text-align: center;\n  min-height: 1em;\n  outline: none;\n  background: none;\n  resize: none;\n  user-select: text;\n  cursor: text;\n\n  &:empty:before {\n    color: ${props => props.theme.placeholder};\n    content: \"Write a caption\";\n    pointer-events: none;\n  }\n`;","map":{"version":3,"sources":["../../src/nodes/Image.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nconst outline_icons_1 = require(\"outline-icons\");\nconst prosemirror_state_1 = require(\"prosemirror-state\");\nconst prosemirror_inputrules_1 = require(\"prosemirror-inputrules\");\nconst prosemirror_utils_1 = require(\"prosemirror-utils\");\nconst styled_components_1 = __importDefault(require(\"styled-components\"));\nconst react_medium_image_zoom_1 = __importDefault(require(\"react-medium-image-zoom\"));\nconst getDataTransferFiles_1 = __importDefault(require(\"../lib/getDataTransferFiles\"));\nconst uploadPlaceholder_1 = __importDefault(require(\"../lib/uploadPlaceholder\"));\nconst insertFiles_1 = __importDefault(require(\"../commands/insertFiles\"));\nconst Node_1 = __importDefault(require(\"./Node\"));\nconst IMAGE_INPUT_REGEX = /!\\[(?<alt>.*?)]\\((?<filename>.*?)(?=\\“|\\))\\“?(?<layoutclass>[^\\”]+)?\\”?\\)/;\nconst uploadPlugin = options => new prosemirror_state_1.Plugin({\n    props: {\n        handleDOMEvents: {\n            paste(view, event) {\n                if ((view.props.editable && !view.props.editable(view.state)) ||\n                    !options.uploadImage) {\n                    return false;\n                }\n                if (!event.clipboardData)\n                    return false;\n                const files = Array.prototype.slice\n                    .call(event.clipboardData.items)\n                    .map(dt => dt.getAsFile())\n                    .filter(file => file);\n                if (files.length === 0)\n                    return false;\n                const { tr } = view.state;\n                if (!tr.selection.empty) {\n                    tr.deleteSelection();\n                }\n                const pos = tr.selection.from;\n                insertFiles_1.default(view, event, pos, files, options);\n                return true;\n            },\n            drop(view, event) {\n                if ((view.props.editable && !view.props.editable(view.state)) ||\n                    !options.uploadImage) {\n                    return false;\n                }\n                const files = getDataTransferFiles_1.default(event).filter(file => /image/i.test(file.type));\n                if (files.length === 0) {\n                    return false;\n                }\n                const result = view.posAtCoords({\n                    left: event.clientX,\n                    top: event.clientY,\n                });\n                if (result) {\n                    insertFiles_1.default(view, event, result.pos, files, options);\n                    return true;\n                }\n                return false;\n            },\n        },\n    },\n});\nconst IMAGE_CLASSES = [\"right-50\", \"left-50\"];\nconst getLayoutAndTitle = tokenTitle => {\n    if (!tokenTitle)\n        return {};\n    if (IMAGE_CLASSES.includes(tokenTitle)) {\n        return {\n            layoutClass: tokenTitle,\n        };\n    }\n    else {\n        return {\n            title: tokenTitle,\n        };\n    }\n};\nconst downloadImageNode = async (node) => {\n    const image = await fetch(node.attrs.src);\n    const imageBlob = await image.blob();\n    const imageURL = URL.createObjectURL(imageBlob);\n    const extension = imageBlob.type.split(\"/\")[1];\n    const potentialName = node.attrs.alt || \"image\";\n    const link = document.createElement(\"a\");\n    link.href = imageURL;\n    link.download = `${potentialName}.${extension}`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n};\nclass Image extends Node_1.default {\n    constructor() {\n        super(...arguments);\n        this.handleKeyDown = ({ node, getPos }) => event => {\n            if (event.key === \"Enter\") {\n                event.preventDefault();\n                const { view } = this.editor;\n                const pos = getPos() + node.nodeSize;\n                view.focus();\n                view.dispatch(prosemirror_utils_1.setTextSelection(pos)(view.state.tr));\n                return;\n            }\n            if (event.key === \"Backspace\" && event.target.innerText === \"\") {\n                const { view } = this.editor;\n                const $pos = view.state.doc.resolve(getPos());\n                const tr = view.state.tr.setSelection(new prosemirror_state_1.NodeSelection($pos));\n                view.dispatch(tr.deleteSelection());\n                view.focus();\n                return;\n            }\n        };\n        this.handleBlur = ({ node, getPos }) => event => {\n            const alt = event.target.innerText;\n            const { src, title, layoutClass } = node.attrs;\n            if (alt === node.attrs.alt)\n                return;\n            const { view } = this.editor;\n            const { tr } = view.state;\n            const pos = getPos();\n            const transaction = tr.setNodeMarkup(pos, undefined, {\n                src,\n                alt,\n                title,\n                layoutClass,\n            });\n            view.dispatch(transaction);\n        };\n        this.handleSelect = ({ getPos }) => event => {\n            event.preventDefault();\n            const { view } = this.editor;\n            const $pos = view.state.doc.resolve(getPos());\n            const transaction = view.state.tr.setSelection(new prosemirror_state_1.NodeSelection($pos));\n            view.dispatch(transaction);\n        };\n        this.handleDownload = ({ node }) => event => {\n            event.preventDefault();\n            event.stopPropagation();\n            downloadImageNode(node);\n        };\n        this.component = props => {\n            const { theme, isSelected } = props;\n            const { alt, src, title, layoutClass } = props.node.attrs;\n            const className = layoutClass ? `image image-${layoutClass}` : \"image\";\n            return (React.createElement(\"div\", { contentEditable: false, className: className },\n                React.createElement(ImageWrapper, { className: isSelected ? \"ProseMirror-selectednode\" : \"\", onClick: this.handleSelect(props) },\n                    React.createElement(Button, null,\n                        React.createElement(outline_icons_1.DownloadIcon, { color: \"currentColor\", onClick: this.handleDownload(props) })),\n                    React.createElement(react_medium_image_zoom_1.default, { image: {\n                            src,\n                            alt,\n                            title,\n                        }, defaultStyles: {\n                            overlay: {\n                                backgroundColor: theme.background,\n                            },\n                        }, shouldRespectMaxDimension: true })),\n                React.createElement(Caption, { onKeyDown: this.handleKeyDown(props), onBlur: this.handleBlur(props), className: \"caption\", tabIndex: -1, role: \"textbox\", contentEditable: true, suppressContentEditableWarning: true }, alt)));\n        };\n    }\n    get name() {\n        return \"image\";\n    }\n    get schema() {\n        return {\n            inline: true,\n            attrs: {\n                src: {},\n                alt: {\n                    default: null,\n                },\n                layoutClass: {\n                    default: null,\n                },\n                title: {\n                    default: null,\n                },\n            },\n            content: \"text*\",\n            marks: \"\",\n            group: \"inline\",\n            selectable: true,\n            draggable: true,\n            parseDOM: [\n                {\n                    tag: \"div[class~=image]\",\n                    getAttrs: (dom) => {\n                        const img = dom.getElementsByTagName(\"img\")[0];\n                        const className = dom.className;\n                        const layoutClassMatched = className && className.match(/image-(.*)$/);\n                        const layoutClass = layoutClassMatched\n                            ? layoutClassMatched[1]\n                            : null;\n                        return {\n                            src: img.getAttribute(\"src\"),\n                            alt: img.getAttribute(\"alt\"),\n                            title: img.getAttribute(\"title\"),\n                            layoutClass: layoutClass,\n                        };\n                    },\n                },\n            ],\n            toDOM: node => {\n                const className = node.attrs.layoutClass\n                    ? `image image-${node.attrs.layoutClass}`\n                    : \"image\";\n                return [\n                    \"div\",\n                    {\n                        class: className,\n                    },\n                    [\"img\", Object.assign(Object.assign({}, node.attrs), { contentEditable: false })],\n                    [\"p\", { class: \"caption\" }, 0],\n                ];\n            },\n        };\n    }\n    toMarkdown(state, node) {\n        let markdown = \" ![\" +\n            state.esc((node.attrs.alt || \"\").replace(\"\\n\", \"\") || \"\") +\n            \"](\" +\n            state.esc(node.attrs.src);\n        if (node.attrs.layoutClass) {\n            markdown += ' \"' + state.esc(node.attrs.layoutClass) + '\"';\n        }\n        else if (node.attrs.title) {\n            markdown += ' \"' + state.esc(node.attrs.title) + '\"';\n        }\n        markdown += \")\";\n        state.write(markdown);\n    }\n    parseMarkdown() {\n        return {\n            node: \"image\",\n            getAttrs: token => {\n                return Object.assign({ src: token.attrGet(\"src\"), alt: (token.children[0] && token.children[0].content) || null }, getLayoutAndTitle(token.attrGet(\"title\")));\n            },\n        };\n    }\n    commands({ type }) {\n        return {\n            downloadImage: () => async (state) => {\n                const { node } = state.selection;\n                if (node.type.name !== \"image\") {\n                    return false;\n                }\n                downloadImageNode(node);\n                return true;\n            },\n            deleteImage: () => (state, dispatch) => {\n                dispatch(state.tr.deleteSelection());\n                return true;\n            },\n            alignRight: () => (state, dispatch) => {\n                const attrs = Object.assign(Object.assign({}, state.selection.node.attrs), { title: null, layoutClass: \"right-50\" });\n                const { selection } = state;\n                dispatch(state.tr.setNodeMarkup(selection.from, undefined, attrs));\n                return true;\n            },\n            alignLeft: () => (state, dispatch) => {\n                const attrs = Object.assign(Object.assign({}, state.selection.node.attrs), { title: null, layoutClass: \"left-50\" });\n                const { selection } = state;\n                dispatch(state.tr.setNodeMarkup(selection.from, undefined, attrs));\n                return true;\n            },\n            alignCenter: () => (state, dispatch) => {\n                const attrs = Object.assign(Object.assign({}, state.selection.node.attrs), { layoutClass: null });\n                const { selection } = state;\n                dispatch(state.tr.setNodeMarkup(selection.from, undefined, attrs));\n                return true;\n            },\n            createImage: attrs => (state, dispatch) => {\n                const { selection } = state;\n                const position = selection.$cursor\n                    ? selection.$cursor.pos\n                    : selection.$to.pos;\n                const node = type.create(attrs);\n                const transaction = state.tr.insert(position, node);\n                dispatch(transaction);\n                return true;\n            },\n        };\n    }\n    inputRules({ type }) {\n        return [\n            new prosemirror_inputrules_1.InputRule(IMAGE_INPUT_REGEX, (state, match, start, end) => {\n                const [okay, alt, src, matchedTitle] = match;\n                const { tr } = state;\n                if (okay) {\n                    tr.replaceWith(start - 1, end, type.create(Object.assign({ src,\n                        alt }, getLayoutAndTitle(matchedTitle))));\n                }\n                return tr;\n            }),\n        ];\n    }\n    get plugins() {\n        return [uploadPlaceholder_1.default, uploadPlugin(this.options)];\n    }\n}\nexports.default = Image;\nconst Button = styled_components_1.default.button `\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  border: 0;\n  margin: 0;\n  padding: 0;\n  border-radius: 4px;\n  background: ${props => props.theme.background};\n  color: ${props => props.theme.textSecondary};\n  width: 24px;\n  height: 24px;\n  display: inline-block;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 100ms ease-in-out;\n\n  &:active {\n    transform: scale(0.98);\n  }\n\n  &:hover {\n    color: ${props => props.theme.text};\n    opacity: 1;\n  }\n`;\nconst ImageWrapper = styled_components_1.default.span `\n  line-height: 0;\n  display: inline-block;\n  position: relative;\n\n  &:hover {\n    ${Button} {\n      opacity: 0.9;\n    }\n  }\n`;\nconst Caption = styled_components_1.default.p `\n  border: 0;\n  display: block;\n  font-size: 13px;\n  font-style: italic;\n  color: ${props => props.theme.textSecondary};\n  padding: 2px 0;\n  line-height: 16px;\n  text-align: center;\n  min-height: 1em;\n  outline: none;\n  background: none;\n  resize: none;\n  user-select: text;\n  cursor: text;\n\n  &:empty:before {\n    color: ${props => props.theme.placeholder};\n    content: \"Write a caption\";\n    pointer-events: none;\n  }\n`;\n//# sourceMappingURL=Image.js.map"]},"metadata":{},"sourceType":"script"}