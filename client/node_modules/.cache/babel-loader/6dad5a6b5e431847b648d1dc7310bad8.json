{"ast":null,"code":"export default class PostService {\n  constructor() {\n    this.posts = [{\n      \"id\": 1,\n      \"category\": \"react\",\n      \"title\": \"This is first post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    }, {\n      \"id\": 2,\n      \"category\": \"react\",\n      \"title\": \"This is second post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    }];\n    this.baseURL = 'http://localhost:8080';\n  }\n\n  async getPosts() {\n    return this.posts; // const res =  await fetch(`${this.baseURL}/post`, {\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   method: 'GET'\n    // });\n    // let data;\n    // try{\n    //   data = res.json();\n    // }catch(err){\n    //   console.error(err)\n    // }\n    // return data;\n  }\n\n  async getPostById(id) {\n    return this.posts.filter(post => parseInt(post.id) === parseInt(id));\n  }\n\n  async getPostsByCategory() {}\n\n  async createPost(title, category, text) {\n    const post = {\n      id: Date.now().toString,\n      title,\n      category,\n      text,\n      createAt: new Date().toString\n    };\n    return this.posts = [post, ...this.posts];\n  }\n\n  async updatePost() {}\n\n  async deletePost() {}\n\n}","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/service/post.js"],"names":["PostService","constructor","posts","Date","toString","baseURL","getPosts","getPostById","id","filter","post","parseInt","getPostsByCategory","createPost","title","category","text","now","createAt","updatePost","deletePost"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,GAAI;AAAA,SAIfC,KAJe,GAIP,CACN;AACE,YAAM,CADR;AAEE,kBAAY,OAFd;AAGE,eAAS,oBAHX;AAIE,cAAQ,uXAJV;AAKE,kBAAY,IAAIC,IAAJ,GAAWC,QAAX;AALd,KADM,EAQN;AACE,YAAM,CADR;AAEE,kBAAY,OAFd;AAGE,eAAS,qBAHX;AAIE,cAAQ,uXAJV;AAKE,kBAAY,IAAID,IAAJ,GAAWC,QAAX;AALd,KARM,CAJO;AACb,SAAKC,OAAL,GAAe,uBAAf;AACD;;AAmBa,QAARC,QAAQ,GAAG;AACf,WAAO,KAAKJ,KAAZ,CADe,CAEf;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD;;AAEgB,QAAXK,WAAW,CAACC,EAAD,EAAK;AACpB,WAAO,KAAKN,KAAL,CAAWO,MAAX,CAAkBC,IAAI,IAAIC,QAAQ,CAACD,IAAI,CAACF,EAAN,CAAR,KAAsBG,QAAQ,CAACH,EAAD,CAAxD,CAAP;AACD;;AAEuB,QAAlBI,kBAAkB,GAAG,CAE1B;;AAEe,QAAVC,UAAU,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAAwB;AACtC,UAAMN,IAAI,GAAG;AACXF,MAAAA,EAAE,EAAEL,IAAI,CAACc,GAAL,GAAWb,QADJ;AAEXU,MAAAA,KAFW;AAGXC,MAAAA,QAHW;AAIXC,MAAAA,IAJW;AAKXE,MAAAA,QAAQ,EAAE,IAAIf,IAAJ,GAAWC;AALV,KAAb;AAQA,WAAO,KAAKF,KAAL,GAAa,CAACQ,IAAD,EAAO,GAAG,KAAKR,KAAf,CAApB;AACD;;AAEe,QAAViB,UAAU,GAAG,CAElB;;AAEe,QAAVC,UAAU,GAAG,CAElB;;AAnE8B","sourcesContent":["export default class PostService {\n  constructor () {\n    this.baseURL = 'http://localhost:8080';\n  }\n\n  posts = [\n    {\n      \"id\": 1,\n      \"category\": \"react\",\n      \"title\": \"This is first post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    },\n    {\n      \"id\": 2,\n      \"category\": \"react\",\n      \"title\": \"This is second post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    }\n  ]\n\n  async getPosts() {\n    return this.posts;\n    // const res =  await fetch(`${this.baseURL}/post`, {\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   method: 'GET'\n    // });\n\n    // let data;\n    // try{\n    //   data = res.json();\n    // }catch(err){\n    //   console.error(err)\n    // }\n\n    // return data;\n  }\n\n  async getPostById(id) {\n    return this.posts.filter(post => parseInt(post.id) === parseInt(id));\n  }\n\n  async getPostsByCategory() {\n\n  }\n\n  async createPost(title, category, text) {\n    const post = {\n      id: Date.now().toString,\n      title,\n      category,\n      text,\n      createAt: new Date().toString\n    }\n\n    return this.posts = [post, ...this.posts];\n  }\n\n  async updatePost() {\n\n  }\n\n  async deletePost() {\n\n  }\n}"]},"metadata":{},"sourceType":"module"}