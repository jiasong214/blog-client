{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/Portfolio/personal-blog/client/src/pages/CreatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport '../style/createPost.scss';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = ({\n  postService\n}) => {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const [formerData, setFormerData] = useState();\n  const [postTitle, setPostTitle] = useState();\n  const [postCategory, setPostCategory] = useState();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  useEffect(() => {\n    if (params.id) {\n      console.log(params.id);\n      postService.getPostById(params.id).then(data => setFormerData(data)).catch(console.error());\n    }\n  }, [postService, params.id]);\n  console.log(formerData); //input handling\n\n  const onTitleChange = event => setPostTitle(event.target.value);\n\n  const onCategoryChange = event => setPostCategory(event.target.value);\n\n  const onEditorStateChange = editorState => setEditorState(editorState); //convert text to html\n\n\n  const convertToHtml = editorState => {\n    const rawText = convertToRaw(editorState.getCurrentContent());\n    const HtmlConversion = draftToHtml(rawText);\n    return HtmlConversion;\n  }; //convert category to array\n\n\n  const convertToArray = postCategory => {\n    if (!postCategory) return;\n    return postCategory.split(' ');\n  };\n\n  console.log(params);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const post = {\n      category: convertToArray(postCategory),\n      title: postTitle,\n      text: convertToHtml(editorState)\n    };\n    postService.createPost(post.category, post.title, post.text).then(data => console.log(data)).catch(console.error());\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPost\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"createPost__title\",\n        placeholder: \"Title\" // value={postTitle ? postTitle : ''}\n        ,\n        value: formerData ? formerData.title : postTitle ? postTitle : '',\n        onChange: event => onTitleChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"createPost__category\",\n        placeholder: \"#React #Javascript\",\n        value: postCategory ? postCategory : '',\n        onChange: event => onCategoryChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        wrapperClassName: \"createPost__wrapper\",\n        editorClassName: \"createPost__editor\" //language setting\n        ,\n        localization: {\n          locale: \"en\"\n        } //tool bar setting\n        ,\n        toolbar: {\n          inline: {\n            inDropdown: true\n          },\n          list: {\n            inDropdown: true\n          },\n          textAlign: {\n            inDropdown: true\n          },\n          link: {\n            inDropdown: true\n          },\n          history: {\n            inDropdown: true\n          },\n          blockType: {\n            inDropdown: true\n          }\n        } //default state\n        ,\n        editorState: editorState //update state event\n        ,\n        onEditorStateChange: onEditorStateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"createPost__submitBtn\",\n        children: \"Compost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"spfR1mN/ZADvbXnMtcykrtkpd90=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/pages/CreatePost.jsx"],"names":["React","useEffect","useState","useParams","useHistory","Editor","EditorState","convertToRaw","draftToHtml","CreatePost","postService","history","params","formerData","setFormerData","postTitle","setPostTitle","postCategory","setPostCategory","editorState","setEditorState","createEmpty","id","console","log","getPostById","then","data","catch","error","onTitleChange","event","target","value","onCategoryChange","onEditorStateChange","convertToHtml","rawText","getCurrentContent","HtmlConversion","convertToArray","split","onSubmit","preventDefault","post","category","title","text","createPost","push","locale","inline","inDropdown","list","textAlign","link","blockType"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport '../style/createPost.scss';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nconst CreatePost = ({postService}) => {\n  const history = useHistory();\n  const params = useParams();\n  const [formerData, setFormerData] = useState();\n  const [postTitle, setPostTitle] = useState();\n  const [postCategory, setPostCategory] = useState();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  useEffect(() => {\n    if(params.id){\n      console.log(params.id)\n      postService\n        .getPostById(params.id)\n        .then((data) => setFormerData(data))\n        .catch(console.error());\n    }\n  }, [postService, params.id]);\n\n  console.log(formerData)\n\n  //input handling\n  const onTitleChange = (event) => setPostTitle(event.target.value);\n  const onCategoryChange = (event) => setPostCategory(event.target.value);\n  const onEditorStateChange = (editorState) => setEditorState(editorState);\n\n  //convert text to html\n  const convertToHtml = (editorState) => {\n    const rawText = convertToRaw(editorState.getCurrentContent())\n    const HtmlConversion = draftToHtml(rawText);\n\n    return HtmlConversion;\n  }\n\n  //convert category to array\n  const convertToArray = (postCategory) => {\n    if(!postCategory) return;\n    return postCategory.split(' ');\n  }\n\n  console.log(params)\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const post = {\n      category: convertToArray(postCategory),\n      title: postTitle,\n      text: convertToHtml(editorState)\n    }\n\n    postService\n      .createPost(post.category, post.title , post.text)\n      .then((data) => console.log(data))\n      .catch(console.error());\n\n    history.push(\"/\");\n  }\n\n\n  return (\n    <div className=\"createPost\">\n      <form onSubmit={onSubmit}>\n        <input \n          type=\"text\" \n          className=\"createPost__title\" \n          placeholder=\"Title\" \n          // value={postTitle ? postTitle : ''}\n          value={formerData ? formerData.title : postTitle ? postTitle: ''}\n          onChange={(event) => onTitleChange(event)} \n        />\n        <input  \n          type=\"text\" \n          className=\"createPost__category\" \n          placeholder=\"#React #Javascript\" \n          value={postCategory ? postCategory : ''} \n          onChange={(event) => onCategoryChange(event)} \n        />\n        <Editor\n          wrapperClassName=\"createPost__wrapper\"\n          editorClassName=\"createPost__editor\"\n          \n          //language setting\n          localization={{ locale: \"en\" }}\n          //tool bar setting\n          toolbar={{\n            inline: { inDropdown: true },\n            list: { inDropdown: true },\n            textAlign: { inDropdown: true },\n            link: { inDropdown: true },\n            history: { inDropdown: true },\n            blockType: { inDropdown: true }\n          }}\n\n          //default state\n          editorState={editorState}\n          //update state event\n          onEditorStateChange={onEditorStateChange}\n        />\n        <button type='submit' className=\"createPost__submitBtn\">Compost</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}