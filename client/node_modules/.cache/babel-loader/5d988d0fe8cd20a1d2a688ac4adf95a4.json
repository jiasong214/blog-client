{"ast":null,"code":"export default class PostService {\n  constructor() {\n    this.posts = [{\n      \"id\": 1,\n      \"category\": [\"#React\"],\n      \"title\": \"This is first post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    }, {\n      \"id\": 2,\n      \"category\": [\"#React\", \"#Javascript\"],\n      \"title\": \"This is second post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    }, {\n      \"id\": 3,\n      \"category\": [\"#React\", \"#Javascript\", \"#Node\"],\n      \"title\": \"This is third post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    }];\n    this.baseURL = 'http://localhost:8080';\n  }\n\n  async getPosts() {\n    return this.posts; // const res =  await fetch(`${this.baseURL}/post`, {\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   method: 'GET'\n    // });\n    // let data;\n    // try{\n    //   data = res.json();\n    // }catch(err){\n    //   console.error(err)\n    // }\n    // return data;\n  }\n\n  async getPostById(id) {\n    return this.posts.filter(post => parseInt(post.id) === parseInt(id));\n  }\n\n  async getPostsByCategory(category) {\n    if (category) {\n      return this.posts.filter(post => post.category.includes(category));\n    }\n\n    return this.posts;\n  }\n\n  async createPost(category, title, text) {\n    const post = {\n      id: Date.now().toString(),\n      category,\n      title,\n      text,\n      createAt: new Date().toString()\n    };\n    return this.posts = [post, ...this.posts];\n  }\n\n  async updatePost(id, category, title, text) {\n    const post = this.posts.find(post => parseInt(post.id) === parseInt(id));\n    post.category = category;\n    post.title = title;\n    post.text = text;\n    return this.posts;\n  }\n\n  async deletePost(id) {\n    return this.posts = this.posts.filter(post => parseInt(post.id) !== parseInt(id));\n  }\n\n  async getCategories() {\n    const categoryArr = [];\n    this.posts.forEach(post => {\n      post.category.forEach(item => {\n        if (categoryArr.includes(item)) return;\n        categoryArr.push(item);\n      });\n    });\n    return categoryArr;\n  }\n\n}","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/service/post.js"],"names":["PostService","constructor","posts","Date","toString","baseURL","getPosts","getPostById","id","filter","post","parseInt","getPostsByCategory","category","includes","createPost","title","text","now","createAt","updatePost","find","deletePost","getCategories","categoryArr","forEach","item","push"],"mappings":"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","sourcesContent":["export default class PostService {\n  constructor () {\n    this.baseURL = 'http://localhost:8080';\n  }\n\n  posts = [\n    {\n      \"id\": 1,\n      \"category\": [\"#React\"],\n      \"title\": \"This is first post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    },\n    {\n      \"id\": 2,\n      \"category\": [\"#React\", \"#Javascript\"],\n      \"title\": \"This is second post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    },\n    {\n      \"id\": 3,\n      \"category\": [\"#React\", \"#Javascript\", \"#Node\"],\n      \"title\": \"This is third post\",\n      \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed efficitur orci a metus pharetra rutrum. Etiam condimentum magna sed imperdiet scelerisque. Quisque tristique, elit sit amet posuere eleifend, augue dolor malesuada elit, a ornare lectus odio a tellus. Cras consequat non nisi non rhoncus. Nam ac libero a elit elementum efficitur. Sed suscipit vulputate vehicula.\",\n      \"createAt\": new Date().toString()\n    }\n  ]\n\n  async getPosts() {\n    return this.posts;\n    // const res =  await fetch(`${this.baseURL}/post`, {\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   method: 'GET'\n    // });\n\n    // let data;\n    // try{\n    //   data = res.json();\n    // }catch(err){\n    //   console.error(err)\n    // }\n\n    // return data;\n  }\n\n  async getPostById(id) {\n    return this.posts.filter(post => parseInt(post.id) === parseInt(id));\n  }\n\n  async getPostsByCategory(category) {\n    if(category){\n      return this.posts.filter((post) => (\n        post.category.includes(category)\n      ))\n    }\n\n    return this.posts;\n  }\n\n  async createPost(category, title, text) {\n    const post = {\n      id: Date.now().toString(),\n      category,\n      title,\n      text,\n      createAt: new Date().toString()\n    }\n\n    return this.posts = [post, ...this.posts];\n  }\n\n  async updatePost(id, category, title, text) {\n    const post = this.posts.find((post) => parseInt(post.id) === parseInt(id));\n\n    post.category = category;\n    post.title = title;\n    post.text = text;\n\n    return this.posts;\n  }\n\n  async deletePost(id) {\n    return this.posts =  this.posts.filter((post) => parseInt(post.id) !== parseInt(id));\n  }\n\n  async getCategories() {\n    const categoryArr = [];\n    this.posts.forEach((post) => {\n      post.category.forEach((item) => {\n        if(categoryArr.includes(item)) return;\n        categoryArr.push(item);\n      })\n    });\n\n    return categoryArr;\n  }\n}"]},"metadata":{},"sourceType":"module"}