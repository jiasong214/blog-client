{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prosemirror_state_1 = require(\"prosemirror-state\");\n\nconst Extension_1 = __importDefault(require(\"../lib/Extension\"));\n\nconst isModKey_1 = __importDefault(require(\"../lib/isModKey\"));\n\nclass Keys extends Extension_1.default {\n  get name() {\n    return \"keys\";\n  }\n\n  get plugins() {\n    return [new prosemirror_state_1.Plugin({\n      props: {\n        handleDOMEvents: {\n          blur: this.options.onBlur,\n          focus: this.options.onFocus\n        },\n        handleKeyDown: (view, event) => {\n          if (view.state.selection instanceof prosemirror_state_1.AllSelection) {\n            if (event.key === \"ArrowUp\") {\n              const selection = prosemirror_state_1.Selection.atStart(view.state.doc);\n              view.dispatch(view.state.tr.setSelection(selection));\n              return true;\n            }\n\n            if (event.key === \"ArrowDown\") {\n              const selection = prosemirror_state_1.Selection.atEnd(view.state.doc);\n              view.dispatch(view.state.tr.setSelection(selection));\n              return true;\n            }\n          }\n\n          if (!isModKey_1.default(event)) {\n            return false;\n          }\n\n          if (event.key === \"s\") {\n            event.preventDefault();\n            this.options.onSave();\n            return true;\n          }\n\n          if (event.key === \"Enter\") {\n            event.preventDefault();\n            this.options.onSaveAndExit();\n            return true;\n          }\n\n          if (event.key === \"Escape\") {\n            event.preventDefault();\n            this.options.onCancel();\n            return true;\n          }\n\n          return false;\n        }\n      }\n    })];\n  }\n\n}\n\nexports.default = Keys;","map":{"version":3,"sources":["../../src/plugins/Keys.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AACA,MAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AACA,MAAqB,IAArB,SAAkC,WAAA,CAAA,OAAlC,CAA2C;AACjC,MAAJ,IAAI,GAAA;AACN,WAAO,MAAP;AACD;;AAEU,MAAP,OAAO,GAAA;AACT,WAAO,CACL,IAAI,mBAAA,CAAA,MAAJ,CAAW;AACT,MAAA,KAAK,EAAE;AACL,QAAA,eAAe,EAAE;AACf,UAAA,IAAI,EAAE,KAAK,OAAL,CAAa,MADJ;AAEf,UAAA,KAAK,EAAE,KAAK,OAAL,CAAa;AAFL,SADZ;AAOL,QAAA,aAAa,EAAE,CAAC,IAAD,EAAO,KAAP,KAAgB;AAC7B,cAAI,IAAI,CAAC,KAAL,CAAW,SAAX,YAAgC,mBAAA,CAAA,YAApC,EAAkD;AAChD,gBAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,oBAAM,SAAS,GAAG,mBAAA,CAAA,SAAA,CAAU,OAAV,CAAkB,IAAI,CAAC,KAAL,CAAW,GAA7B,CAAlB;AACA,cAAA,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,YAAd,CAA2B,SAA3B,CAAd;AACA,qBAAO,IAAP;AACD;;AACD,gBAAI,KAAK,CAAC,GAAN,KAAc,WAAlB,EAA+B;AAC7B,oBAAM,SAAS,GAAG,mBAAA,CAAA,SAAA,CAAU,KAAV,CAAgB,IAAI,CAAC,KAAL,CAAW,GAA3B,CAAlB;AACA,cAAA,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,YAAd,CAA2B,SAA3B,CAAd;AACA,qBAAO,IAAP;AACD;AACF;;AAGD,cAAI,CAAC,UAAA,CAAA,OAAA,CAAS,KAAT,CAAL,EAAsB;AACpB,mBAAO,KAAP;AACD;;AAED,cAAI,KAAK,CAAC,GAAN,KAAc,GAAlB,EAAuB;AACrB,YAAA,KAAK,CAAC,cAAN;AACA,iBAAK,OAAL,CAAa,MAAb;AACA,mBAAO,IAAP;AACD;;AAED,cAAI,KAAK,CAAC,GAAN,KAAc,OAAlB,EAA2B;AACzB,YAAA,KAAK,CAAC,cAAN;AACA,iBAAK,OAAL,CAAa,aAAb;AACA,mBAAO,IAAP;AACD;;AAED,cAAI,KAAK,CAAC,GAAN,KAAc,QAAlB,EAA4B;AAC1B,YAAA,KAAK,CAAC,cAAN;AACA,iBAAK,OAAL,CAAa,QAAb;AACA,mBAAO,IAAP;AACD;;AAED,iBAAO,KAAP;AACD;AA7CI;AADE,KAAX,CADK,CAAP;AAmDD;;AAzDwC;;AAA3C,OAAA,CAAA,OAAA,GAAA,IAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prosemirror_state_1 = require(\"prosemirror-state\");\nconst Extension_1 = __importDefault(require(\"../lib/Extension\"));\nconst isModKey_1 = __importDefault(require(\"../lib/isModKey\"));\nclass Keys extends Extension_1.default {\n    get name() {\n        return \"keys\";\n    }\n    get plugins() {\n        return [\n            new prosemirror_state_1.Plugin({\n                props: {\n                    handleDOMEvents: {\n                        blur: this.options.onBlur,\n                        focus: this.options.onFocus,\n                    },\n                    handleKeyDown: (view, event) => {\n                        if (view.state.selection instanceof prosemirror_state_1.AllSelection) {\n                            if (event.key === \"ArrowUp\") {\n                                const selection = prosemirror_state_1.Selection.atStart(view.state.doc);\n                                view.dispatch(view.state.tr.setSelection(selection));\n                                return true;\n                            }\n                            if (event.key === \"ArrowDown\") {\n                                const selection = prosemirror_state_1.Selection.atEnd(view.state.doc);\n                                view.dispatch(view.state.tr.setSelection(selection));\n                                return true;\n                            }\n                        }\n                        if (!isModKey_1.default(event)) {\n                            return false;\n                        }\n                        if (event.key === \"s\") {\n                            event.preventDefault();\n                            this.options.onSave();\n                            return true;\n                        }\n                        if (event.key === \"Enter\") {\n                            event.preventDefault();\n                            this.options.onSaveAndExit();\n                            return true;\n                        }\n                        if (event.key === \"Escape\") {\n                            event.preventDefault();\n                            this.options.onCancel();\n                            return true;\n                        }\n                        return false;\n                    },\n                },\n            }),\n        ];\n    }\n}\nexports.default = Keys;\n//# sourceMappingURL=Keys.js.map"]},"metadata":{},"sourceType":"script"}