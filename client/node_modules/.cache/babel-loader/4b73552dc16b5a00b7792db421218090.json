{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prosemirror_commands_1 = require(\"prosemirror-commands\");\n\nconst isNodeActive_1 = __importDefault(require(\"../queries/isNodeActive\"));\n\nfunction toggleBlockType(type, toggleType, attrs = {}) {\n  return (state, dispatch) => {\n    const isActive = isNodeActive_1.default(type, attrs)(state);\n\n    if (isActive) {\n      return prosemirror_commands_1.setBlockType(toggleType)(state, dispatch);\n    }\n\n    return prosemirror_commands_1.setBlockType(type, attrs)(state, dispatch);\n  };\n}\n\nexports.default = toggleBlockType;","map":{"version":3,"sources":["../../src/commands/toggleBlockType.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,sBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AAEA,SAAwB,eAAxB,CAAwC,IAAxC,EAA8C,UAA9C,EAA0D,KAAK,GAAG,EAAlE,EAAoE;AAClE,SAAO,CAAC,KAAD,EAAQ,QAAR,KAAoB;AACzB,UAAM,QAAQ,GAAG,cAAA,CAAA,OAAA,CAAa,IAAb,EAAmB,KAAnB,EAA0B,KAA1B,CAAjB;;AAEA,QAAI,QAAJ,EAAc;AACZ,aAAO,sBAAA,CAAA,YAAA,CAAa,UAAb,EAAyB,KAAzB,EAAgC,QAAhC,CAAP;AACD;;AAED,WAAO,sBAAA,CAAA,YAAA,CAAa,IAAb,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,QAAjC,CAAP;AACD,GARD;AASD;;AAVD,OAAA,CAAA,OAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prosemirror_commands_1 = require(\"prosemirror-commands\");\nconst isNodeActive_1 = __importDefault(require(\"../queries/isNodeActive\"));\nfunction toggleBlockType(type, toggleType, attrs = {}) {\n    return (state, dispatch) => {\n        const isActive = isNodeActive_1.default(type, attrs)(state);\n        if (isActive) {\n            return prosemirror_commands_1.setBlockType(toggleType)(state, dispatch);\n        }\n        return prosemirror_commands_1.setBlockType(type, attrs)(state, dispatch);\n    };\n}\nexports.default = toggleBlockType;\n//# sourceMappingURL=toggleBlockType.js.map"]},"metadata":{},"sourceType":"script"}