{"ast":null,"code":"export default class AuthService {\n  constructor(http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n\n  async login(username, password) {\n    const data = await this.http.fetch(`/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async me() {\n    console.log(\"authService\");\n    const token = await this.tokenStorage.getToken();\n    return this.http.fetch(`/auth/me`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n\n}","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/service/auth.js"],"names":["AuthService","constructor","http","tokenStorage","login","username","password","data","fetch","method","body","JSON","stringify","saveToken","token","me","console","log","getToken","headers","Authorization","logout","clearToken"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,CAAEC,IAAF,EAAQC,YAAR,EAAsB;AAC/B,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACD;;AAEU,QAALC,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC9B,UAAMC,IAAI,GAAI,MAAM,KAAKL,IAAL,CAAUM,KAAV,CAAiB,aAAjB,EAA+B;AACjDC,MAAAA,MAAM,EAAE,MADyC;AAEjDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAf;AAF2C,KAA/B,CAApB;AAIA,SAAKH,YAAL,CAAkBU,SAAlB,CAA4BN,IAAI,CAACO,KAAjC;AAEA,WAAOP,IAAP;AACD;;AAEO,QAAFQ,EAAE,GAAG;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAMH,KAAK,GAAG,MAAM,KAAKX,YAAL,CAAkBe,QAAlB,EAApB;AAEA,WAAO,KAAKhB,IAAL,CAAUM,KAAV,CAAiB,UAAjB,EAA4B;AACjCC,MAAAA,MAAM,EAAE,KADyB;AAEjCU,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASN,KAAM;AAAjC;AAFwB,KAA5B,CAAP;AAID;;AAEW,QAANO,MAAM,GAAG;AACb,SAAKlB,YAAL,CAAkBmB,UAAlB;AACD;;AA5B8B","sourcesContent":["export default class AuthService {\n  constructor (http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n\n  async login(username, password) {\n    const data =  await this.http.fetch(`/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password })\n    });\n    this.tokenStorage.saveToken(data.token);\n\n    return data;\n  }\n\n  async me() {\n    console.log(\"authService\")\n    const token = await this.tokenStorage.getToken();\n\n    return this.http.fetch(`/auth/me`, {\n      method: 'GET',\n      headers: { Authorization: `Bearer ${token}` }\n    });\n  }\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n}"]},"metadata":{},"sourceType":"module"}