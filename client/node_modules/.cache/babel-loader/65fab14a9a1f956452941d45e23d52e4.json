{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/Portfolio/personal-blog/client/src/components/Markdown.jsx\";\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport gfm from 'remark-gfm';\nimport '../style/markdown.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Markdown = ({\n  text\n}) => {\n  const syntaxHighlighter = {\n    code({\n      node,\n      inline,\n      className,\n      children,\n      ...props\n    }) {\n      const match = /language-(\\w+)/.exec(className || '');\n      return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        language: match[1],\n        PreTag: \"div\",\n        children: String(children).replace(/\\n$/, ''),\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n        className: className,\n        ...props,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"markdown\",\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      components: {\n        syntaxHighlighter,\n        // Map `h1` (`# heading`) to use `h2`s.\n        h1: 'h2',\n        // Rewrite `em`s (`*like so*`) to `i` with a red foreground color.\n        em: ({\n          node,\n          ...props\n        }) => /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            color: 'red'\n          },\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 37\n        }, this)\n      } // components={syntaxHighlighter}\n      ,\n      remarkPlugins: [gfm],\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Markdown;\nexport default Markdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Markdown\");","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/components/Markdown.jsx"],"names":["React","ReactMarkdown","Prism","SyntaxHighlighter","gfm","Markdown","text","syntaxHighlighter","code","node","inline","className","children","props","match","exec","String","replace","h1","em","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,KAAK,IAAIC,iBAAjB,QAAyC,0BAAzC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAO,wBAAP;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAE3B,QAAMC,iBAAiB,GAAG;AACxBC,IAAAA,IAAI,CAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA,MAAP;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA,QAA1B;AAAoC,SAAGC;AAAvC,KAAD,EAAgD;AAClD,YAAMC,KAAK,GAAG,iBAAiBC,IAAjB,CAAsBJ,SAAS,IAAI,EAAnC,CAAd;AACA,aAAO,CAACD,MAAD,IAAWI,KAAX,gBACL,QAAC,iBAAD;AAAmB,QAAA,QAAQ,EAAEA,KAAK,CAAC,CAAD,CAAlC;AAAuC,QAAA,MAAM,EAAC,KAA9C;AAAoD,QAAA,QAAQ,EAAEE,MAAM,CAACJ,QAAD,CAAN,CAAiBK,OAAjB,CAAyB,KAAzB,EAAgC,EAAhC,CAA9D;AAAA,WAAuGJ;AAAvG;AAAA;AAAA;AAAA;AAAA,cADK,gBAGL;AAAM,QAAA,SAAS,EAAEF,SAAjB;AAAA,WAAgCE,KAAhC;AAAA,kBACGD;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAOD;;AAVuB,GAA1B;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,UAAU,EACR;AACEL,QAAAA,iBADF;AAGA;AACAW,QAAAA,EAAE,EAAE,IAJJ;AAKA;AACAC,QAAAA,EAAE,EAAE,CAAC;AAACV,UAAAA,IAAD;AAAO,aAAGI;AAAV,SAAD,kBAAsB;AAAG,UAAA,KAAK,EAAE;AAACO,YAAAA,KAAK,EAAE;AAAR,WAAV;AAAA,aAA8BP;AAA9B;AAAA;AAAA;AAAA;AAAA;AAN1B,OAFJ,CAUE;AAVF;AAWE,MAAA,aAAa,EAAE,CAACT,GAAD,CAXjB;AAYE,MAAA,QAAQ,EAAEE;AAZZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhCD;;KAAMD,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport gfm from 'remark-gfm';\nimport '../style/markdown.scss';\n\n\nconst Markdown = ({text}) => {\n\n  const syntaxHighlighter = {\n    code({node, inline, className, children, ...props}) {\n      const match = /language-(\\w+)/.exec(className || '')\n      return !inline && match ? (\n        <SyntaxHighlighter language={match[1]} PreTag=\"div\" children={String(children).replace(/\\n$/, '')} {...props} />\n      ) : (\n        <code className={className} {...props}>\n          {children}\n        </code>\n      )\n    }\n  }\n\n  return (\n    <div className=\"markdown\">\n      <ReactMarkdown\n        components={\n          {\n            syntaxHighlighter,\n          \n          // Map `h1` (`# heading`) to use `h2`s.\n          h1: 'h2',\n          // Rewrite `em`s (`*like so*`) to `i` with a red foreground color.\n          em: ({node, ...props}) => <i style={{color: 'red'}} {...props} />\n        }}\n        // components={syntaxHighlighter}\n        remarkPlugins={[gfm]} \n        children={text} />\n    </div>\n  )\n}\n\nexport default Markdown;"]},"metadata":{},"sourceType":"module"}