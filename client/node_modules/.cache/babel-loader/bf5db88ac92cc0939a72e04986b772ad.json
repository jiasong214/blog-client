{"ast":null,"code":"export default class PostService {\n  constructor() {\n    this.baseURL = 'http://localhost:8080';\n  }\n\n  async getPostsByCategory(category) {\n    function trimCategoryStr(category) {\n      const lowerStr = category.toString().toLowerCase();\n      const pureStr = lowerStr.split(\"#\");\n      return pureStr[1];\n    }\n\n    const query = category ? `/category/${trimCategoryStr(category)}` : '';\n    const res = await fetch(`${this.baseURL}/post${query}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    });\n    let data;\n\n    try {\n      data = res.json();\n    } catch (err) {\n      console.error(err);\n    }\n\n    return data;\n  }\n\n  async getPostById(id) {\n    const res = await fetch(`${this.baseURL}/post/${id}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    });\n    let data;\n\n    try {\n      data = res.json();\n    } catch (err) {\n      console.error(err);\n    }\n\n    return data;\n  }\n\n  async createPost(category, title, text) {\n    const res = await fetch(`${this.baseURL}/post`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        category,\n        title,\n        text\n      })\n    });\n    let data;\n\n    try {\n      data = res.json();\n    } catch (err) {\n      console.error(err);\n    }\n\n    return data;\n  }\n\n  async updatePost(id, category, title, text) {\n    const res = await fetch(`${this.baseURL}/post/${id}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'PUT',\n      body: JSON.stringify({\n        category,\n        title,\n        text\n      })\n    });\n    let data;\n\n    try {\n      data = res.json();\n    } catch (err) {\n      console.error(err);\n    }\n\n    return data;\n  }\n\n  async deletePost(id) {\n    const res = await fetch(`${this.baseURL}/post/${id}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'DELETE'\n    }); // let data;\n    // try{\n    //   data = res.json();\n    // }catch(err){\n    //   console.error(err)\n    // }\n    // return data;\n  }\n\n  async getCategories() {\n    const res = await fetch(`${this.baseURL}/category`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    });\n    let data;\n\n    try {\n      data = res.json();\n    } catch (err) {\n      console.error(err);\n    }\n\n    return data;\n  }\n\n}","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/service/post.js"],"names":["PostService","constructor","baseURL","getPostsByCategory","category","trimCategoryStr","lowerStr","toString","toLowerCase","pureStr","split","query","res","fetch","headers","method","data","json","err","console","error","getPostById","id","createPost","title","text","body","JSON","stringify","updatePost","deletePost","getCategories"],"mappings":"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","sourcesContent":["export default class PostService {\n  constructor () {\n    this.baseURL = 'http://localhost:8080';\n  }\n\n  async getPostsByCategory(category) {\n\n    function trimCategoryStr(category) {\n      const lowerStr = category.toString().toLowerCase();\n      const pureStr = lowerStr.split(\"#\");\n      return pureStr[1];\n    }\n\n    const query = category ? `/category/${trimCategoryStr(category)}` : '';\n    const res =  await fetch(`${this.baseURL}/post${query}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'GET'\n    });\n\n    let data;\n    try{\n      data = res.json();\n    }catch(err){\n      console.error(err)\n    }\n\n    return data;\n  }\n\n  async getPostById(id) {\n    const res =  await fetch(`${this.baseURL}/post/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'GET'\n    });\n\n    let data;\n    try{\n      data = res.json();\n    }catch(err){\n      console.error(err)\n    }\n\n    return data;\n  }\n\n  async createPost(category, title, text) {\n    const res =  await fetch(`${this.baseURL}/post`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify({ category, title, text })\n    });\n\n    let data;\n    try{\n      data = res.json();\n    }catch(err){\n      console.error(err)\n    }\n\n    return data;\n  }\n\n  async updatePost(id, category, title, text) {\n    const res =  await fetch(`${this.baseURL}/post/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'PUT',\n      body: JSON.stringify({ category, title, text })\n    });\n\n    let data;\n    try{\n      data = res.json();\n    }catch(err){\n      console.error(err)\n    }\n\n    return data;\n  }\n\n  async deletePost(id) {\n    const res =  await fetch(`${this.baseURL}/post/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'DELETE',\n    });\n\n    // let data;\n    // try{\n    //   data = res.json();\n    // }catch(err){\n    //   console.error(err)\n    // }\n\n    // return data;\n  }\n\n  async getCategories() {\n    const res =  await fetch(`${this.baseURL}/category`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'GET'\n    });\n\n    let data;\n    try{\n      data = res.json();\n    }catch(err){\n      console.error(err)\n    }\n\n    return data;\n  }\n}"]},"metadata":{},"sourceType":"module"}