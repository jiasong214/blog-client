{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findPlaceholder = void 0;\n\nconst prosemirror_state_1 = require(\"prosemirror-state\");\n\nconst prosemirror_view_1 = require(\"prosemirror-view\");\n\nconst uploadPlaceholder = new prosemirror_state_1.Plugin({\n  state: {\n    init() {\n      return prosemirror_view_1.DecorationSet.empty;\n    },\n\n    apply(tr, set) {\n      set = set.map(tr.mapping, tr.doc);\n      const action = tr.getMeta(this);\n\n      if (action && action.add) {\n        const element = document.createElement(\"div\");\n        element.className = \"image placeholder\";\n        const img = document.createElement(\"img\");\n        img.src = URL.createObjectURL(action.add.file);\n        element.appendChild(img);\n        const deco = prosemirror_view_1.Decoration.widget(action.add.pos, element, {\n          id: action.add.id\n        });\n        set = set.add(tr.doc, [deco]);\n      } else if (action && action.remove) {\n        set = set.remove(set.find(null, null, spec => spec.id === action.remove.id));\n      }\n\n      return set;\n    }\n\n  },\n  props: {\n    decorations(state) {\n      return this.getState(state);\n    }\n\n  }\n});\nexports.default = uploadPlaceholder;\n\nfunction findPlaceholder(state, id) {\n  const decos = uploadPlaceholder.getState(state);\n  const found = decos.find(null, null, spec => spec.id === id);\n  return found.length ? found[0].from : null;\n}\n\nexports.findPlaceholder = findPlaceholder;","map":{"version":3,"sources":["../../src/lib/uploadPlaceholder.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,kBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAGA,MAAM,iBAAiB,GAAG,IAAI,mBAAA,CAAA,MAAJ,CAAW;AACnC,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,GAAA;AACF,aAAO,kBAAA,CAAA,aAAA,CAAc,KAArB;AACD,KAHI;;AAIL,IAAA,KAAK,CAAC,EAAD,EAAK,GAAL,EAAQ;AAEX,MAAA,GAAG,GAAG,GAAG,CAAC,GAAJ,CAAQ,EAAE,CAAC,OAAX,EAAoB,EAAE,CAAC,GAAvB,CAAN;AAGA,YAAM,MAAM,GAAG,EAAE,CAAC,OAAH,CAAW,IAAX,CAAf;;AAEA,UAAI,MAAM,IAAI,MAAM,CAAC,GAArB,EAA0B;AACxB,cAAM,OAAO,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAhB;AACA,QAAA,OAAO,CAAC,SAAR,GAAoB,mBAApB;AAEA,cAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ;AACA,QAAA,GAAG,CAAC,GAAJ,GAAU,GAAG,CAAC,eAAJ,CAAoB,MAAM,CAAC,GAAP,CAAW,IAA/B,CAAV;AAEA,QAAA,OAAO,CAAC,WAAR,CAAoB,GAApB;AAEA,cAAM,IAAI,GAAG,kBAAA,CAAA,UAAA,CAAW,MAAX,CAAkB,MAAM,CAAC,GAAP,CAAW,GAA7B,EAAkC,OAAlC,EAA2C;AACtD,UAAA,EAAE,EAAE,MAAM,CAAC,GAAP,CAAW;AADuC,SAA3C,CAAb;AAGA,QAAA,GAAG,GAAG,GAAG,CAAC,GAAJ,CAAQ,EAAE,CAAC,GAAX,EAAgB,CAAC,IAAD,CAAhB,CAAN;AACD,OAbD,MAaO,IAAI,MAAM,IAAI,MAAM,CAAC,MAArB,EAA6B;AAClC,QAAA,GAAG,GAAG,GAAG,CAAC,MAAJ,CACJ,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAe,IAAf,EAAqB,IAAI,IAAI,IAAI,CAAC,EAAL,KAAY,MAAM,CAAC,MAAP,CAAc,EAAvD,CADI,CAAN;AAGD;;AACD,aAAO,GAAP;AACD;;AA9BI,GAD4B;AAiCnC,EAAA,KAAK,EAAE;AACL,IAAA,WAAW,CAAC,KAAD,EAAM;AACf,aAAO,KAAK,QAAL,CAAc,KAAd,CAAP;AACD;;AAHI;AAjC4B,CAAX,CAA1B;AAwCA,OAAA,CAAA,OAAA,GAAe,iBAAf;;AAEA,SAAgB,eAAhB,CAAgC,KAAhC,EAAuC,EAAvC,EAAyC;AACvC,QAAM,KAAK,GAAG,iBAAiB,CAAC,QAAlB,CAA2B,KAA3B,CAAd;AACA,QAAM,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAI,IAAI,IAAI,CAAC,EAAL,KAAY,EAA3C,CAAd;AACA,SAAO,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,CAAD,CAAL,CAAS,IAAxB,GAA+B,IAAtC;AACD;;AAJD,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findPlaceholder = void 0;\nconst prosemirror_state_1 = require(\"prosemirror-state\");\nconst prosemirror_view_1 = require(\"prosemirror-view\");\nconst uploadPlaceholder = new prosemirror_state_1.Plugin({\n    state: {\n        init() {\n            return prosemirror_view_1.DecorationSet.empty;\n        },\n        apply(tr, set) {\n            set = set.map(tr.mapping, tr.doc);\n            const action = tr.getMeta(this);\n            if (action && action.add) {\n                const element = document.createElement(\"div\");\n                element.className = \"image placeholder\";\n                const img = document.createElement(\"img\");\n                img.src = URL.createObjectURL(action.add.file);\n                element.appendChild(img);\n                const deco = prosemirror_view_1.Decoration.widget(action.add.pos, element, {\n                    id: action.add.id,\n                });\n                set = set.add(tr.doc, [deco]);\n            }\n            else if (action && action.remove) {\n                set = set.remove(set.find(null, null, spec => spec.id === action.remove.id));\n            }\n            return set;\n        },\n    },\n    props: {\n        decorations(state) {\n            return this.getState(state);\n        },\n    },\n});\nexports.default = uploadPlaceholder;\nfunction findPlaceholder(state, id) {\n    const decos = uploadPlaceholder.getState(state);\n    const found = decos.find(null, null, spec => spec.id === id);\n    return found.length ? found[0].from : null;\n}\nexports.findPlaceholder = findPlaceholder;\n//# sourceMappingURL=uploadPlaceholder.js.map"]},"metadata":{},"sourceType":"script"}