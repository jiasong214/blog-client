{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/Portfolio/personal-blog/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './pages/Main';\nimport Post from './pages/Post';\nimport Login from './pages/Login';\nimport CreatePost from './pages/CreatePost';\nimport HttpClient from './network/http';\nimport PostService from './service/post.js';\nimport AuthService from './service/auth';\nimport TokenStorage from './db/token'; //class that manage token in localStorage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tokenStorage = new TokenStorage(); //basic url from env file\n\nconst baseURL = process.env.REACT_APP_BASE_URL; //http request common option\n\nconst httpClient = new HttpClient(baseURL); //class that controll all post/auth related APIs\n\nconst postService = new PostService(httpClient, tokenStorage);\nconst authService = new AuthService(httpClient, tokenStorage);\n\nfunction App() {\n  _s();\n\n  const [category, setCategory] = useState();\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState(); //update post list depend on selected category\n\n  useEffect(() => {\n    postService.getPostsByCategory(category).then(data => setPosts(data)).catch(console.error());\n  }, [category]); //change category state\n\n  const changeCategory = category => setCategory(category); //change posts state when post is deleted\n\n\n  const changePostsByDelete = id => {\n    setPosts(() => posts.filter(post => parseInt(post.id) !== parseInt(id)));\n  };\n\n  const changeUserState = user => setUser(user);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        changeCategory: changeCategory,\n        tokenStorage: tokenStorage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            postService: postService,\n            posts: posts,\n            changeCategory: changeCategory,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post?id=:id\",\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            postService: postService,\n            changePostsByDelete: changePostsByDelete,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post/compost\",\n          children: /*#__PURE__*/_jsxDEV(CreatePost, {\n            postService: postService\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post/compost?id=:id\",\n          children: /*#__PURE__*/_jsxDEV(CreatePost, {\n            postService: postService\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            authService: authService,\n            changeUserState: changeUserState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"erM4/sWPOktDnPPrsalQ+TzjgyI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Switch","Header","Footer","Main","Post","Login","CreatePost","HttpClient","PostService","AuthService","TokenStorage","tokenStorage","baseURL","process","env","REACT_APP_BASE_URL","httpClient","postService","authService","App","category","setCategory","posts","setPosts","user","setUser","getPostsByCategory","then","data","catch","console","error","changeCategory","changePostsByDelete","id","filter","post","parseInt","changeUserState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './pages/Main';\nimport Post from './pages/Post';\nimport Login from './pages/Login';\nimport CreatePost from './pages/CreatePost';\nimport HttpClient from './network/http';\nimport PostService from './service/post.js';\nimport AuthService from './service/auth';\nimport TokenStorage from './db/token';\n\n//class that manage token in localStorage\nconst tokenStorage = new TokenStorage();\n\n//basic url from env file\nconst baseURL = process.env.REACT_APP_BASE_URL;\n\n//http request common option\nconst httpClient = new HttpClient(baseURL);\n\n//class that controll all post/auth related APIs\nconst postService = new PostService(httpClient, tokenStorage);\nconst authService = new AuthService(httpClient, tokenStorage);\n\nfunction App() {\n  const [category, setCategory] = useState();\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState();\n\n  //update post list depend on selected category\n  useEffect(() => {\n    postService\n      .getPostsByCategory(category)\n      .then((data) => setPosts(data))\n      .catch(console.error())\n  }, [category]);\n\n  //change category state\n  const changeCategory = (category) => setCategory(category);\n\n  //change posts state when post is deleted\n  const changePostsByDelete = (id) => {\n    setPosts(() => posts.filter(post => parseInt(post.id) !== parseInt(id)));\n  };\n\n  const changeUserState = (user) => setUser(user);\n\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header \n          changeCategory={changeCategory} \n          tokenStorage={tokenStorage} />\n        <Switch>\n            <Route exact path=\"/\">\n              <Main \n                postService={postService} \n                posts={posts} \n                changeCategory={changeCategory}\n                user={user} />\n            </Route>\n            <Route exact path=\"/post?id=:id\">\n              <Post \n                postService={postService} \n                changePostsByDelete={changePostsByDelete}\n                user={user} />\n            </Route>\n            <Route path=\"/post/compost\">\n              <CreatePost postService={postService} />\n            </Route>\n            {/* 이거 어떻게 묶는지? */}\n            <Route path=\"/post/compost?id=:id\">\n              <CreatePost postService={postService} />\n            </Route>\n            <Route path=\"/login\">\n              <Login \n                authService={authService} \n                changeUserState={changeUserState} />\n            </Route>\n          </Switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}