{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/Portfolio/personal-blog/client/src/pages/CreatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport Markdown from '../components/Markdown';\nimport '../style/createPost.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = ({\n  postService,\n  changePostsByCreate,\n  changePostsByUpdate\n}) => {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const [formerData, setFormerData] = useState();\n  const [postTitle, setPostTitle] = useState();\n  const [postSubtitle, setPostSubtitle] = useState();\n  const [postCategory, setPostCategory] = useState();\n  const [markdown, setMarkdown] = useState(''); //UPDATE: if it's for update, set post's data\n\n  useEffect(() => {\n    if (params.id) {\n      postService.getPostById(params.id).then(data => setFormerData(data)).catch(console.error());\n    }\n  }, [postService, params.id]); //UPDATE: after formerData is set, set all input state with that.\n\n  useEffect(() => {\n    if (formerData) {\n      //set former state\n      setPostTitle(formerData.title);\n      setPostSubtitle(formerData.subtitle);\n      setPostCategory(convertCategory(formerData.category));\n      setMarkdown(formerData.text);\n    }\n  }, [formerData]); //input handling\n\n  const onTitleChange = event => setPostTitle(event.target.value);\n\n  const onSubtitleChange = event => setPostSubtitle(event.target.value);\n\n  const onCategoryChange = event => setPostCategory(event.target.value);\n\n  const onMarkdownChange = event => setMarkdown(event.target.value); //convert category strings to array\n\n\n  const convertToArray = postCategory => {\n    if (!postCategory) return;\n    if (!postCategory.includes(\" \")) return;\n    let categoryArr = postCategory.split(' ');\n    return categoryArr.map(category => {\n      const lowerStr = category.toString().toLowerCase();\n      const pureStr = lowerStr.split(\"#\");\n      return pureStr[pureStr.length - 1];\n    }).toString();\n  };\n\n  const convertCategory = categoryStr => {\n    console.log(categoryStr);\n    const categoryArr = categoryStr.split(',');\n    const formattedArr = categoryArr.map(category => `#${category}`);\n    var arrStr = formattedArr.join(' ');\n    console.log(arrStr);\n  }; //form submit\n\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const post = {\n      category: convertToArray(postCategory),\n      title: postTitle,\n      subtitle: postSubtitle,\n      text: markdown\n    };\n\n    if (params.id) {\n      //UPDATE\n      postService.updatePost(params.id, post.category, post.title, post.subtitle, post.text).then(data => changePostsByUpdate(params.id, data)).catch(console.error);\n      history.push(`/post/${params.id}`);\n    } else {\n      //CREATE\n      postService.createPost(post.category, post.title, post.subtitle, post.text).then(data => changePostsByCreate(data)).catch(console.error);\n      history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPost\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createPost-titlebox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"createPost__title\",\n        placeholder: \"Post Title\",\n        value: postTitle ? postTitle : '',\n        onChange: onTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"createPost__subtitle\",\n        placeholder: \"Post Subtitle\",\n        value: postSubtitle ? postSubtitle : '',\n        onChange: onSubtitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"createPost__category\",\n        placeholder: \"#Tag\",\n        value: postCategory ? postCategory : '',\n        onChange: onCategoryChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createPost-textbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onMarkdownChange,\n        value: markdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createPost__markdown\",\n        children: /*#__PURE__*/_jsxDEV(Markdown, {\n          text: markdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createPost-buttonbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        className: \"createPost__submitBtn\",\n        children: \"Compost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"da+5CJM6cbHaPPFit1bI9DcYQzM=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/pages/CreatePost.jsx"],"names":["React","useEffect","useState","useParams","useHistory","Markdown","CreatePost","postService","changePostsByCreate","changePostsByUpdate","history","params","formerData","setFormerData","postTitle","setPostTitle","postSubtitle","setPostSubtitle","postCategory","setPostCategory","markdown","setMarkdown","id","getPostById","then","data","catch","console","error","title","subtitle","convertCategory","category","text","onTitleChange","event","target","value","onSubtitleChange","onCategoryChange","onMarkdownChange","convertToArray","includes","categoryArr","split","map","lowerStr","toString","toLowerCase","pureStr","length","categoryStr","log","formattedArr","arrStr","join","onSubmit","preventDefault","post","updatePost","push","createPost"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport Markdown from '../components/Markdown';\nimport '../style/createPost.scss';\n\nconst CreatePost = ({postService, changePostsByCreate, changePostsByUpdate}) => {\n  const history = useHistory();\n  const params = useParams();\n  const [formerData, setFormerData] = useState();\n  const [postTitle, setPostTitle] = useState();\n  const [postSubtitle, setPostSubtitle] = useState();\n  const [postCategory, setPostCategory] = useState();\n  const [markdown, setMarkdown] = useState('');\n\n  //UPDATE: if it's for update, set post's data\n  useEffect(() => {\n    if(params.id){\n      postService\n        .getPostById(params.id)\n        .then((data) => setFormerData(data))\n        .catch(console.error());\n    }\n  }, [postService, params.id]);\n\n  //UPDATE: after formerData is set, set all input state with that.\n  useEffect(() => {\n    if(formerData){\n      //set former state\n      setPostTitle(formerData.title);\n      setPostSubtitle(formerData.subtitle);\n      setPostCategory(convertCategory(formerData.category));\n      setMarkdown(formerData.text);\n    }\n  }, [formerData])\n\n  //input handling\n  const onTitleChange = (event) => setPostTitle(event.target.value);\n  const onSubtitleChange = (event) => setPostSubtitle(event.target.value);\n  const onCategoryChange = (event) => setPostCategory(event.target.value);\n  const onMarkdownChange = (event) => setMarkdown(event.target.value);\n\n  //convert category strings to array\n  const convertToArray = (postCategory) => {\n    if(!postCategory) return;\n    if(!postCategory.includes(\" \")) return;\n\n    let categoryArr = postCategory.split(' ');\n\n    return categoryArr.map((category) => {\n      const lowerStr = category.toString().toLowerCase();\n      const pureStr = lowerStr.split(\"#\");\n\n      return pureStr[pureStr.length - 1];\n    }).toString();\n  }\n\n  const convertCategory = (categoryStr) => {\n    console.log(categoryStr);\n\n    const categoryArr = categoryStr.split(',');\n    const formattedArr = categoryArr.map((category) => `#${category}`);\n    var arrStr = formattedArr.join(' ');\n    console.log(arrStr)\n  }\n\n  //form submit\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const post = {\n      category: convertToArray(postCategory),\n      title: postTitle,\n      subtitle: postSubtitle,\n      text: markdown\n    }\n\n    if(params.id){\n    //UPDATE\n      postService\n        .updatePost(params.id , post.category, post.title, post.subtitle, post.text)\n        .then((data) => changePostsByUpdate(params.id, data))\n        .catch(console.error);\n\n      history.push(`/post/${params.id}`);\n    }else {\n    //CREATE\n      postService\n        .createPost(post.category, post.title, post.subtitle, post.text)\n        .then((data) => changePostsByCreate(data))\n        .catch(console.error);\n\n      history.push(\"/\");\n    }\n  }\n\n  return (\n    <div className=\"createPost\">\n      <div className=\"createPost-titlebox\">\n        <input \n          type=\"text\" \n          className=\"createPost__title\" \n          placeholder=\"Post Title\" \n          value={postTitle ? postTitle : ''}\n          onChange={onTitleChange} \n        />\n        <input \n          type=\"text\" \n          className=\"createPost__subtitle\" \n          placeholder=\"Post Subtitle\" \n          value={postSubtitle ? postSubtitle : ''}\n          onChange={onSubtitleChange} \n        />\n        <input  \n          type=\"text\" \n          className=\"createPost__category\" \n          placeholder=\"#Tag\" \n          value={postCategory ? postCategory : ''} \n          onChange={onCategoryChange} \n        />\n        </div>\n      <div className=\"createPost-textbox\">\n          <textarea onChange={onMarkdownChange} value={markdown}></textarea>\n          <div className=\"createPost__markdown\">\n            <Markdown text={markdown} />\n          </div>\n        </div>\n      <div className=\"createPost-buttonbox\">\n        <button onClick={onSubmit} className=\"createPost__submitBtn\">Compost</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}