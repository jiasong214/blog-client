{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/Portfolio/personal-blog/client/src/components/LoginBtn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport '../style/loginBtn.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"615317878476-8qppdmmuemebo8i0es5uvce8vfgh909a.apps.googleusercontent.com\";\n\nconst LoginBtn = ({\n  tokenStorage\n}) => {\n  _s();\n\n  const [token, setToken] = useState(); //if there is a token in localStorage, take it\n\n  useEffect(() => {\n    setToken(tokenStorage.getToken());\n  }, [tokenStorage]);\n\n  const onSuccess = response => {\n    tokenStorage.saveToken(response.accessToken);\n    setToken(tokenStorage.getToken());\n  };\n\n  const onFailure = error => console.log(error);\n\n  const onLogout = () => {\n    tokenStorage.clearToken();\n    setToken();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginBtn\",\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginBtn__logoutBtn\",\n      onClick: () => onLogout(),\n      children: \"LOG OUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      responseType: \"id_token\",\n      onSuccess: onSuccess,\n      onFailure: onFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginBtn, \"53gWZVYLZTYZjWpgb2o1I8HXzgU=\");\n\n_c = LoginBtn;\nexport default LoginBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginBtn\");","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/components/LoginBtn.jsx"],"names":["React","useState","useEffect","GoogleLogin","clientId","LoginBtn","tokenStorage","token","setToken","getToken","onSuccess","response","saveToken","accessToken","onFailure","error","console","log","onLogout","clearToken"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAO,wBAAP;;AAEA,MAAMC,QAAQ,GAAG,0EAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC,CADqC,CAGrC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACF,YAAY,CAACG,QAAb,EAAD,CAAR;AACD,GAFQ,EAEN,CAACH,YAAD,CAFM,CAAT;;AAKA,QAAMI,SAAS,GAAIC,QAAD,IAAc;AAC9BL,IAAAA,YAAY,CAACM,SAAb,CAAuBD,QAAQ,CAACE,WAAhC;AACAL,IAAAA,QAAQ,CAACF,YAAY,CAACG,QAAb,EAAD,CAAR;AAED,GAJD;;AAMA,QAAMK,SAAS,GAAIC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAA7B;;AAEA,QAAMG,QAAQ,GAAG,MAAM;AACrBZ,IAAAA,YAAY,CAACa,UAAb;AACAX,IAAAA,QAAQ;AACT,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACGD,KAAK,gBACJ;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,OAAO,EAAE,MAAMW,QAAQ,EAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,gBAMJ,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEd,QADZ;AAEE,MAAA,YAAY,EAAE,UAFhB;AAGE,MAAA,SAAS,EAAEM,SAHb;AAIE,MAAA,SAAS,EAAEI;AAJb;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAxCD;;GAAMT,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport '../style/loginBtn.scss';\n\nconst clientId = \"615317878476-8qppdmmuemebo8i0es5uvce8vfgh909a.apps.googleusercontent.com\";\n\nconst LoginBtn = ({ tokenStorage }) => {\n  const [token, setToken] = useState();\n\n  //if there is a token in localStorage, take it\n  useEffect(() => {\n    setToken(tokenStorage.getToken());\n  }, [tokenStorage]);\n\n\n  const onSuccess = (response) => {\n    tokenStorage.saveToken(response.accessToken);\n    setToken(tokenStorage.getToken());\n    \n  };\n\n  const onFailure = (error) => console.log(error);\n\n  const onLogout = () => {\n    tokenStorage.clearToken();\n    setToken();\n  }\n\n\n  return(\n    <div className='loginBtn'>\n      {token ? \n        <div \n          className='loginBtn__logoutBtn' \n          onClick={() => onLogout()}>\n          LOG OUT\n        </div> :\n        <GoogleLogin\n          clientId={clientId}\n          responseType={\"id_token\"}\n          onSuccess={onSuccess}\n          onFailure={onFailure}\n        />\n      }\n    </div>\n  )\n}\n\nexport default LoginBtn;"]},"metadata":{},"sourceType":"module"}