{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/Portfolio/personal-blog/client/src/pages/CreatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../style/createPost.scss';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = ({\n  postService\n}) => {\n  _s();\n\n  const [postTitle, setPostTitle] = useState();\n  const [postCategory, setPostCategory] = useState();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty()); //input handling\n\n  const onTitleChange = event => setPostTitle(event.target.value);\n\n  const onCategoryChange = event => setPostCategory(event.target.value);\n\n  const onEditorStateChange = editorState => setEditorState(editorState); //convert text to html\n\n\n  const convertToHtml = editorState => {\n    const rawText = convertToRaw(editorState.getCurrentContent());\n    const HtmlConversion = draftToHtml(rawText);\n    return HtmlConversion;\n  }; //convert category to array\n\n\n  const convertToArray = postCategory => {\n    if (!postCategory) return;\n    return postCategory.split(' ');\n  };\n\n  const createPostObj = () => {\n    const post = {\n      title: postTitle,\n      category: convertToArray(),\n      text: convertToHtml()\n    };\n  };\n\n  const onSubmit = () => {\n    postService.createPost().then(console.log()).catch(console.error());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPost\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"POST\",\n      onSubmit: () => onSubmit(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"createPost__title\",\n        placeholder: \"Title\",\n        value: postTitle ? postTitle : '',\n        onChange: event => onTitleChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"createPost__category\",\n        placeholder: \"#React #Javascript\",\n        value: postCategory ? postCategory : '',\n        onChange: event => onCategoryChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        wrapperClassName: \"createPost__wrapper\",\n        editorClassName: \"createPost__editor\" //language setting\n        ,\n        localization: {\n          locale: \"en\"\n        } //tool bar setting\n        ,\n        toolbar: {\n          inline: {\n            inDropdown: true\n          },\n          list: {\n            inDropdown: true\n          },\n          textAlign: {\n            inDropdown: true\n          },\n          link: {\n            inDropdown: true\n          },\n          history: {\n            inDropdown: true\n          },\n          blockType: {\n            inDropdown: true\n          }\n        } //default state\n        ,\n        editorState: editorState //update state event\n        ,\n        onEditorStateChange: onEditorStateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"createPost__submitBtn\",\n        children: \"Compost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"rXMUGSq3gh1qJkZxZY0v43AIZq0=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/pages/CreatePost.jsx"],"names":["React","useState","Editor","EditorState","convertToRaw","draftToHtml","CreatePost","postService","postTitle","setPostTitle","postCategory","setPostCategory","editorState","setEditorState","createEmpty","onTitleChange","event","target","value","onCategoryChange","onEditorStateChange","convertToHtml","rawText","getCurrentContent","HtmlConversion","convertToArray","split","createPostObj","post","title","category","text","onSubmit","createPost","then","console","log","catch","error","locale","inline","inDropdown","list","textAlign","link","history","blockType"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../style/createPost.scss';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nconst CreatePost = ({postService}) => {\n  const [postTitle, setPostTitle] = useState();\n  const [postCategory, setPostCategory] = useState();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  //input handling\n  const onTitleChange = (event) => setPostTitle(event.target.value);\n  const onCategoryChange = (event) => setPostCategory(event.target.value);\n  const onEditorStateChange = (editorState) => setEditorState(editorState);\n\n  //convert text to html\n  const convertToHtml = (editorState) => {\n    const rawText = convertToRaw(editorState.getCurrentContent())\n    const HtmlConversion = draftToHtml(rawText);\n\n    return HtmlConversion;\n  }\n\n  //convert category to array\n  const convertToArray = (postCategory) => {\n    if(!postCategory) return;\n    return postCategory.split(' ');\n  }\n\n  const createPostObj = () => {\n    const post = {\n      title: postTitle,\n      category: convertToArray(),\n      text: convertToHtml()\n    }\n  }\n\n  const onSubmit = () => {\n    postService\n      .createPost()\n      .then(console.log())\n      .catch(console.error())\n  }\n\n\n  return (\n    <div className=\"createPost\">\n      <form action=\"\" method=\"POST\" onSubmit={() => onSubmit()}>\n        <input \n          type=\"text\" \n          className=\"createPost__title\" \n          placeholder=\"Title\" \n          value={postTitle ? postTitle : ''} \n          onChange={(event) => onTitleChange(event)} \n        />\n        <input  \n          type=\"text\" \n          className=\"createPost__category\" \n          placeholder=\"#React #Javascript\" \n          value={postCategory ? postCategory : ''} \n          onChange={(event) => onCategoryChange(event)} \n        />\n        <Editor\n          wrapperClassName=\"createPost__wrapper\"\n          editorClassName=\"createPost__editor\"\n          \n          //language setting\n          localization={{ locale: \"en\" }}\n          //tool bar setting\n          toolbar={{\n            inline: { inDropdown: true },\n            list: { inDropdown: true },\n            textAlign: { inDropdown: true },\n            link: { inDropdown: true },\n            history: { inDropdown: true },\n            blockType: { inDropdown: true }\n          }}\n\n          //default state\n          editorState={editorState}\n          //update state event\n          onEditorStateChange={onEditorStateChange}\n        />\n        <button type='submit' className=\"createPost__submitBtn\">Compost</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}