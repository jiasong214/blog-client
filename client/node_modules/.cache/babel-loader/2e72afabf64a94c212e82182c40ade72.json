{"ast":null,"code":"export default class PostService {\n  constructor(http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  } //common header part\n\n\n  getHeaders() {\n    //get a token from storage and return with headers format\n    const token = this.tokenStorage.getToken();\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  }\n\n  async getPosts() {\n    return this.http.fetch(`/post`, {\n      method: 'GET',\n      headers: this.getHeaders()\n    });\n  }\n\n  async getPostById(id) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'GET',\n      headers: this.getHeaders()\n    });\n  }\n\n  async createPost(category, title, subtitle, text) {\n    return this.http.fetch(`/post`, {\n      method: 'POST',\n      headers: this.getHeaders(),\n      body: JSON.stringify({\n        category,\n        title,\n        subtitle,\n        text\n      })\n    });\n  }\n\n  async updatePost(id, category, title, subtitle, text) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'PUT',\n      headers: this.getHeaders(),\n      body: JSON.stringify({\n        category,\n        title,\n        subtitle,\n        text\n      })\n    });\n  }\n\n  async deletePost(id) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'DELETE',\n      headers: this.getHeaders()\n    });\n  }\n\n  async getCategories() {\n    return this.http.fetch(`/category`, {\n      method: 'GET',\n      headers: this.getHeaders()\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/service/post.js"],"names":["PostService","constructor","http","tokenStorage","getHeaders","token","getToken","Authorization","getPosts","fetch","method","headers","getPostById","id","createPost","category","title","subtitle","text","body","JSON","stringify","updatePost","deletePost","getCategories"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,CAAEC,IAAF,EAAQC,YAAR,EAAsB;AAC/B,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACD,GAJ8B,CAM/B;;;AACAC,EAAAA,UAAU,GAAG;AACX;AACA,UAAMC,KAAK,GAAG,KAAKF,YAAL,CAAkBG,QAAlB,EAAd;AACA,WAAO;AAAEC,MAAAA,aAAa,EAAG,UAASF,KAAM;AAAjC,KAAP;AACD;;AAGa,QAARG,QAAQ,GAAG;AACf,WAAO,KAAKN,IAAL,CAAUO,KAAV,CAAiB,OAAjB,EAAyB;AAC9BC,MAAAA,MAAM,EAAE,KADsB;AAE9BC,MAAAA,OAAO,EAAE,KAAKP,UAAL;AAFqB,KAAzB,CAAP;AAID;;AAEgB,QAAXQ,WAAW,CAACC,EAAD,EAAK;AACpB,WAAO,KAAKX,IAAL,CAAUO,KAAV,CAAiB,SAAQI,EAAG,EAA5B,EAA+B;AACpCH,MAAAA,MAAM,EAAE,KAD4B;AAEpCC,MAAAA,OAAO,EAAG,KAAKP,UAAL;AAF0B,KAA/B,CAAP;AAID;;AAEe,QAAVU,UAAU,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,EAA4BC,IAA5B,EAAkC;AAChD,WAAO,KAAKhB,IAAL,CAAUO,KAAV,CAAiB,OAAjB,EAAyB;AAC9BC,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE,KAAKP,UAAL,EAFqB;AAG9Be,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA,QAAF;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA,QAAnB;AAA6BC,QAAAA;AAA7B,OAAf;AAHwB,KAAzB,CAAP;AAKD;;AAEe,QAAVI,UAAU,CAACT,EAAD,EAAKE,QAAL,EAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsC;AACpD,WAAO,KAAKhB,IAAL,CAAUO,KAAV,CAAiB,SAAQI,EAAG,EAA5B,EAA+B;AACpCH,MAAAA,MAAM,EAAE,KAD4B;AAEpCC,MAAAA,OAAO,EAAE,KAAKP,UAAL,EAF2B;AAGpCe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA,QAAF;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA,QAAnB;AAA6BC,QAAAA;AAA7B,OAAf;AAH8B,KAA/B,CAAP;AAKD;;AAEe,QAAVK,UAAU,CAACV,EAAD,EAAK;AACnB,WAAO,KAAKX,IAAL,CAAUO,KAAV,CAAiB,SAAQI,EAAG,EAA5B,EAA+B;AACpCH,MAAAA,MAAM,EAAE,QAD4B;AAEpCC,MAAAA,OAAO,EAAE,KAAKP,UAAL;AAF2B,KAA/B,CAAP;AAID;;AAEkB,QAAboB,aAAa,GAAG;AACpB,WAAO,KAAKtB,IAAL,CAAUO,KAAV,CAAiB,WAAjB,EAA6B;AAClCC,MAAAA,MAAM,EAAE,KAD0B;AAElCC,MAAAA,OAAO,EAAE,KAAKP,UAAL;AAFyB,KAA7B,CAAP;AAID;;AAxD8B","sourcesContent":["export default class PostService {\n  constructor (http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n\n  //common header part\n  getHeaders() {\n    //get a token from storage and return with headers format\n    const token = this.tokenStorage.getToken();\n    return { Authorization: `Bearer ${token}`, };\n  }\n\n\n  async getPosts() {\n    return this.http.fetch(`/post`, {\n      method: 'GET',\n      headers: this.getHeaders()\n    });\n  }\n\n  async getPostById(id) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'GET',\n      headers : this.getHeaders()\n    });\n  }\n\n  async createPost(category, title, subtitle, text) {\n    return this.http.fetch(`/post`, {\n      method: 'POST',\n      headers: this.getHeaders(),\n      body: JSON.stringify({ category, title, subtitle, text })\n    });\n  }\n\n  async updatePost(id, category, title, subtitle, text) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'PUT',\n      headers: this.getHeaders(),\n      body: JSON.stringify({ category, title, subtitle, text })\n    });\n  }\n\n  async deletePost(id) {\n    return this.http.fetch(`/post/${id}`, {\n      method: 'DELETE',\n      headers: this.getHeaders()\n    });\n  }\n\n  async getCategories() {\n    return this.http.fetch(`/category`, {\n      method: 'GET',\n      headers: this.getHeaders()\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}