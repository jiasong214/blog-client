{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getMarkRange($pos, type) {\n  if (!$pos || !type) {\n    return false;\n  }\n\n  const start = $pos.parent.childAfter($pos.parentOffset);\n\n  if (!start.node) {\n    return false;\n  }\n\n  const mark = start.node.marks.find(mark => mark.type === type);\n\n  if (!mark) {\n    return false;\n  }\n\n  let startIndex = $pos.index();\n  let startPos = $pos.start() + start.offset;\n  let endIndex = startIndex + 1;\n  let endPos = startPos + start.node.nodeSize;\n\n  while (startIndex > 0 && mark.isInSet($pos.parent.child(startIndex - 1).marks)) {\n    startIndex -= 1;\n    startPos -= $pos.parent.child(startIndex).nodeSize;\n  }\n\n  while (endIndex < $pos.parent.childCount && mark.isInSet($pos.parent.child(endIndex).marks)) {\n    endPos += $pos.parent.child(endIndex).nodeSize;\n    endIndex += 1;\n  }\n\n  return {\n    from: startPos,\n    to: endPos,\n    mark\n  };\n}\n\nexports.default = getMarkRange;","map":{"version":3,"sources":["../../src/queries/getMarkRange.ts"],"names":[],"mappings":";;;;;;AAEA,SAAwB,YAAxB,CAAqC,IAArC,EAAyD,IAAzD,EAAwE;AACtE,MAAI,CAAC,IAAD,IAAS,CAAC,IAAd,EAAoB;AAClB,WAAO,KAAP;AACD;;AAED,QAAM,KAAK,GAAG,IAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,IAAI,CAAC,YAA5B,CAAd;;AACA,MAAI,CAAC,KAAK,CAAC,IAAX,EAAiB;AACf,WAAO,KAAP;AACD;;AAED,QAAM,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,KAAX,CAAiB,IAAjB,CAAsB,IAAI,IAAI,IAAI,CAAC,IAAL,KAAc,IAA5C,CAAb;;AACA,MAAI,CAAC,IAAL,EAAW;AACT,WAAO,KAAP;AACD;;AAED,MAAI,UAAU,GAAG,IAAI,CAAC,KAAL,EAAjB;AACA,MAAI,QAAQ,GAAG,IAAI,CAAC,KAAL,KAAe,KAAK,CAAC,MAApC;AACA,MAAI,QAAQ,GAAG,UAAU,GAAG,CAA5B;AACA,MAAI,MAAM,GAAG,QAAQ,GAAG,KAAK,CAAC,IAAN,CAAW,QAAnC;;AAEA,SACE,UAAU,GAAG,CAAb,IACA,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,UAAU,GAAG,CAA/B,EAAkC,KAA/C,CAFF,EAGE;AACA,IAAA,UAAU,IAAI,CAAd;AACA,IAAA,QAAQ,IAAI,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,UAAlB,EAA8B,QAA1C;AACD;;AAED,SACE,QAAQ,GAAG,IAAI,CAAC,MAAL,CAAY,UAAvB,IACA,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,QAAlB,EAA4B,KAAzC,CAFF,EAGE;AACA,IAAA,MAAM,IAAI,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,QAAlB,EAA4B,QAAtC;AACA,IAAA,QAAQ,IAAI,CAAZ;AACD;;AAED,SAAO;AAAE,IAAA,IAAI,EAAE,QAAR;AAAkB,IAAA,EAAE,EAAE,MAAtB;AAA8B,IAAA;AAA9B,GAAP;AACD;;AArCD,OAAA,CAAA,OAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getMarkRange($pos, type) {\n    if (!$pos || !type) {\n        return false;\n    }\n    const start = $pos.parent.childAfter($pos.parentOffset);\n    if (!start.node) {\n        return false;\n    }\n    const mark = start.node.marks.find(mark => mark.type === type);\n    if (!mark) {\n        return false;\n    }\n    let startIndex = $pos.index();\n    let startPos = $pos.start() + start.offset;\n    let endIndex = startIndex + 1;\n    let endPos = startPos + start.node.nodeSize;\n    while (startIndex > 0 &&\n        mark.isInSet($pos.parent.child(startIndex - 1).marks)) {\n        startIndex -= 1;\n        startPos -= $pos.parent.child(startIndex).nodeSize;\n    }\n    while (endIndex < $pos.parent.childCount &&\n        mark.isInSet($pos.parent.child(endIndex).marks)) {\n        endPos += $pos.parent.child(endIndex).nodeSize;\n        endIndex += 1;\n    }\n    return { from: startPos, to: endPos, mark };\n}\nexports.default = getMarkRange;\n//# sourceMappingURL=getMarkRange.js.map"]},"metadata":{},"sourceType":"script"}