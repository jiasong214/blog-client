{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prosemirror_commands_1 = require(\"prosemirror-commands\");\n\nconst Node_1 = __importDefault(require(\"./Node\"));\n\nclass Paragraph extends Node_1.default {\n  get name() {\n    return \"paragraph\";\n  }\n\n  get schema() {\n    return {\n      content: \"inline*\",\n      group: \"block\",\n      parseDOM: [{\n        tag: \"p\"\n      }],\n      toDOM: () => [\"p\", 0]\n    };\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      \"Shift-Ctrl-0\": prosemirror_commands_1.setBlockType(type)\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => prosemirror_commands_1.setBlockType(type);\n  }\n\n  toMarkdown(state, node) {\n    if (node.textContent.trim() === \"\" && node.childCount === 0 && !state.inTable) {\n      state.write(\"\\\\\\n\");\n    } else {\n      state.renderInline(node);\n      state.closeBlock(node);\n    }\n  }\n\n  parseMarkdown() {\n    return {\n      block: \"paragraph\"\n    };\n  }\n\n}\n\nexports.default = Paragraph;","map":{"version":3,"sources":["../../src/nodes/Paragraph.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,sBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AAEA,MAAqB,SAArB,SAAuC,MAAA,CAAA,OAAvC,CAA2C;AACjC,MAAJ,IAAI,GAAA;AACN,WAAO,WAAP;AACD;;AAES,MAAN,MAAM,GAAA;AACR,WAAO;AACL,MAAA,OAAO,EAAE,SADJ;AAEL,MAAA,KAAK,EAAE,OAFF;AAGL,MAAA,QAAQ,EAAE,CAAC;AAAE,QAAA,GAAG,EAAE;AAAP,OAAD,CAHL;AAIL,MAAA,KAAK,EAAE,MAAM,CAAC,GAAD,EAAM,CAAN;AAJR,KAAP;AAMD;;AAED,EAAA,IAAI,CAAC;AAAE,IAAA;AAAF,GAAD,EAAS;AACX,WAAO;AACL,sBAAgB,sBAAA,CAAA,YAAA,CAAa,IAAb;AADX,KAAP;AAGD;;AAED,EAAA,QAAQ,CAAC;AAAE,IAAA;AAAF,GAAD,EAAS;AACf,WAAO,MAAM,sBAAA,CAAA,YAAA,CAAa,IAAb,CAAb;AACD;;AAED,EAAA,UAAU,CAAC,KAAD,EAAQ,IAAR,EAAY;AAGpB,QACE,IAAI,CAAC,WAAL,CAAiB,IAAjB,OAA4B,EAA5B,IACA,IAAI,CAAC,UAAL,KAAoB,CADpB,IAEA,CAAC,KAAK,CAAC,OAHT,EAIE;AACA,MAAA,KAAK,CAAC,KAAN,CAAY,MAAZ;AACD,KAND,MAMO;AACL,MAAA,KAAK,CAAC,YAAN,CAAmB,IAAnB;AACA,MAAA,KAAK,CAAC,UAAN,CAAiB,IAAjB;AACD;AACF;;AAED,EAAA,aAAa,GAAA;AACX,WAAO;AAAE,MAAA,KAAK,EAAE;AAAT,KAAP;AACD;;AAzCwC;;AAA3C,OAAA,CAAA,OAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prosemirror_commands_1 = require(\"prosemirror-commands\");\nconst Node_1 = __importDefault(require(\"./Node\"));\nclass Paragraph extends Node_1.default {\n    get name() {\n        return \"paragraph\";\n    }\n    get schema() {\n        return {\n            content: \"inline*\",\n            group: \"block\",\n            parseDOM: [{ tag: \"p\" }],\n            toDOM: () => [\"p\", 0],\n        };\n    }\n    keys({ type }) {\n        return {\n            \"Shift-Ctrl-0\": prosemirror_commands_1.setBlockType(type),\n        };\n    }\n    commands({ type }) {\n        return () => prosemirror_commands_1.setBlockType(type);\n    }\n    toMarkdown(state, node) {\n        if (node.textContent.trim() === \"\" &&\n            node.childCount === 0 &&\n            !state.inTable) {\n            state.write(\"\\\\\\n\");\n        }\n        else {\n            state.renderInline(node);\n            state.closeBlock(node);\n        }\n    }\n    parseMarkdown() {\n        return { block: \"paragraph\" };\n    }\n}\nexports.default = Paragraph;\n//# sourceMappingURL=Paragraph.js.map"]},"metadata":{},"sourceType":"script"}