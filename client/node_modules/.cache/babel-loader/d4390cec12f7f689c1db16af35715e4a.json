{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prosemirror_state_1 = require(\"prosemirror-state\");\n\nconst copy_to_clipboard_1 = __importDefault(require(\"copy-to-clipboard\"));\n\nconst prosemirror_view_1 = require(\"prosemirror-view\");\n\nconst prosemirror_inputrules_1 = require(\"prosemirror-inputrules\");\n\nconst prosemirror_commands_1 = require(\"prosemirror-commands\");\n\nconst backspaceToParagraph_1 = __importDefault(require(\"../commands/backspaceToParagraph\"));\n\nconst toggleBlockType_1 = __importDefault(require(\"../commands/toggleBlockType\"));\n\nconst headingToSlug_1 = __importDefault(require(\"../lib/headingToSlug\"));\n\nconst Node_1 = __importDefault(require(\"./Node\"));\n\nconst types_1 = require(\"../types\");\n\nclass Heading extends Node_1.default {\n  constructor() {\n    super(...arguments);\n    this.className = \"heading-name\";\n\n    this.handleCopyLink = () => {\n      return event => {\n        const anchor = event.currentTarget.parentNode.previousSibling;\n\n        if (!anchor.className.includes(this.className)) {\n          throw new Error(\"Did not find anchor as previous sibling of heading\");\n        }\n\n        const hash = `#${anchor.id}`;\n        const urlWithoutHash = window.location.href.split(\"#\")[0];\n        copy_to_clipboard_1.default(urlWithoutHash + hash);\n\n        if (this.options.onShowToast) {\n          this.options.onShowToast(this.options.dictionary.linkCopied, types_1.ToastType.Info);\n        }\n      };\n    };\n  }\n\n  get name() {\n    return \"heading\";\n  }\n\n  get defaultOptions() {\n    return {\n      levels: [1, 2, 3, 4]\n    };\n  }\n\n  get schema() {\n    return {\n      attrs: {\n        level: {\n          default: 1\n        }\n      },\n      content: \"inline*\",\n      group: \"block\",\n      defining: true,\n      draggable: false,\n      parseDOM: this.options.levels.map(level => ({\n        tag: `h${level}`,\n        attrs: {\n          level\n        },\n        contentElement: \"span\"\n      })),\n      toDOM: node => {\n        const button = document.createElement(\"button\");\n        button.innerText = \"#\";\n        button.type = \"button\";\n        button.className = \"heading-anchor\";\n        button.addEventListener(\"click\", this.handleCopyLink());\n        return [`h${node.attrs.level + (this.options.offset || 0)}`, button, [\"span\", {\n          class: \"heading-content\"\n        }, 0]];\n      }\n    };\n  }\n\n  toMarkdown(state, node) {\n    state.write(state.repeat(\"#\", node.attrs.level) + \" \");\n    state.renderInline(node);\n    state.closeBlock(node);\n  }\n\n  parseMarkdown() {\n    return {\n      block: \"heading\",\n      getAttrs: token => ({\n        level: +token.tag.slice(1)\n      })\n    };\n  }\n\n  commands({\n    type,\n    schema\n  }) {\n    return attrs => {\n      return toggleBlockType_1.default(type, schema.nodes.paragraph, attrs);\n    };\n  }\n\n  keys({\n    type\n  }) {\n    const options = this.options.levels.reduce((items, level) => Object.assign(Object.assign({}, items), {\n      [`Shift-Ctrl-${level}`]: prosemirror_commands_1.setBlockType(type, {\n        level\n      })\n    }), {});\n    return Object.assign(Object.assign({}, options), {\n      Backspace: backspaceToParagraph_1.default(type)\n    });\n  }\n\n  get plugins() {\n    const getAnchors = doc => {\n      const decorations = [];\n      const previouslySeen = {};\n      doc.descendants((node, pos) => {\n        if (node.type.name !== this.name) return;\n        const slug = headingToSlug_1.default(node);\n        let id = slug;\n\n        if (previouslySeen[slug] > 0) {\n          id = headingToSlug_1.default(node, previouslySeen[slug]);\n        }\n\n        previouslySeen[slug] = previouslySeen[slug] !== undefined ? previouslySeen[slug] + 1 : 1;\n        decorations.push(prosemirror_view_1.Decoration.widget(pos, () => {\n          const anchor = document.createElement(\"a\");\n          anchor.id = id;\n          anchor.className = this.className;\n          return anchor;\n        }, {\n          side: -1,\n          key: id\n        }));\n      });\n      return prosemirror_view_1.DecorationSet.create(doc, decorations);\n    };\n\n    const plugin = new prosemirror_state_1.Plugin({\n      state: {\n        init: (config, state) => {\n          return getAnchors(state.doc);\n        },\n        apply: (tr, oldState) => {\n          return tr.docChanged ? getAnchors(tr.doc) : oldState;\n        }\n      },\n      props: {\n        decorations: state => plugin.getState(state)\n      }\n    });\n    return [plugin];\n  }\n\n  inputRules({\n    type\n  }) {\n    return this.options.levels.map(level => prosemirror_inputrules_1.textblockTypeInputRule(new RegExp(`^(#{1,${level}})\\\\s$`), type, () => ({\n      level\n    })));\n  }\n\n}\n\nexports.default = Heading;","map":{"version":3,"sources":["../../src/nodes/Heading.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prosemirror_state_1 = require(\"prosemirror-state\");\nconst copy_to_clipboard_1 = __importDefault(require(\"copy-to-clipboard\"));\nconst prosemirror_view_1 = require(\"prosemirror-view\");\nconst prosemirror_inputrules_1 = require(\"prosemirror-inputrules\");\nconst prosemirror_commands_1 = require(\"prosemirror-commands\");\nconst backspaceToParagraph_1 = __importDefault(require(\"../commands/backspaceToParagraph\"));\nconst toggleBlockType_1 = __importDefault(require(\"../commands/toggleBlockType\"));\nconst headingToSlug_1 = __importDefault(require(\"../lib/headingToSlug\"));\nconst Node_1 = __importDefault(require(\"./Node\"));\nconst types_1 = require(\"../types\");\nclass Heading extends Node_1.default {\n    constructor() {\n        super(...arguments);\n        this.className = \"heading-name\";\n        this.handleCopyLink = () => {\n            return event => {\n                const anchor = event.currentTarget.parentNode.previousSibling;\n                if (!anchor.className.includes(this.className)) {\n                    throw new Error(\"Did not find anchor as previous sibling of heading\");\n                }\n                const hash = `#${anchor.id}`;\n                const urlWithoutHash = window.location.href.split(\"#\")[0];\n                copy_to_clipboard_1.default(urlWithoutHash + hash);\n                if (this.options.onShowToast) {\n                    this.options.onShowToast(this.options.dictionary.linkCopied, types_1.ToastType.Info);\n                }\n            };\n        };\n    }\n    get name() {\n        return \"heading\";\n    }\n    get defaultOptions() {\n        return {\n            levels: [1, 2, 3, 4],\n        };\n    }\n    get schema() {\n        return {\n            attrs: {\n                level: {\n                    default: 1,\n                },\n            },\n            content: \"inline*\",\n            group: \"block\",\n            defining: true,\n            draggable: false,\n            parseDOM: this.options.levels.map(level => ({\n                tag: `h${level}`,\n                attrs: { level },\n                contentElement: \"span\",\n            })),\n            toDOM: node => {\n                const button = document.createElement(\"button\");\n                button.innerText = \"#\";\n                button.type = \"button\";\n                button.className = \"heading-anchor\";\n                button.addEventListener(\"click\", this.handleCopyLink());\n                return [\n                    `h${node.attrs.level + (this.options.offset || 0)}`,\n                    button,\n                    [\"span\", { class: \"heading-content\" }, 0],\n                ];\n            },\n        };\n    }\n    toMarkdown(state, node) {\n        state.write(state.repeat(\"#\", node.attrs.level) + \" \");\n        state.renderInline(node);\n        state.closeBlock(node);\n    }\n    parseMarkdown() {\n        return {\n            block: \"heading\",\n            getAttrs: (token) => ({\n                level: +token.tag.slice(1),\n            }),\n        };\n    }\n    commands({ type, schema }) {\n        return (attrs) => {\n            return toggleBlockType_1.default(type, schema.nodes.paragraph, attrs);\n        };\n    }\n    keys({ type }) {\n        const options = this.options.levels.reduce((items, level) => (Object.assign(Object.assign({}, items), {\n            [`Shift-Ctrl-${level}`]: prosemirror_commands_1.setBlockType(type, { level }),\n        })), {});\n        return Object.assign(Object.assign({}, options), { Backspace: backspaceToParagraph_1.default(type) });\n    }\n    get plugins() {\n        const getAnchors = doc => {\n            const decorations = [];\n            const previouslySeen = {};\n            doc.descendants((node, pos) => {\n                if (node.type.name !== this.name)\n                    return;\n                const slug = headingToSlug_1.default(node);\n                let id = slug;\n                if (previouslySeen[slug] > 0) {\n                    id = headingToSlug_1.default(node, previouslySeen[slug]);\n                }\n                previouslySeen[slug] =\n                    previouslySeen[slug] !== undefined ? previouslySeen[slug] + 1 : 1;\n                decorations.push(prosemirror_view_1.Decoration.widget(pos, () => {\n                    const anchor = document.createElement(\"a\");\n                    anchor.id = id;\n                    anchor.className = this.className;\n                    return anchor;\n                }, {\n                    side: -1,\n                    key: id,\n                }));\n            });\n            return prosemirror_view_1.DecorationSet.create(doc, decorations);\n        };\n        const plugin = new prosemirror_state_1.Plugin({\n            state: {\n                init: (config, state) => {\n                    return getAnchors(state.doc);\n                },\n                apply: (tr, oldState) => {\n                    return tr.docChanged ? getAnchors(tr.doc) : oldState;\n                },\n            },\n            props: {\n                decorations: state => plugin.getState(state),\n            },\n        });\n        return [plugin];\n    }\n    inputRules({ type }) {\n        return this.options.levels.map(level => prosemirror_inputrules_1.textblockTypeInputRule(new RegExp(`^(#{1,${level}})\\\\s$`), type, () => ({\n            level,\n        })));\n    }\n}\nexports.default = Heading;\n//# sourceMappingURL=Heading.js.map"]},"metadata":{},"sourceType":"script"}