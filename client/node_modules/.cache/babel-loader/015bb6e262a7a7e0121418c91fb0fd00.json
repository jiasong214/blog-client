{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/Portfolio/personal-blog/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './pages/Main';\nimport Post from './pages/Post';\nimport CreatePost from './pages/CreatePost';\nimport Login from './pages/Login';\nimport PostService from './service/post.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [category, setCategory] = useState();\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState(''); //class that controll all post related APIs\n\n  const postService = new PostService(user.token); //update post list depend on selected category\n\n  useEffect(() => {\n    postService.getPostsByCategory(category).then(data => setPosts(data)).catch(console.error());\n  }, [category]); //change category state\n\n  const changeCategory = category => setCategory(category); //change posts state when post is deleted\n\n\n  const changePostsByDelete = id => {\n    setPosts(() => posts.filter(post => parseInt(post.id) !== parseInt(id)));\n  }; //set user information after login\n\n\n  const changeUser = user => setUser(user);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        changeCategory: changeCategory,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            postService: postService,\n            posts: posts,\n            changeCategory: changeCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post?id=:id\",\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            postService: postService,\n            changePostsByDelete: changePostsByDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post/compost\",\n          children: /*#__PURE__*/_jsxDEV(CreatePost, {\n            postService: postService\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post/compost?id=:id\",\n          children: /*#__PURE__*/_jsxDEV(CreatePost, {\n            postService: postService\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            changeUser: changeUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wrSCYAdsuhtYzechg8P6iRPAxsQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Switch","Header","Footer","Main","Post","CreatePost","Login","PostService","App","category","setCategory","posts","setPosts","user","setUser","postService","token","getPostsByCategory","then","data","catch","console","error","changeCategory","changePostsByDelete","id","filter","post","parseInt","changeUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './pages/Main';\nimport Post from './pages/Post';\nimport CreatePost from './pages/CreatePost';\nimport Login from './pages/Login';\nimport PostService from './service/post.js';\n\n\n\nfunction App() {\n  const [category, setCategory] = useState();\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState('');\n\n  //class that controll all post related APIs\n  const postService = new PostService(user.token);\n\n  //update post list depend on selected category\n  useEffect(() => {\n    postService\n      .getPostsByCategory(category)\n      .then((data) => setPosts(data))\n      .catch(console.error())\n  }, [category]);\n\n  //change category state\n  const changeCategory = (category) => setCategory(category);\n\n  //change posts state when post is deleted\n  const changePostsByDelete = (id) => {\n    setPosts(() => posts.filter(post => parseInt(post.id) !== parseInt(id)));\n  };\n\n  //set user information after login\n  const changeUser = (user) => setUser(user);\n\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header changeCategory={changeCategory} user={user} />\n        <Switch>\n            <Route exact path=\"/\">\n              <Main postService={postService} posts={posts} changeCategory={changeCategory} />\n            </Route>\n            <Route exact path=\"/post?id=:id\">\n              <Post postService={postService} changePostsByDelete={changePostsByDelete} />\n            </Route>\n            <Route path=\"/post/compost\">\n              <CreatePost postService={postService} />\n            </Route>\n            {/* 이거 어떻게 묶는지? */}\n            <Route path=\"/post/compost?id=:id\">\n              <CreatePost postService={postService} />\n            </Route>\n            <Route path=\"/login\">\n              <Login changeUser={changeUser} />\n            </Route>\n          </Switch>\n        {/* <Footer /> */}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}