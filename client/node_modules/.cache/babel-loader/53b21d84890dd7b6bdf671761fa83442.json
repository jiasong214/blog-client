{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prosemirror_schema_list_1 = require(\"prosemirror-schema-list\");\n\nconst prosemirror_state_1 = require(\"prosemirror-state\");\n\nconst prosemirror_view_1 = require(\"prosemirror-view\");\n\nconst prosemirror_utils_1 = require(\"prosemirror-utils\");\n\nconst Node_1 = __importDefault(require(\"./Node\"));\n\nconst isInList_1 = __importDefault(require(\"../queries/isInList\"));\n\nconst getParentListItem_1 = __importDefault(require(\"../queries/getParentListItem\"));\n\nclass ListItem extends Node_1.default {\n  get name() {\n    return \"list_item\";\n  }\n\n  get schema() {\n    return {\n      content: \"paragraph block*\",\n      defining: true,\n      draggable: true,\n      parseDOM: [{\n        tag: \"li\"\n      }],\n      toDOM: () => [\"li\", 0]\n    };\n  }\n\n  get plugins() {\n    return [new prosemirror_state_1.Plugin({\n      state: {\n        init() {\n          return prosemirror_view_1.DecorationSet.empty;\n        },\n\n        apply: (tr, set, oldState, newState) => {\n          const action = tr.getMeta(\"li\");\n\n          if (!action && !tr.docChanged) {\n            return set;\n          }\n\n          set = set.map(tr.mapping, tr.doc);\n\n          switch (action === null || action === void 0 ? void 0 : action.event) {\n            case \"mouseover\":\n              {\n                const result = prosemirror_utils_1.findParentNodeClosestToPos(newState.doc.resolve(action.pos), node => node.type.name === this.name || node.type.name === \"checkbox_item\");\n\n                if (!result) {\n                  return set;\n                }\n\n                return prosemirror_view_1.DecorationSet.create(tr.doc, [prosemirror_view_1.Decoration.node(result.pos, result.pos + result.node.nodeSize, {\n                  class: \"hovering\"\n                })]);\n              }\n\n            case \"mouseout\":\n              {\n                const result = prosemirror_utils_1.findParentNodeClosestToPos(newState.doc.resolve(action.pos), node => node.type.name === this.name || node.type.name === \"checkbox_item\");\n\n                if (!result) {\n                  return set;\n                }\n\n                return set.remove(set.find(result.pos, result.pos + result.node.nodeSize));\n              }\n\n            default:\n          }\n\n          return set;\n        }\n      },\n      props: {\n        decorations(state) {\n          return this.getState(state);\n        },\n\n        handleDOMEvents: {\n          mouseover: (view, event) => {\n            const {\n              state,\n              dispatch\n            } = view;\n            const target = event.target;\n            const li = target === null || target === void 0 ? void 0 : target.closest(\"li\");\n\n            if (!li) {\n              return false;\n            }\n\n            if (!view.dom.contains(li)) {\n              return false;\n            }\n\n            const pos = view.posAtDOM(li, 0);\n\n            if (!pos) {\n              return false;\n            }\n\n            dispatch(state.tr.setMeta(\"li\", {\n              event: \"mouseover\",\n              pos\n            }));\n            return false;\n          },\n          mouseout: (view, event) => {\n            const {\n              state,\n              dispatch\n            } = view;\n            const target = event.target;\n            const li = target === null || target === void 0 ? void 0 : target.closest(\"li\");\n\n            if (!li) {\n              return false;\n            }\n\n            if (!view.dom.contains(li)) {\n              return false;\n            }\n\n            const pos = view.posAtDOM(li, 0);\n\n            if (!pos) {\n              return false;\n            }\n\n            dispatch(state.tr.setMeta(\"li\", {\n              event: \"mouseout\",\n              pos\n            }));\n            return false;\n          }\n        }\n      }\n    })];\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      Enter: prosemirror_schema_list_1.splitListItem(type),\n      Tab: prosemirror_schema_list_1.sinkListItem(type),\n      \"Shift-Tab\": prosemirror_schema_list_1.liftListItem(type),\n      \"Mod-]\": prosemirror_schema_list_1.sinkListItem(type),\n      \"Mod-[\": prosemirror_schema_list_1.liftListItem(type),\n      \"Shift-Enter\": (state, dispatch) => {\n        if (!isInList_1.default(state)) return false;\n        if (!state.selection.empty) return false;\n        const {\n          tr,\n          selection\n        } = state;\n        dispatch(tr.split(selection.to));\n        return true;\n      },\n      \"Alt-ArrowUp\": (state, dispatch) => {\n        if (!state.selection.empty) return false;\n        const result = getParentListItem_1.default(state);\n        if (!result) return false;\n        const [li, pos] = result;\n        const $pos = state.doc.resolve(pos);\n\n        if (!$pos.nodeBefore || ![\"list_item\", \"checkbox_item\"].includes($pos.nodeBefore.type.name)) {\n          console.log(\"Node before not a list item\");\n          return false;\n        }\n\n        const {\n          tr\n        } = state;\n        const newPos = pos - $pos.nodeBefore.nodeSize;\n        dispatch(tr.delete(pos, pos + li.nodeSize).insert(newPos, li).setSelection(prosemirror_state_1.TextSelection.near(tr.doc.resolve(newPos))));\n        return true;\n      },\n      \"Alt-ArrowDown\": (state, dispatch) => {\n        if (!state.selection.empty) return false;\n        const result = getParentListItem_1.default(state);\n        if (!result) return false;\n        const [li, pos] = result;\n        const $pos = state.doc.resolve(pos + li.nodeSize);\n\n        if (!$pos.nodeAfter || ![\"list_item\", \"checkbox_item\"].includes($pos.nodeAfter.type.name)) {\n          console.log(\"Node after not a list item\");\n          return false;\n        }\n\n        const {\n          tr\n        } = state;\n        const newPos = pos + li.nodeSize + $pos.nodeAfter.nodeSize;\n        dispatch(tr.insert(newPos, li).setSelection(prosemirror_state_1.TextSelection.near(tr.doc.resolve(newPos))).delete(pos, pos + li.nodeSize));\n        return true;\n      }\n    };\n  }\n\n  toMarkdown(state, node) {\n    state.renderContent(node);\n  }\n\n  parseMarkdown() {\n    return {\n      block: \"list_item\"\n    };\n  }\n\n}\n\nexports.default = ListItem;","map":{"version":3,"sources":["../../src/nodes/ListItem.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prosemirror_schema_list_1 = require(\"prosemirror-schema-list\");\nconst prosemirror_state_1 = require(\"prosemirror-state\");\nconst prosemirror_view_1 = require(\"prosemirror-view\");\nconst prosemirror_utils_1 = require(\"prosemirror-utils\");\nconst Node_1 = __importDefault(require(\"./Node\"));\nconst isInList_1 = __importDefault(require(\"../queries/isInList\"));\nconst getParentListItem_1 = __importDefault(require(\"../queries/getParentListItem\"));\nclass ListItem extends Node_1.default {\n    get name() {\n        return \"list_item\";\n    }\n    get schema() {\n        return {\n            content: \"paragraph block*\",\n            defining: true,\n            draggable: true,\n            parseDOM: [{ tag: \"li\" }],\n            toDOM: () => [\"li\", 0],\n        };\n    }\n    get plugins() {\n        return [\n            new prosemirror_state_1.Plugin({\n                state: {\n                    init() {\n                        return prosemirror_view_1.DecorationSet.empty;\n                    },\n                    apply: (tr, set, oldState, newState) => {\n                        const action = tr.getMeta(\"li\");\n                        if (!action && !tr.docChanged) {\n                            return set;\n                        }\n                        set = set.map(tr.mapping, tr.doc);\n                        switch (action === null || action === void 0 ? void 0 : action.event) {\n                            case \"mouseover\": {\n                                const result = prosemirror_utils_1.findParentNodeClosestToPos(newState.doc.resolve(action.pos), node => node.type.name === this.name ||\n                                    node.type.name === \"checkbox_item\");\n                                if (!result) {\n                                    return set;\n                                }\n                                return prosemirror_view_1.DecorationSet.create(tr.doc, [\n                                    prosemirror_view_1.Decoration.node(result.pos, result.pos + result.node.nodeSize, {\n                                        class: \"hovering\",\n                                    }),\n                                ]);\n                            }\n                            case \"mouseout\": {\n                                const result = prosemirror_utils_1.findParentNodeClosestToPos(newState.doc.resolve(action.pos), node => node.type.name === this.name ||\n                                    node.type.name === \"checkbox_item\");\n                                if (!result) {\n                                    return set;\n                                }\n                                return set.remove(set.find(result.pos, result.pos + result.node.nodeSize));\n                            }\n                            default:\n                        }\n                        return set;\n                    },\n                },\n                props: {\n                    decorations(state) {\n                        return this.getState(state);\n                    },\n                    handleDOMEvents: {\n                        mouseover: (view, event) => {\n                            const { state, dispatch } = view;\n                            const target = event.target;\n                            const li = target === null || target === void 0 ? void 0 : target.closest(\"li\");\n                            if (!li) {\n                                return false;\n                            }\n                            if (!view.dom.contains(li)) {\n                                return false;\n                            }\n                            const pos = view.posAtDOM(li, 0);\n                            if (!pos) {\n                                return false;\n                            }\n                            dispatch(state.tr.setMeta(\"li\", {\n                                event: \"mouseover\",\n                                pos,\n                            }));\n                            return false;\n                        },\n                        mouseout: (view, event) => {\n                            const { state, dispatch } = view;\n                            const target = event.target;\n                            const li = target === null || target === void 0 ? void 0 : target.closest(\"li\");\n                            if (!li) {\n                                return false;\n                            }\n                            if (!view.dom.contains(li)) {\n                                return false;\n                            }\n                            const pos = view.posAtDOM(li, 0);\n                            if (!pos) {\n                                return false;\n                            }\n                            dispatch(state.tr.setMeta(\"li\", {\n                                event: \"mouseout\",\n                                pos,\n                            }));\n                            return false;\n                        },\n                    },\n                },\n            }),\n        ];\n    }\n    keys({ type }) {\n        return {\n            Enter: prosemirror_schema_list_1.splitListItem(type),\n            Tab: prosemirror_schema_list_1.sinkListItem(type),\n            \"Shift-Tab\": prosemirror_schema_list_1.liftListItem(type),\n            \"Mod-]\": prosemirror_schema_list_1.sinkListItem(type),\n            \"Mod-[\": prosemirror_schema_list_1.liftListItem(type),\n            \"Shift-Enter\": (state, dispatch) => {\n                if (!isInList_1.default(state))\n                    return false;\n                if (!state.selection.empty)\n                    return false;\n                const { tr, selection } = state;\n                dispatch(tr.split(selection.to));\n                return true;\n            },\n            \"Alt-ArrowUp\": (state, dispatch) => {\n                if (!state.selection.empty)\n                    return false;\n                const result = getParentListItem_1.default(state);\n                if (!result)\n                    return false;\n                const [li, pos] = result;\n                const $pos = state.doc.resolve(pos);\n                if (!$pos.nodeBefore ||\n                    ![\"list_item\", \"checkbox_item\"].includes($pos.nodeBefore.type.name)) {\n                    console.log(\"Node before not a list item\");\n                    return false;\n                }\n                const { tr } = state;\n                const newPos = pos - $pos.nodeBefore.nodeSize;\n                dispatch(tr\n                    .delete(pos, pos + li.nodeSize)\n                    .insert(newPos, li)\n                    .setSelection(prosemirror_state_1.TextSelection.near(tr.doc.resolve(newPos))));\n                return true;\n            },\n            \"Alt-ArrowDown\": (state, dispatch) => {\n                if (!state.selection.empty)\n                    return false;\n                const result = getParentListItem_1.default(state);\n                if (!result)\n                    return false;\n                const [li, pos] = result;\n                const $pos = state.doc.resolve(pos + li.nodeSize);\n                if (!$pos.nodeAfter ||\n                    ![\"list_item\", \"checkbox_item\"].includes($pos.nodeAfter.type.name)) {\n                    console.log(\"Node after not a list item\");\n                    return false;\n                }\n                const { tr } = state;\n                const newPos = pos + li.nodeSize + $pos.nodeAfter.nodeSize;\n                dispatch(tr\n                    .insert(newPos, li)\n                    .setSelection(prosemirror_state_1.TextSelection.near(tr.doc.resolve(newPos)))\n                    .delete(pos, pos + li.nodeSize));\n                return true;\n            },\n        };\n    }\n    toMarkdown(state, node) {\n        state.renderContent(node);\n    }\n    parseMarkdown() {\n        return { block: \"list_item\" };\n    }\n}\nexports.default = ListItem;\n//# sourceMappingURL=ListItem.js.map"]},"metadata":{},"sourceType":"script"}