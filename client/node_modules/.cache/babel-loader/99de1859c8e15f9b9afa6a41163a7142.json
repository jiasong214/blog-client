{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/Portfolio/personal-blog/client/src/pages/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport Markdown from '../components/Markdown';\nimport PostSetting from '../components/PostSetting';\nimport Comments from '../components/Comments';\nimport '../style/post.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  postService,\n  changePostsByDelete\n}) => {\n  _s();\n\n  const params = useParams();\n  const history = useHistory();\n  const [post, setPost] = useState([]);\n  const {\n    user\n  } = useAuth(); //get the post\n\n  useEffect(() => {\n    postService.getPostById(params.id).then(data => setPost(data)).catch(console.error());\n  }, [postService, params.id]); //delete the post\n\n  const onDelete = id => {\n    if (window.confirm('Do you want to delete this post?')) {\n      postService.deletePost(id).then(() => changePostsByDelete(id)).catch(console.error());\n      history.push(\"/\");\n    }\n  };\n\n  const convertDate = value => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const month = converted.toLocaleString('en', {\n      month: 'long'\n    });\n    ;\n    const date = converted.getDate();\n    return `${date} ${month}, ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"post__title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post__createdAt\",\n        children: convertDate(post.createdAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n        text: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), user && /*#__PURE__*/_jsxDEV(PostSetting, {\n      id: params.id,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Post, \"+hZcXlEljM+TCvMZgsits0DlerU=\", false, function () {\n  return [useParams, useHistory, useAuth];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/pages/Post.jsx"],"names":["React","useEffect","useState","useHistory","useParams","useAuth","Markdown","PostSetting","Comments","Post","postService","changePostsByDelete","params","history","post","setPost","user","getPostById","id","then","data","catch","console","error","onDelete","window","confirm","deletePost","push","convertDate","value","converted","Date","year","getFullYear","month","toLocaleString","date","getDate","title","createdAt","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,oBAAP;;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAAwC;AAAA;;AACnD,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAWX,OAAO,EAAxB,CAJmD,CAMnD;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW,CACRO,WADH,CACeL,MAAM,CAACM,EADtB,EAEGC,IAFH,CAESC,IAAD,IAAUL,OAAO,CAACK,IAAD,CAFzB,EAGGC,KAHH,CAGSC,OAAO,CAACC,KAAR,EAHT;AAID,GALQ,EAKN,CAACb,WAAD,EAAcE,MAAM,CAACM,EAArB,CALM,CAAT,CAPmD,CAcnD;;AACA,QAAMM,QAAQ,GAAIN,EAAD,IAAQ;AACvB,QAAIO,MAAM,CAACC,OAAP,CAAe,kCAAf,CAAJ,EAAwD;AACtDhB,MAAAA,WAAW,CACRiB,UADH,CACcT,EADd,EAEGC,IAFH,CAEQ,MAAMR,mBAAmB,CAACO,EAAD,CAFjC,EAGGG,KAHH,CAGSC,OAAO,CAACC,KAAR,EAHT;AAKAV,MAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACD;AACF,GATD;;AAWA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASF,KAAT,CAAlB;AACA,UAAMG,IAAI,GAAGF,SAAS,CAACG,WAAV,EAAb;AACA,UAAMC,KAAK,GAAGJ,SAAS,CAACK,cAAV,CAAyB,IAAzB,EAA+B;AAAED,MAAAA,KAAK,EAAE;AAAT,KAA/B,CAAd;AAAgE;AAChE,UAAME,IAAI,GAAGN,SAAS,CAACO,OAAV,EAAb;AAEA,WAAQ,GAAED,IAAK,IAAGF,KAAM,KAAIF,IAAK,EAAjC;AACD,GAPD;;AASA,sBACE;AAAA,4BACA;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBAA6BnB,IAAI,CAACyB;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA,kBAAmCV,WAAW,CAACf,IAAI,CAAC0B,SAAN;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE1B,IAAI,CAAC2B;AAArB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAOCzB,IAAI,iBACH,QAAC,WAAD;AAAa,MAAA,EAAE,EAAEJ,MAAM,CAACM,EAAxB;AAA4B,MAAA,QAAQ,EAAEM;AAAtC;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAaD,CAhDD;;GAAMf,I;UACWL,S,EACCD,U,EAECE,O;;;KAJbI,I;AAkDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport Markdown from '../components/Markdown';\nimport PostSetting from '../components/PostSetting';\nimport Comments from '../components/Comments';\nimport '../style/post.scss';\n\n\nconst Post = ({postService, changePostsByDelete}) => {\n  const params = useParams();\n  const history = useHistory();\n  const [post, setPost] = useState([]);\n  const { user } = useAuth();\n\n  //get the post\n  useEffect(() => {\n    postService\n      .getPostById(params.id)\n      .then((data) => setPost(data))\n      .catch(console.error());\n  }, [postService, params.id]);\n\n  //delete the post\n  const onDelete = (id) => {\n    if (window.confirm('Do you want to delete this post?')) {\n      postService\n        .deletePost(id)\n        .then(() => changePostsByDelete(id))\n        .catch(console.error());\n      \n      history.push(\"/\");\n    }\n  };\n\n  const convertDate = (value) => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const month = converted.toLocaleString('en', { month: 'long' });;\n    const date = converted.getDate();\n\n    return `${date} ${month}, ${year}`;\n  }\n\n  return (\n    <>\n    <section className='post'>\n      <h2 className=\"post__title\">{post.title}</h2>\n      <span className=\"post__createdAt\">{convertDate(post.createdAt)}</span>\n      <Markdown text={post.text} />\n      <Comments />\n    </section>\n    {user && \n      <PostSetting id={params.id} onDelete={onDelete} />\n    }\n    </>\n  )\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}