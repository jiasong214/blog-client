{"ast":null,"code":"export default class AuthService {\n  constructor(tokenStorage) {\n    this.baseURL = 'http://localhost:8080';\n    this.tokenStorage = tokenStorage;\n  }\n\n  async login(username, password) {\n    const res = await fetch(`${this.baseURL}/auth/login`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    let data;\n\n    try {\n      data = res.json();\n    } catch (err) {\n      console.error(err);\n    }\n\n    console.log(username, password, data);\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async me() {\n    const token = this.tokenStorage.getToken();\n    return fetch(`${this.baseURL}/auth/me`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n\n}","map":{"version":3,"sources":["/Users/jia/Desktop/Portfolio/personal-blog/client/src/service/auth.js"],"names":["AuthService","constructor","tokenStorage","baseURL","login","username","password","res","fetch","headers","method","body","JSON","stringify","data","json","err","console","error","log","saveToken","token","me","getToken","Authorization","logout","clearToken"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,CAAEC,YAAF,EAAgB;AACzB,SAAKC,OAAL,GAAe,uBAAf;AACA,SAAKD,YAAL,GAAoBA,YAApB;AACD;;AAGU,QAALE,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKL,OAAQ,aAAjB,EAA+B;AACpDM,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAD2C;AAEpDC,MAAAA,MAAM,EAAE,MAF4C;AAGpDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAf;AAH8C,KAA/B,CAAvB;AAMA,QAAIQ,IAAJ;;AACA,QAAG;AACDA,MAAAA,IAAI,GAAGP,GAAG,CAACQ,IAAJ,EAAP;AACD,KAFD,CAEC,OAAMC,GAAN,EAAU;AACTC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;;AAGDC,IAAAA,OAAO,CAACE,GAAR,CAAYd,QAAZ,EAAsBC,QAAtB,EAAgCQ,IAAhC;AACA,SAAKZ,YAAL,CAAkBkB,SAAlB,CAA4BN,IAAI,CAACO,KAAjC;AACA,WAAOP,IAAP;AACD;;AAEO,QAAFQ,EAAE,GAAG;AACT,UAAMD,KAAK,GAAG,KAAKnB,YAAL,CAAkBqB,QAAlB,EAAd;AAEA,WAAOf,KAAK,CAAE,GAAE,KAAKL,OAAQ,UAAjB,EAA4B;AACtCO,MAAAA,MAAM,EAAE,KAD8B;AAEtCD,MAAAA,OAAO,EAAE;AACPe,QAAAA,aAAa,EAAG,UAASH,KAAM,EADxB;AAEP,wBAAgB;AAFT;AAF6B,KAA5B,CAAZ;AAOD;;AAEW,QAANI,MAAM,GAAG;AACb,SAAKvB,YAAL,CAAkBwB,UAAlB;AACD;;AAzC8B","sourcesContent":["export default class AuthService {\n  constructor (tokenStorage) {\n    this.baseURL = 'http://localhost:8080';\n    this.tokenStorage = tokenStorage;\n  }\n\n\n  async login(username, password) {\n    const res = await fetch(`${this.baseURL}/auth/login`, {\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n    });\n\n    let data;\n    try{\n      data = res.json();\n    }catch(err){\n      console.error(err);\n    }\n  \n\n    console.log(username, password, data);\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async me() {\n    const token = this.tokenStorage.getToken();\n\n    return fetch(`${this.baseURL}/auth/me`, {\n      method: 'GET',\n      headers: { \n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n    });\n  }\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n}"]},"metadata":{},"sourceType":"module"}