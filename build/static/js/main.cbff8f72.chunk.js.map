{"version":3,"sources":["context/AuthContext.jsx","components/Footer.jsx","assets/image.png","components/Intro.jsx","components/PostCard.jsx","components/Loading.jsx","components/PostCartsList.jsx","components/CreatePostBtn.jsx","pages/Main.jsx","components/Markdown.jsx","components/PostSetting.jsx","components/Comments.jsx","pages/Post.jsx","pages/Login.jsx","pages/CreatePost.jsx","App.js","network/http.js","service/post.js","service/auth.js","index.js"],"names":["AuthContext","createContext","AuthProvider","authService","children","useState","undefined","user","setUser","useEffect","me","then","data","onLogin","useCallback","username","password","a","login","onLogout","logout","context","useMemo","Provider","value","useAuth","useContext","Footer","history","useHistory","className","token","onClick","window","confirm","push","to","Intro","href","target","rel","src","image","alt","PostCard","id","title","createdAt","subtitle","pathname","converted","Date","year","getFullYear","month","toLocaleString","date","getDate","convertDate","Loading","PostCardsList","posts","length","map","post","CreatePostBtn","viewBox","d","Main","Markdown","text","syntaxHighlighter","code","node","inline","props","match","exec","style","materialDark","language","PreTag","String","replace","components","remarkPlugins","gfm","PostSetting","onDelete","Comments","commentRef","createRef","utterances","document","createElement","Object","entries","repo","theme","crossorigin","async","forEach","key","setAttribute","current","appendChild","ref","Post","postService","changePostsByDelete","params","useParams","setPost","getPostById","catch","console","error","deletePost","Login","setUsername","setPassword","onSubmit","event","preventDefault","type","placeholder","onChange","onChangeUsername","onChangePassword","CreatePost","changePostsByCreate","changePostsByUpdate","formerData","setFormerData","postTitle","setPostTitle","postSubtitle","setPostSubtitle","markdown","setMarkdown","updatePost","createPost","App","setPosts","getPosts","exact","path","updated","log","parseInt","filter","component","HttpClient","baseURL","this","url","options","fetch","headers","credentials","res","json","status","message","Error","PostService","http","method","body","JSON","stringify","AuthService","httpClient","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"kgBAGaA,EAAcC,wBAAc,IAE5BC,EAAe,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACzC,EAAwBC,wBAASC,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRN,EACGO,KACAC,MAAK,SAACC,GAAD,OAAUJ,EAAQI,QACzB,CAACT,IAEJ,IAAMU,EAAUC,sBAAW,uCAAC,WAAOC,EAAUC,GAAjB,SAAAC,EAAA,sDAC1Bd,EACGe,MAAMH,EAAUC,GAChBL,MAAK,SAACC,GAAD,OAAUJ,EAAQI,MAHA,2CAAD,wDAIxB,CAACT,IAEEgB,EAAWL,sBAAW,sBAAC,sBAAAG,EAAA,sDAC3Bd,EACGiB,SACAT,MAAK,kBAAMH,OAAQF,MAHK,2CAI1B,CAACH,IAEEkB,EAAUC,mBAAQ,iBAAO,CAC7Bf,OAAMM,UAASM,cACb,CAACZ,EAAMM,EAASM,IAEpB,OACE,cAACnB,EAAYuB,SAAb,CAAsBC,MAAOH,EAA7B,SACGjB,KAKMqB,EAAU,kBAAMC,qBAAW1B,ICPzB2B,G,OAzBA,WACb,IAAMC,EAAUC,cAChB,EAA2BJ,IAAnBlB,EAAR,EAAQA,KAAMY,EAAd,EAAcA,SASd,OACE,yBAAQW,UAAU,SAAlB,UACIvB,GAAOA,EAAKwB,MACV,qBAAKD,UAAU,iBAAiBE,QAVlB,WAChBC,OAAOC,QAAQ,6BACjBf,IACAS,EAAQO,KAAK,OAOT,0BAEA,cAAC,IAAD,CAAML,UAAU,gBAAgBM,GAAG,SAAnC,2BAEJ,mBAAGN,UAAU,oBAAb,qCCvBS,G,OAAA,IAA0B,mCCqB1BO,EAhBD,WACZ,OACE,wBAAOP,UAAU,QAAjB,UACE,oBAAIA,UAAU,eAAd,kBAGA,oBAAGA,UAAU,cAAb,0BACe,mBAAGQ,KAAK,gCAAgCC,OAAO,SAASC,IAAI,aAA5D,yBAEf,qBAAKV,UAAU,aAAf,SACE,qBAAKW,IAAKC,EAAOC,IAAI,kBCcdC,G,OAzBE,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAWvC,OACE,qBAAIlB,UAAU,WAAd,UACE,cAAC,IAAD,CAAMM,GAAI,CAACa,SAAS,SAAD,OAAWJ,IAA9B,SACE,oBAAIf,UAAU,kBAAd,SAAiCgB,MAEnC,uBAAMhB,UAAU,sBAAhB,uBAdgB,SAACN,GACnB,IAAM0B,EAAY,IAAIC,KAAK3B,GACrB4B,EAAOF,EAAUG,cACjBC,EAAQJ,EAAUK,eAAe,KAAM,CAAED,MAAO,SAChDE,EAAON,EAAUO,UAEvB,MAAM,GAAN,OAAUD,EAAV,YAAkBF,EAAlB,aAA4BF,GAQuBM,CAAYX,MAC7D,qBAAKjB,UAAU,qBAAf,SAAqCkB,IACrC,cAAC,IAAD,CAAMZ,GAAI,CAACa,SAAS,SAAD,OAAWJ,IAA9B,SACE,qBAAKf,UAAU,oBAAf,gCCNO6B,G,OAdC,WACd,OACE,qBAAK7B,UAAU,UAAf,SACE,sBAAKA,UAAU,WAAf,UACE,oCACA,oCACA,oCACA,oCACA,2CCaO8B,G,OAnBO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACtB,OACE,qCACoB,IAAjBA,EAAMC,QAAgB,cAAC,EAAD,IACvB,oBAAIhC,UAAU,gBAAd,SACG+B,EAAME,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEEnB,GAAImB,EAAKnB,GACTC,MAAOkB,EAAKlB,MACZE,SAAUgB,EAAKhB,SACfD,UAAWiB,EAAKjB,WAJXiB,EAAKnB,cCIPoB,G,OAZO,WACpB,OACE,uBAAOnC,UAAU,gBAAjB,SACE,cAAC,IAAD,CAAMM,GAAG,gBAAT,SACE,qBAAK8B,QAAQ,YAAY,cAAY,OAArC,SACE,4BAAG,sBAAMC,EAAE,6WCSNC,EAZF,SAAC,GAAe,IAAbP,EAAY,EAAZA,MACNtD,EAASkB,IAATlB,KAER,OACE,uBAAMuB,UAAU,OAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAe+B,MAAOA,IACrBtD,GAAQA,EAAKwB,OAAU,cAAC,EAAD,Q,2HCoBfsC,EAzBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEXC,EAAoB,CACxBC,KADwB,YAC4B,EAA9CC,KAA+C,IAAzCC,EAAwC,EAAxCA,OAAQ5C,EAAgC,EAAhCA,UAAW1B,EAAqB,EAArBA,SAAauE,EAAQ,iBAC5CC,EAAQ,iBAAiBC,KAAK/C,GAAa,IACjD,OAAQ4C,GAAUE,EAChB,cAAC,IAAD,aAAmBE,MAAOC,IAAcC,SAAUJ,EAAM,GAAIK,OAAO,MAAM7E,SAAU8E,OAAO9E,GAAU+E,QAAQ,MAAO,KAASR,IAE5H,8CAAM7C,UAAWA,GAAe6C,GAAhC,aACGvE,OAMT,OACE,qBAAK0B,UAAU,WAAf,SACE,cAAC,IAAD,CACEsD,WAAYb,EACZc,cAAe,CAACC,KAChBlF,SAAUkE,OCXHiB,G,OAbK,SAAC,GAAoB,IAAnB1C,EAAkB,EAAlBA,GAAI2C,EAAc,EAAdA,SACxB,OACE,sBAAK1D,UAAU,cAAf,UACE,cAAC,IAAD,CAAMM,GAAI,CAAEa,SAAS,SAAD,OAAWJ,EAAX,UAApB,kBAGA,qBAAKf,UAAU,gBAAgBE,QAAS,kBAAMwD,EAAS3C,IAAvD,yBCoBS4C,G,OA3BE,WACf,IAAMC,EAAaC,sBAqBnB,OAnBAlF,qBAAU,WACR,IAAMmF,EAAaC,SAASC,cAAc,UAW1CC,OAAOC,QATkB,CACvBvD,IAAK,gCACLwD,KAAM,2BACN,aAAc,WACdC,MAAO,eACPC,YAAa,YACbC,OAAO,IAGwBC,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAX9E,EAAW,KACzDoE,EAAWW,aAAaD,EAAK9E,MAG/BkE,EAAWc,QAAQC,YAAYb,KAC9B,IAGD,qBAAK9D,UAAU,WAAW4E,IAAKhB,MCqCpBiB,G,OArDF,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,oBACpBC,EAASC,cACTnF,EAAUC,cAChB,EAAwBxB,mBAAS,IAAjC,mBAAO2D,EAAP,KAAagD,EAAb,KACQzG,EAASkB,IAATlB,KAGRE,qBAAU,WACRmG,EACGK,YAAYH,EAAOjE,IACnBlC,MAAK,SAACC,GAAD,OAAUoG,EAAQpG,MACvBsG,MAAMC,QAAQC,WAChB,CAACR,EAAaE,EAAOjE,KAuBxB,OACE,mCACiB,IAAhBmB,EAAKF,OAAe,cAAC,EAAD,IAClB,0BAAShC,UAAU,OAAnB,UACC,oBAAIA,UAAU,cAAd,SAA6BkC,EAAKlB,QAClC,sBAAMhB,UAAU,kBAAhB,SAdc,SAACN,GACnB,IAAM0B,EAAY,IAAIC,KAAK3B,GACrB4B,EAAOF,EAAUG,cACjBC,EAAQJ,EAAUK,eAAe,KAAM,CAAED,MAAO,SAChDE,EAAON,EAAUO,UAEvB,MAAM,GAAN,OAAUD,EAAV,YAAkBF,EAAlB,aAA4BF,GAQWM,CAAYM,EAAKjB,aACpD,qBAAKjB,UAAU,iBAAf,SACE,cAAC,EAAD,CAAUwC,KAAMN,EAAKM,SAEtB/D,GAAQA,EAAKwB,OAAS,cAAC,EAAD,CAAac,GAAIiE,EAAOjE,GAAI2C,SA7BxC,SAAC3C,GACZZ,OAAOC,QAAQ,sCACjB0E,EACGS,WAAWxE,GACXlC,MAAK,kBAAMkG,EAAoBhE,MAC/BqE,MAAMC,QAAQC,SAEjBxF,EAAQO,KAAK,SAuBX,cAAC,EAAD,WCXOmF,G,OAvCD,WACZ,IAAM1F,EAAUC,cACRhB,EAAYY,IAAZZ,QACR,EAAgCR,mBAAS,IAAzC,mBAAOU,EAAP,KAAiBwG,EAAjB,KACA,EAAgClH,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBwG,EAAjB,KAaA,OACE,sBAAK1F,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,mBACA,uBAAM2F,SAAU,SAACC,GAAD,OAXH,SAACA,GAChBA,EAAMC,iBAGN9G,EAAQE,EAAUC,GAClBY,EAAQO,KAAK,KAMgBsF,CAASC,IAApC,UACE,uBACEE,KAAK,OACLC,YAAY,WACZrG,MAAOT,EACP+G,SAAU,SAACJ,GAAD,OAnBO,SAACA,GAAD,OAAWH,EAAYG,EAAMnF,OAAOf,OAmBhCuG,CAAiBL,MAExC,uBACEE,KAAK,WACLC,YAAY,WACZrG,MAAOR,EACP8G,SAAU,SAACJ,GAAD,OAxBO,SAACA,GAAD,OAAWF,EAAYE,EAAMnF,OAAOf,OAwBhCwG,CAAiBN,MAExC,wBAAQE,KAAK,SAAb,4BC6DOK,G,OA7FI,SAAC,GAA6D,IAA5DrB,EAA2D,EAA3DA,YAAasB,EAA8C,EAA9CA,oBAAqBC,EAAyB,EAAzBA,oBAC/CvG,EAAUC,cACViF,EAASC,cACf,EAAoC1G,qBAApC,mBAAO+H,EAAP,KAAmBC,EAAnB,KACA,EAAkChI,qBAAlC,mBAAOiI,EAAP,KAAkBC,EAAlB,KACA,EAAwClI,qBAAxC,mBAAOmI,EAAP,KAAqBC,EAArB,KACA,EAAgCpI,mBAAS,IAAzC,mBAAOqI,EAAP,KAAiBC,EAAjB,KAGAlI,qBAAU,WACLqG,EAAOjE,IACR+D,EACGK,YAAYH,EAAOjE,IACnBlC,MAAK,SAACC,GAAD,OAAUyH,EAAczH,MAC7BsG,MAAMC,QAAQC,WAElB,CAACR,EAAaE,EAAOjE,KAGxBpC,qBAAU,WACL2H,IAEDG,EAAaH,EAAWtF,OACxB2F,EAAgBL,EAAWpF,UAC3B2F,EAAYP,EAAW9D,SAExB,CAAC8D,IAoCJ,OACE,sBAAKtG,UAAU,aAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBACE8F,KAAK,OACL9F,UAAU,oBACV+F,YAAY,aACZrG,MAAO8G,GAAwB,GAC/BR,SAzCc,SAACJ,GAAD,OAAWa,EAAab,EAAMnF,OAAOf,UA2CrD,uBACEoG,KAAK,OACL9F,UAAU,uBACV+F,YAAY,gBACZrG,MAAOgH,GAA8B,GACrCV,SA/CiB,SAACJ,GAAD,OAAWe,EAAgBf,EAAMnF,OAAOf,aAkD7D,sBAAKM,UAAU,qBAAf,UACI,0BAAUgG,SAlDO,SAACJ,GAAD,OAAWiB,EAAYjB,EAAMnF,OAAOf,QAkDfA,MAAOkH,IAC7C,qBAAK5G,UAAU,uBAAf,SACE,cAAC,EAAD,CAAUwC,KAAMoE,SAGtB,qBAAK5G,UAAU,uBAAf,SACE,wBAAQE,QArDG,SAAC0F,GAChBA,EAAMC,iBAEN,IAAM3D,EAAO,CACXlB,MAAOwF,EACPtF,SAAUwF,EACVlE,KAAMoE,GAGL5B,EAAOjE,IAER+D,EACGgC,WAAW9B,EAAOjE,GAAImB,EAAKlB,MAAOkB,EAAKhB,SAAUgB,EAAKM,MACtD3D,MAAK,SAACC,GAAD,OAAUuH,EAAoBrB,EAAOjE,GAAIjC,MAC9CsG,MAAMC,QAAQC,OAEjBxF,EAAQO,KAAR,gBAAsB2E,EAAOjE,OAG7B+D,EACGiC,WAAW7E,EAAKlB,MAAOkB,EAAKhB,SAAUgB,EAAKM,MAC3C3D,MAAK,SAACC,GAAD,OAAUsH,EAAoBtH,MACnCsG,MAAMC,QAAQC,OAEjBxF,EAAQO,KAAK,OA6BgBL,UAAU,wBAArC,4BCdOgH,MAtEf,YAA6B,IAAflC,EAAc,EAAdA,YACZ,EAA0BvG,mBAAS,IAAnC,mBAAOwD,EAAP,KAAckF,EAAd,KA0BA,OAvBAtI,qBAAU,WACRmG,EACGoC,WACArI,MAAK,SAACC,GAAD,OAAUmI,EAASnI,MACxBsG,MAAMC,QAAQC,WAChB,CAACR,IAmBF,sBAAK9E,UAAU,MAAf,UAEE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CACEtC,YAAaA,EACb/C,MAAOA,MAKX,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,EAAD,CACEtC,YAAaA,EACbsB,oBA3BkB,SAAClE,GAC3B+E,GAAS,kBAAO/E,GAAP,mBAAgBH,QA2BjBsE,oBAvBkB,SAACtF,EAAIsG,GAC/BhC,QAAQiC,IAAI,UACZL,GAAS,kBAAMlF,EAAME,KAAI,SAACC,GAAD,OAAUqF,SAASrF,EAAKnB,MAAQwG,SAASxG,GAAMsG,EAAUnF,aA0B9E,cAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,CACEtC,YAAaA,EACbC,oBAxCkB,SAAChE,GAC3BkG,GAAS,kBAAMlF,EAAMyF,QAAO,SAACtF,GAAD,OAAUqF,SAASrF,EAAKnB,MAAQwG,SAASxG,cA4CjE,cAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,iBAAlB,SACE,cAAC,EAAD,CAAYtC,YAAaA,MAI3B,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,SAASK,UAAWjC,OAGxC,cAAC,EAAD,Q,gBC1EekC,E,WACnB,WAAYC,GAAU,oBACpBC,KAAKD,QAAUA,E,gMAGjB,WAAYE,EAAKC,GAAjB,mBAAA3I,EAAA,sEAEoB4I,MAAM,GAAD,OAAIH,KAAKD,SAAT,OAAmBE,GAAnB,YAAC,eACnBC,GADkB,IAErBE,QAAQ,aACN,eAAgB,oBACbF,EAAQE,SAEbC,YAAa,aARjB,cAEQC,EAFR,yBAciBA,EAAIC,OAdrB,OAcIrJ,EAdJ,uDAgBIuG,QAAQC,MAAR,MAhBJ,aAoBM4C,EAAIE,OAAS,KAAOF,EAAIE,OAAS,KApBvC,wBAqBUC,EACJvJ,GAAQA,EAAKuJ,QAAUvJ,EAAKuJ,QAAU,cAtB5C,kBAwBW,IAAIC,MAAMD,IAxBrB,iCA4BSvJ,GA5BT,yD,iECLmByJ,E,WACnB,WAAaC,GAAO,oBAClBZ,KAAKY,KAAOA,E,mFAGd,sBAAArJ,EAAA,+EACSyI,KAAKY,KAAKT,MAAV,SAA0B,CAC/BU,OAAQ,SAFZ,gD,sHAMA,WAAkB1H,GAAlB,SAAA5B,EAAA,+EACSyI,KAAKY,KAAKT,MAAV,iBAA0BhH,GAAM,CACrC0H,OAAQ,SAFZ,gD,sHAMA,WAAiBzH,EAAOE,EAAUsB,GAAlC,SAAArD,EAAA,+EACSyI,KAAKY,KAAKT,MAAV,SAA0B,CAC/BU,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE5H,QAAOE,WAAUsB,YAH5C,gD,0HAOA,WAAiBzB,EAAIC,EAAOE,EAAUsB,GAAtC,SAAArD,EAAA,+EACSyI,KAAKY,KAAKT,MAAV,iBAA0BhH,GAAM,CACrC0H,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CAAE5H,QAAOE,WAAUsB,YAH5C,gD,4HAOA,WAAiBzB,GAAjB,SAAA5B,EAAA,+EACSyI,KAAKY,KAAKT,MAAV,iBAA0BhH,GAAM,CACrC0H,OAAQ,YAFZ,gD,8DC/BmBI,E,WACnB,WAAaL,GAAO,oBAClBZ,KAAKY,KAAOA,E,gFAGd,WAAYvJ,EAAUC,GAAtB,SAAAC,EAAA,+EACSyI,KAAKY,KAAKT,MAAV,cAA+B,CACpCU,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE3J,WAAUC,gBAHrC,gD,oHAOA,sBAAAC,EAAA,+EACSyI,KAAKY,KAAKT,MAAV,eAAgC,CACrCU,OAAQ,UAFZ,gD,6GAMA,sBAAAtJ,EAAA,+EACSyI,KAAKY,KAAKT,MAAV,WAA4B,CACjCU,OAAQ,SAFZ,gD,6DCJIK,EAAa,IAAIpB,EAJP,kCAOV5C,EAAc,IAAIyD,EAAYO,GAC9BzK,EAAc,IAAIwK,EAAYC,GAKpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAYC,SAJE,eAId,SACE,cAAC,EAAD,CAAc7K,YAAaA,EAA3B,SACE,cAAC,EAAD,CAAKyG,YAAaA,UAIxBf,SAASoF,eAAe,W","file":"static/js/main.cbff8f72.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, createContext } from 'react';\nimport { useContext } from 'react';\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = ({authService, children}) => {\n  const [user, setUser] = useState(undefined);\n\n  useEffect(() => {\n    authService\n      .me()\n      .then((data) => setUser(data));\n  }, [authService]);\n\n  const onLogin = useCallback(async (username, password) => {\n    authService\n      .login(username, password)\n      .then((data) => setUser(data))\n  }, [authService])\n\n  const onLogout = useCallback(async () => {\n    authService\n      .logout()\n      .then(() => setUser(undefined));\n  }, [authService])\n\n  const context = useMemo(() => ({\n    user, onLogin, onLogout\n  }), [user, onLogin, onLogout])\n\n  return (\n    <AuthContext.Provider value={context}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => useContext(AuthContext);","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../style/footer.scss';\n\nconst Footer = () => {\n  const history = useHistory();\n  const { user, onLogout } = useAuth();\n\n  const onClickLogout = () => {\n    if (window.confirm('Do you want to log out?')) {\n      onLogout();\n      history.push('/');\n    }\n  }\n\n  return (\n    <footer className=\"footer\">\n       {user ? user.token ? \n          <div className='footer__logout' onClick={onClickLogout}>Logout Admin</div> : \n          <Link className=\"footer__login\" to='/login'>Admin account</Link> :\n          <Link className=\"footer__login\" to='/login'>Admin account</Link>\n        }\n      <p className=\"footer__copyright\">\n        &copy; 2021 Jia Song\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/image.1836321e.png\";","import React from 'react';\nimport '../style/intro.scss';\n// import Avatar from '../images/avatar2.jpg';\nimport image from '../assets/image.png';\n\nconst Intro = () => {\n  return (\n    <aside className=\"intro\">\n      <h1 className=\"intro__title\">\n        Blog\n      </h1>\n      <p className=\"intro__text\">\n        About ... by <a href='https://github.com/JiaSong214' target=\"_blank\" rel=\"noreferrer\">Jia Song</a>\n      </p>\n      <div className=\"intro__img\">\n        <img src={image} alt=\"profile\" />\n      </div>\n    </aside>\n  )\n}\n\nexport default Intro;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/postCard.scss';\n\nconst PostCard = ({id, title, createdAt, subtitle }) => {\n\n  const convertDate = (value) => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const month = converted.toLocaleString('en', { month: 'long' });;\n    const date = converted.getDate();\n\n    return `${date} ${month}, ${year}`;\n  }\n\n  return (\n    <li className=\"postCard\">\n      <Link to={{pathname: `/post/${id}`}}>\n        <h3 className=\"postCard__title\">{title}</h3>\n      </Link>\n      <span className=\"postCard__createdAt\">Posted on {convertDate(createdAt)}</span>\n      <div className=\"postCard__subtitle\">{subtitle}</div>\n      <Link to={{pathname: `/post/${id}`}}>\n        <div className=\"postCard__readBtn\">Read &rarr;</div>\n      </Link>\n    </li>\n  )\n}\n\nexport default PostCard;","import React from 'react';\nimport '../style/loading.scss';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <div className=\"ellipsis\">\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Loading;","import React from 'react';\nimport PostCard from './PostCard';\nimport Loading from './Loading';\nimport '../style/postCardsList.scss';\n\nconst PostCardsList = ({posts}) => {\n  return (\n    <>\n      {posts.length === 0 && <Loading />}\n      <ul className=\"postCardsList\">\n        {posts.map((post) => (\n          <PostCard \n            key={post.id}\n            id={post.id}\n            title={post.title}\n            subtitle={post.subtitle} \n            createdAt={post.createdAt}\n          />\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default PostCardsList;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/createPostBtn.scss';\n\nconst CreatePostBtn = () => {\n  return (\n    <aside className='createPostBtn'>\n      <Link to='/post/compose'>\n        <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <g><path d=\"M8.8 7.2H5.6V3.9c0-.4-.3-.8-.8-.8s-.7.4-.7.8v3.3H.8c-.4 0-.8.3-.8.8s.3.8.8.8h3.3v3.3c0 .4.3.8.8.8s.8-.3.8-.8V8.7H9c.4 0 .8-.3.8-.8s-.5-.7-1-.7zm15-4.9v-.1h-.1c-.1 0-9.2 1.2-14.4 11.7-3.8 7.6-3.6 9.9-3.3 9.9.3.1 3.4-6.5 6.7-9.2 5.2-1.1 6.6-3.6 6.6-3.6s-1.5.2-2.1.2c-.8 0-1.4-.2-1.7-.3 1.3-1.2 2.4-1.5 3.5-1.7.9-.2 1.8-.4 3-1.2 2.2-1.6 1.9-5.5 1.8-5.7z\"></path></g>\n        </svg>\n      </Link>\n    </aside>\n  )\n}\n\nexport default CreatePostBtn;","import React from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport Intro from '../components/Intro';\nimport PostCardsList from '../components/PostCartsList';\nimport CreatePostBtn from '../components/CreatePostBtn';\n\nconst Main = ({ posts }) => {\n  const { user } = useAuth();\n\n  return (\n    <main className='main'>\n      <Intro />\n      <PostCardsList posts={posts} />\n      {user && user.token &&  <CreatePostBtn /> }\n    </main>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport {materialDark} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport gfm from 'remark-gfm';\nimport '../style/markdown.scss';\n\n\nconst Markdown = ({text}) => {\n\n  const syntaxHighlighter = {\n    code({node, inline, className, children, ...props}) {\n      const match = /language-(\\w+)/.exec(className || '')\n      return !inline && match ? (\n        <SyntaxHighlighter style={materialDark} language={match[1]} PreTag=\"div\" children={String(children).replace(/\\n$/, '')} {...props} />\n      ) : (\n        <code className={className} {...props}>\n          {children}\n        </code>\n      )\n    }\n  }\n\n  return (\n    <div className=\"markdown\">\n      <ReactMarkdown\n        components={syntaxHighlighter}\n        remarkPlugins={[gfm]} \n        children={text} />\n    </div>\n  )\n}\n\nexport default Markdown;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/postSetting.scss';\n\nconst PostSetting = ({id, onDelete}) => {\n  return (\n    <div className=\"postSetting\">\n      <Link to={{ pathname: `/post/${id}/edit` }}>\n        Edit\n      </Link>\n      <div className='deletePostBtn' onClick={() => onDelete(id)}>\n        Delete\n      </div>\n    </div>\n  )\n}\n\nexport default PostSetting;","import React, { createRef, useEffect } from 'react';\nimport '../style/comments.scss';\n\nconst Comments = () => {\n  const commentRef = createRef();\n\n  useEffect(() => {\n    const utterances = document.createElement('script');\n\n    const utterancesConfig = {\n      src: \"https://utteranc.es/client.js\",\n      repo: \"jiasong214/blog-comments\",\n      \"issue-term\": \"pathname\",\n      theme: \"github-light\",\n      crossorigin: \"anonymous\",\n      async: true\n    }\n\n    Object.entries(utterancesConfig).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    commentRef.current.appendChild(utterances);\n  }, []);\n\n  return (\n    <div className='comments' ref={commentRef} />\n  )\n}\n\nexport default Comments;","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport Markdown from '../components/Markdown';\nimport PostSetting from '../components/PostSetting';\nimport Comments from '../components/Comments';\nimport Loading from '../components/Loading';\nimport '../style/post.scss';\n\n\nconst Post = ({postService, changePostsByDelete}) => {\n  const params = useParams();\n  const history = useHistory();\n  const [post, setPost] = useState([]);\n  const { user } = useAuth();\n\n  //get the post\n  useEffect(() => {\n    postService\n      .getPostById(params.id)\n      .then((data) => setPost(data))\n      .catch(console.error());\n  }, [postService, params.id]);\n\n  //delete the post\n  const onDelete = (id) => {\n    if (window.confirm('Do you want to delete this post?')) {\n      postService\n        .deletePost(id)\n        .then(() => changePostsByDelete(id))\n        .catch(console.error());\n      \n      history.push(\"/\");\n    }\n  };\n\n  const convertDate = (value) => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const month = converted.toLocaleString('en', { month: 'long' });;\n    const date = converted.getDate();\n\n    return `${date} ${month}, ${year}`;\n  }\n\n  return (\n    <>\n    {post.length === 0 ? <Loading /> :\n      (<section className='post'>\n        <h2 className=\"post__title\">{post.title}</h2>\n        <span className=\"post__createdAt\">{convertDate(post.createdAt)}</span>\n        <div className=\"post__contents\">\n          <Markdown text={post.text} />\n        </div>\n        {user && user.token && <PostSetting id={params.id} onDelete={onDelete} />}\n        <Comments />\n      </section>\n      )\n    }\n    </>\n  )\n}\n\nexport default Post;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../style/login.scss';\n\nconst Login = () => {\n  const history = useHistory();\n  const { onLogin } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onChangeUsername = (event) => setUsername(event.target.value);\n  const onChangePassword = (event) => setPassword(event.target.value);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    //fix: login fail notice\n    onLogin(username, password)\n    history.push('/')\n  }\n\n  return (\n    <div className=\"login\">\n      <h2 className=\"login__title\">Admin</h2>\n      <form onSubmit={(event) => onSubmit(event)}>\n        <input \n          type=\"text\" \n          placeholder=\"Username\"\n          value={username}\n          onChange={(event) => onChangeUsername(event)}\n        />\n        <input \n          type=\"password\" \n          placeholder=\"Password\"\n          value={password}\n          onChange={(event) => onChangePassword(event)}\n        />\n        <button type=\"submit\">LOG IN</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport Markdown from '../components/Markdown';\nimport '../style/createPost.scss';\n\nconst CreatePost = ({postService, changePostsByCreate, changePostsByUpdate}) => {\n  const history = useHistory();\n  const params = useParams();\n  const [formerData, setFormerData] = useState();\n  const [postTitle, setPostTitle] = useState();\n  const [postSubtitle, setPostSubtitle] = useState();\n  const [markdown, setMarkdown] = useState('');\n\n  //UPDATE: if it's for update, set post's data\n  useEffect(() => {\n    if(params.id){\n      postService\n        .getPostById(params.id)\n        .then((data) => setFormerData(data))\n        .catch(console.error());\n    }\n  }, [postService, params.id]);\n\n  //UPDATE: after formerData is set, set all input state with that.\n  useEffect(() => {\n    if(formerData){\n      //set former state\n      setPostTitle(formerData.title);\n      setPostSubtitle(formerData.subtitle);\n      setMarkdown(formerData.text);\n    }\n  }, [formerData])\n\n  //input handling\n  const onTitleChange = (event) => setPostTitle(event.target.value);\n  const onSubtitleChange = (event) => setPostSubtitle(event.target.value);\n  const onMarkdownChange = (event) => setMarkdown(event.target.value);\n\n  //form submit\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const post = {\n      title: postTitle,\n      subtitle: postSubtitle,\n      text: markdown\n    }\n\n    if(params.id){\n    //UPDATE\n      postService\n        .updatePost(params.id, post.title, post.subtitle, post.text)\n        .then((data) => changePostsByUpdate(params.id, data))\n        .catch(console.error);\n\n      history.push(`/post/${params.id}`);\n    }else {\n    //CREATE\n      postService\n        .createPost(post.title, post.subtitle, post.text)\n        .then((data) => changePostsByCreate(data))\n        .catch(console.error);\n\n      history.push(\"/\");\n    }\n  }\n\n  return (\n    <div className=\"createPost\">\n      <div className=\"createPost-titlebox\">\n        <input \n          type=\"text\" \n          className=\"createPost__title\" \n          placeholder=\"Post Title\" \n          value={postTitle ? postTitle : ''}\n          onChange={onTitleChange} \n        />\n        <input \n          type=\"text\" \n          className=\"createPost__subtitle\" \n          placeholder=\"Post Subtitle\" \n          value={postSubtitle ? postSubtitle : ''}\n          onChange={onSubtitleChange} \n        />\n        </div>\n      <div className=\"createPost-textbox\">\n          <textarea onChange={onMarkdownChange} value={markdown}></textarea>\n          <div className=\"createPost__markdown\">\n            <Markdown text={markdown} />\n          </div>\n        </div>\n      <div className=\"createPost-buttonbox\">\n        <button onClick={onSubmit} className=\"createPost__submitBtn\">Compost</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CreatePost;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './pages/Main';\nimport Post from './pages/Post';\nimport Login from './pages/Login';\nimport CreatePost from './pages/CreatePost';\n\nfunction App({postService}) {\n  const [posts, setPosts] = useState([]);\n\n  //update post list depend on selected category\n  useEffect(() => {\n    postService\n      .getPosts()\n      .then((data) => setPosts(data))\n      .catch(console.error())\n  }, [postService]);\n\n  //change posts stateb with CRUD actions\n  const changePostsByDelete = (id) => {\n    setPosts(() => posts.filter((post) => parseInt(post.id) !== parseInt(id)));\n  };\n\n  const changePostsByCreate = (post) => {\n    setPosts(() => [post, ...posts]);\n  };\n\n  //오류 수정하기\n  const changePostsByUpdate = (id, updated) => {\n    console.log(\"Update\")\n    setPosts(() => posts.map((post) => parseInt(post.id) === parseInt(id) ? updated : post));\n  };\n\n\n  return (\n    <div className=\"App\">\n      {/* <Header /> */}\n      <Switch>\n        {/* main: all posts */}\n        <Route exact path=\"/\">\n          <Main \n            postService={postService}  \n            posts={posts} \n          />\n        </Route>\n\n        {/* create post page */}\n        <Route exact path=\"/post/compose\">\n          <CreatePost \n            postService={postService} \n            changePostsByCreate={changePostsByCreate}\n            changePostsByUpdate={changePostsByUpdate}\n          />\n        </Route>\n\n        {/* post(id) page */}\n        <Route exact path=\"/post/:id\">\n          <Post \n            postService={postService} \n            changePostsByDelete={changePostsByDelete} \n          />\n        </Route>\n\n        {/* edit post(id)  */}\n        <Route exact path=\"/post/:id/edit\">\n          <CreatePost postService={postService} />\n        </Route>\n\n        {/* login page  */}\n        <Route exact path=\"/login\" component={Login} />\n\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","export default class HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async fetch(url, options) {\n    //set all http options, and fetch data\n    const res = await fetch(`${this.baseURL}${url}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      credentials: 'include',\n    });\n\n    //fomat data to json, and catch error\n    let data;\n    try {\n      data = await res.json();\n    } catch (error) {\n      console.error(error);\n    }\n\n    //if there is error in respond, throw error message\n    if (res.status > 299 || res.status < 200) {\n      const message =\n        data && data.message ? data.message : 'http error!';\n\n      return new Error(message);\n    }\n\n    //if everything is okay, return json data\n    return data;\n  }\n}\n","export default class PostService {\n  constructor (http) {\n    this.http = http;\n  }\n\n  async getPosts() {\n    return this.http.fetch(`/posts`, {\n      method: 'GET',\n    });\n  }\n\n  async getPostById(id) {\n    return this.http.fetch(`/posts/${id}`, {\n      method: 'GET',\n    });\n  }\n\n  async createPost(title, subtitle, text) {\n    return this.http.fetch(`/posts`, {\n      method: 'POST',\n      body: JSON.stringify({ title, subtitle, text })\n    });\n  }\n\n  async updatePost(id, title, subtitle, text) {\n    return this.http.fetch(`/posts/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({ title, subtitle, text })\n    });\n  }\n\n  async deletePost(id) {\n    return this.http.fetch(`/posts/${id}`, {\n      method: 'DELETE',\n    });\n  }\n}","export default class AuthService {\n  constructor (http) {\n    this.http = http;\n  }\n\n  async login(username, password) {\n    return this.http.fetch(`/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password })\n    });\n  }\n\n  async logout() {\n    return this.http.fetch(`/auth/logout`, {\n      method: 'POST',\n    });\n  }\n\n  async me() { \n    return this.http.fetch(`/auth/me`, {\n      method: 'GET',\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport { AuthProvider } from './context/AuthContext';\nimport HttpClient from './network/http';\nimport PostService from './service/post.js';\nimport AuthService from './service/auth';\n\n//basic api url\nconst baseURL = 'https://jia-blog.herokuapp.com';\n// const baseURL = `http://localhost:8080`;\n\n//class that has http common option and error handling\nconst httpClient = new HttpClient(baseURL);\n\n//class that controll all post/auth related APIs\nconst postService = new PostService(httpClient);\nconst authService = new AuthService(httpClient);\n\n//basic url\nconst routeBase = '/blog-client';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={routeBase}>\n      <AuthProvider authService={authService}>\n        <App postService={postService} />\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}