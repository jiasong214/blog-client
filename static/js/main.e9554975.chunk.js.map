{"version":3,"sources":["context/AuthContext.jsx","components/Footer.jsx","assets/image.png","components/Intro.jsx","components/PostCard.jsx","components/Loading.jsx","components/PostCartsList.jsx","components/CreatePostBtn.jsx","pages/Main.jsx","components/BackBtn.jsx","components/Markdown.jsx","components/PostSetting.jsx","components/Comments.jsx","pages/Post.jsx","pages/Login.jsx","pages/CreatePost.jsx","App.js","network/http.js","service/post.js","service/auth.js","index.js"],"names":["AuthContext","createContext","AuthProvider","authService","children","useState","undefined","user","setUser","useEffect","me","then","data","onLogin","useCallback","username","password","a","login","onLogout","logout","context","useMemo","Provider","value","useAuth","useContext","Footer","history","useHistory","className","token","onClick","window","confirm","push","to","Intro","href","target","rel","src","image","alt","PostCard","id","title","createdAt","text","pathname","converted","Date","year","getFullYear","month","toLocaleString","date","getDate","convertDate","trimmedText","substr","replaceAll","generatePreview","Loading","PostCardsList","posts","length","map","post","CreatePostBtn","viewBox","d","Main","BackBtn","Markdown","syntaxHighlighter","code","node","inline","props","match","exec","style","materialDark","language","PreTag","String","replace","components","remarkPlugins","gfm","PostSetting","onDelete","Comments","commentRef","createRef","utterances","document","createElement","Object","entries","repo","theme","crossorigin","async","forEach","key","setAttribute","current","appendChild","ref","Post","postService","changePostsByDelete","params","useParams","setPost","getPostById","catch","console","error","deletePost","Login","setUsername","setPassword","onSubmit","event","preventDefault","type","placeholder","onChange","onChangeUsername","onChangePassword","CreatePost","changePostsByCreate","changePostsByUpdate","formerData","setFormerData","setTitle","markdown","setMarkdown","alert","validateTitle","updatePost","createPost","App","setPosts","getPosts","exact","path","updated","log","parseInt","filter","component","HttpClient","baseURL","this","url","options","fetch","headers","credentials","res","json","status","message","Error","PostService","http","method","body","JSON","stringify","AuthService","httpClient","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.e9554975.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, createContext } from 'react';\nimport { useContext } from 'react';\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = ({authService, children}) => {\n  const [user, setUser] = useState(undefined);\n\n  useEffect(() => {\n    authService\n      .me()\n      .then((data) => setUser(data));\n  }, [authService]);\n\n  const onLogin = useCallback(async (username, password) => {\n    authService\n      .login(username, password)\n      .then((data) => setUser(data))\n  }, [authService])\n\n  const onLogout = useCallback(async () => {\n    authService\n      .logout()\n      .then(() => setUser(undefined));\n  }, [authService])\n\n  const context = useMemo(() => ({\n    user, onLogin, onLogout\n  }), [user, onLogin, onLogout])\n\n  return (\n    <AuthContext.Provider value={context}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => useContext(AuthContext);","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../style/footer.scss';\n\nconst Footer = () => {\n  const history = useHistory();\n  const { user, onLogout } = useAuth();\n\n  const onClickLogout = () => {\n    if (window.confirm('Do you want to log out?')) {\n      onLogout();\n      history.push('/');\n    }\n  }\n\n  return (\n    <footer className=\"footer\">\n       {user ? user.token ? \n          <div className='footer__logout' onClick={onClickLogout}>Logout Admin</div> : \n          <Link className=\"footer__login\" to='/login'>Admin account</Link> :\n          <Link className=\"footer__login\" to='/login'>Admin account</Link>\n        }\n      <p className=\"footer__copyright\">\n        &copy; 2021 Jia Song\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/image.1836321e.png\";","import React from 'react';\nimport '../style/intro.scss';\n// import Avatar from '../images/avatar2.jpg';\nimport image from '../assets/image.png';\n\nconst Intro = () => {\n  return (\n    <aside className=\"intro\">\n      <h1 className=\"intro__title\">\n        Blog\n      </h1>\n      <p className=\"intro__text\">\n        About ... by <a href='https://github.com/JiaSong214' target=\"_blank\" rel=\"noreferrer\">Jia Song</a>\n      </p>\n      <div className=\"intro__img\">\n        <img src={image} alt=\"profile\" />\n      </div>\n    </aside>\n  )\n}\n\nexport default Intro;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/postCard.scss';\n\nconst PostCard = ({id, title, createdAt, text }) => {\n\n  const convertDate = (value) => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const month = converted.toLocaleString('en', { month: 'long' });;\n    const date = converted.getDate();\n\n    return `${date} ${month}, ${year}`;\n  }\n\n  const generatePreview = (text) => {\n    const previewText = text.substr(0, 500);\n    const trimmedText = previewText.replaceAll('#', '').replaceAll('`', '');\n\n    return `${trimmedText}...`;\n  }\n\n  return (\n    <li className=\"postCard\">\n      <Link to={{pathname: `/post/${id}`}}>\n        <h3 className=\"postCard__title\">{title}</h3>\n      </Link>\n      <span className=\"postCard__createdAt\">Posted on {convertDate(createdAt)}</span>\n      <div className=\"postCard__preview\">{generatePreview(text)}</div>\n      <Link to={{pathname: `/post/${id}`}}>\n        <div className=\"postCard__readBtn\">Continue Reading &rarr;</div>\n      </Link>\n    </li>\n  )\n}\n\nexport default PostCard;","import React from 'react';\nimport '../style/loading.scss';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <div className=\"ellipsis\">\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Loading;","import React from 'react';\nimport PostCard from './PostCard';\nimport Loading from './Loading';\nimport '../style/postCardsList.scss';\n\nconst PostCardsList = ({posts}) => {\n\n  return (\n    <>\n      {posts.length === 0 && <Loading />}\n      <ul className=\"postCardsList\">\n        {posts.map((post) => (\n          <PostCard \n            key={post.id}\n            id={post.id}\n            title={post.title}\n            createdAt={post.createdAt}\n            text={post.text} \n          />\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default PostCardsList;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/createPostBtn.scss';\n\nconst CreatePostBtn = () => {\n  return (\n    <aside className='createPostBtn'>\n      <Link to='/post/compose'>\n        <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <g><path d=\"M8.8 7.2H5.6V3.9c0-.4-.3-.8-.8-.8s-.7.4-.7.8v3.3H.8c-.4 0-.8.3-.8.8s.3.8.8.8h3.3v3.3c0 .4.3.8.8.8s.8-.3.8-.8V8.7H9c.4 0 .8-.3.8-.8s-.5-.7-1-.7zm15-4.9v-.1h-.1c-.1 0-9.2 1.2-14.4 11.7-3.8 7.6-3.6 9.9-3.3 9.9.3.1 3.4-6.5 6.7-9.2 5.2-1.1 6.6-3.6 6.6-3.6s-1.5.2-2.1.2c-.8 0-1.4-.2-1.7-.3 1.3-1.2 2.4-1.5 3.5-1.7.9-.2 1.8-.4 3-1.2 2.2-1.6 1.9-5.5 1.8-5.7z\"></path></g>\n        </svg>\n      </Link>\n    </aside>\n  )\n}\n\nexport default CreatePostBtn;","import React from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport Intro from '../components/Intro';\nimport PostCardsList from '../components/PostCartsList';\nimport CreatePostBtn from '../components/CreatePostBtn';\n\nconst Main = ({ posts }) => {\n  const { user } = useAuth();\n\n  return (\n    <main className='main'>\n      <Intro />\n      <PostCardsList posts={posts} />\n      {user && user.token &&  <CreatePostBtn /> }\n    </main>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/backBtn.scss';\n\n\nconst BackBtn = () => {\n  return (\n    <aside className=\"backBtn\">\n      <div>\n        <Link to='/'>\n          &larr; Back\n        </Link>\n      </div>\n    </aside>\n  )\n}\n\nexport default BackBtn;","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport {materialDark} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport gfm from 'remark-gfm';\nimport '../style/markdown.scss';\n\n\nconst Markdown = ({text}) => {\n\n  const syntaxHighlighter = {\n    code({node, inline, className, children, ...props}) {\n      const match = /language-(\\w+)/.exec(className || '')\n      return !inline && match ? (\n        <SyntaxHighlighter style={materialDark} language={match[1]} PreTag=\"div\" children={String(children).replace(/\\n$/, '')} {...props} />\n      ) : (\n        <code className={className} {...props}>\n          {children}\n        </code>\n      )\n    }\n  }\n\n  return (\n    <div className=\"markdown\">\n      <ReactMarkdown\n        components={syntaxHighlighter}\n        remarkPlugins={[gfm]} \n        children={text} />\n    </div>\n  )\n}\n\nexport default Markdown;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/postSetting.scss';\n\nconst PostSetting = ({id, onDelete}) => {\n  return (\n    <div className=\"postSetting\">\n      <Link to={{ pathname: `/post/${id}/edit` }}>\n        Edit\n      </Link>\n      <div className='deletePostBtn' onClick={() => onDelete(id)}>\n        Delete\n      </div>\n    </div>\n  )\n}\n\nexport default PostSetting;","import React, { createRef, useEffect } from 'react';\nimport '../style/comments.scss';\n\nconst Comments = () => {\n  const commentRef = createRef();\n\n  useEffect(() => {\n    const utterances = document.createElement('script');\n\n    const utterancesConfig = {\n      src: \"https://utteranc.es/client.js\",\n      repo: \"jiasong214/blog-comments\",\n      \"issue-term\": \"pathname\",\n      theme: \"github-light\",\n      crossorigin: \"anonymous\",\n      async: true\n    }\n\n    Object.entries(utterancesConfig).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    commentRef.current.appendChild(utterances);\n  }, []);\n\n  return (\n    <div className='comments' ref={commentRef} />\n  )\n}\n\nexport default Comments;","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport BackBtn from '../components/BackBtn';\nimport Markdown from '../components/Markdown';\nimport PostSetting from '../components/PostSetting';\nimport Comments from '../components/Comments';\nimport Loading from '../components/Loading';\nimport '../style/post.scss';\n\n\nconst Post = ({postService, changePostsByDelete}) => {\n  const params = useParams();\n  const history = useHistory();\n  const [post, setPost] = useState([]);\n  const { user } = useAuth();\n\n  //get the post\n  useEffect(() => {\n    postService\n      .getPostById(params.id)\n      .then((data) => setPost(data))\n      .catch(console.error());\n  }, [postService, params.id]);\n\n  //delete the post\n  const onDelete = (id) => {\n    if (window.confirm('Do you want to delete this post?')) {\n      postService\n        .deletePost(id)\n        .then(() => changePostsByDelete(id))\n        .catch(console.error());\n      \n      history.push(\"/\");\n    }\n  };\n\n  const convertDate = (value) => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const month = converted.toLocaleString('en', { month: 'long' });;\n    const date = converted.getDate();\n\n    return `${date} ${month}, ${year}`;\n  }\n\n  return (\n    <>\n    <BackBtn />\n    {post.length === 0 ? <Loading /> :\n      (<section className='post'>\n        <h2 className=\"post__title\">{post.title}</h2>\n        <span className=\"post__createdAt\">Posted on {convertDate(post.createdAt)}</span>\n        <div className=\"post__contents\">\n          <Markdown text={post.text} />\n        </div>\n        {user && user.token && <PostSetting id={params.id} onDelete={onDelete} />}\n        <Comments />\n      </section>\n      )\n    }\n    </>\n  )\n}\n\nexport default Post;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport BackBtn from '../components/BackBtn';\nimport '../style/login.scss';\n\nconst Login = () => {\n  const history = useHistory();\n  const { onLogin } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onChangeUsername = (event) => setUsername(event.target.value);\n  const onChangePassword = (event) => setPassword(event.target.value);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    //fix: login fail notice\n    onLogin(username, password)\n    history.push('/')\n  }\n\n  return (\n    <>\n      <BackBtn />\n      <div className=\"login\">\n        <h2 className=\"login__title\">Admin</h2>\n        <form onSubmit={(event) => onSubmit(event)}>\n          <input \n            type=\"text\" \n            placeholder=\"Username\"\n            value={username}\n            onChange={(event) => onChangeUsername(event)}\n          />\n          <input \n            type=\"password\" \n            placeholder=\"Password\"\n            value={password}\n            onChange={(event) => onChangePassword(event)}\n          />\n          <button type=\"submit\">LOG IN</button>\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default Login;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport BackBtn from '../components/BackBtn';\nimport Markdown from '../components/Markdown';\nimport '../style/createPost.scss';\n\nconst CreatePost = ({postService, changePostsByCreate, changePostsByUpdate}) => {\n  const history = useHistory();\n  const params = useParams();\n  const [formerData, setFormerData] = useState();\n  const [title, setTitle] = useState();\n  const [markdown, setMarkdown] = useState('');\n\n  //UPDATE: if it's for update, set post's data\n  useEffect(() => {\n    if(params.id){\n      postService\n        .getPostById(params.id)\n        .then((data) => setFormerData(data))\n        .catch(console.error());\n    }\n  }, [postService, params.id]);\n\n  //UPDATE: after formerData is set, set all input state with that.\n  useEffect(() => {\n    if(formerData){\n      //set former state\n      setTitle(formerData.title);\n      setMarkdown(formerData.text);\n    }\n  }, [formerData])\n\n  //input handling\n  const onTitleChange = (event) => setTitle(event.target.value);\n  const onMarkdownChange = (event) => setMarkdown(event.target.value);\n\n  //input validating\n  const validateTitle = (title) => {\n    if(title === '') {\n      alert(\"Title must be filled out\");\n      return false;\n    }\n    return true;\n  }\n\n\n  //form submit\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    //if title is not filled out, return\n    if(!validateTitle(title)) return;\n\n    if(params.id){\n    //UPDATE\n      postService\n        .updatePost(params.id, title, markdown)\n        .then((data) => changePostsByUpdate(params.id, data))\n        .catch(console.error);\n\n      history.push(`/post/${params.id}`);\n    }else {\n    //CREATE\n      postService\n        .createPost(title, markdown)\n        .then((data) => changePostsByCreate(data))\n        .catch(console.error);\n\n      history.push(\"/\");\n    }\n  }\n\n  return (\n    <>\n      <BackBtn />\n      <div className=\"createPost\">\n        <div className=\"createPost-titlebox\">\n          <input \n            type=\"text\" \n            className=\"createPost__title\" \n            placeholder=\"Post Title\" \n            value={title ? title : ''}\n            onChange={onTitleChange} \n          />\n          </div>\n        <div className=\"createPost-textbox\">\n            <textarea onChange={onMarkdownChange} value={markdown}></textarea>\n            <div className=\"createPost__markdown\">\n              <Markdown text={markdown} />\n            </div>\n          </div>\n        <div className=\"createPost-buttonbox\">\n          <button onClick={onSubmit} className=\"createPost__submitBtn\">Compost</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CreatePost;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Main from './pages/Main';\nimport Post from './pages/Post';\nimport Login from './pages/Login';\nimport CreatePost from './pages/CreatePost';\n\nfunction App({postService}) {\n  const [posts, setPosts] = useState([]);\n\n  //update post list depend on selected category\n  useEffect(() => {\n    postService\n      .getPosts()\n      .then((data) => setPosts(data))\n      .catch(console.error())\n  }, [postService]);\n\n  //change posts stateb with CRUD actions\n  const changePostsByDelete = (id) => {\n    setPosts(() => posts.filter((post) => parseInt(post.id) !== parseInt(id)));\n  };\n\n  const changePostsByCreate = (post) => {\n    setPosts(() => [post, ...posts]);\n  };\n\n  //오류 수정하기\n  const changePostsByUpdate = (id, updated) => {\n    console.log(\"Update\")\n    setPosts(() => posts.map((post) => parseInt(post.id) === parseInt(id) ? updated : post));\n  };\n\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        {/* main: all posts */}\n        <Route exact path=\"/\">\n          <Main \n            postService={postService}  \n            posts={posts} \n          />\n        </Route>\n\n        {/* create post page */}\n        <Route exact path=\"/post/compose\">\n          <CreatePost \n            postService={postService} \n            changePostsByCreate={changePostsByCreate}\n            changePostsByUpdate={changePostsByUpdate}\n          />\n        </Route>\n\n        {/* post(id) page */}\n        <Route exact path=\"/post/:id\">\n          <Post \n            postService={postService} \n            changePostsByDelete={changePostsByDelete} \n          />\n        </Route>\n\n        {/* edit post(id)  */}\n        <Route exact path=\"/post/:id/edit\">\n          <CreatePost postService={postService} />\n        </Route>\n\n        {/* login page  */}\n        <Route exact path=\"/login\" component={Login} />\n\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","export default class HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async fetch(url, options) {\n    //set all http options, and fetch data\n    const res = await fetch(`${this.baseURL}${url}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      credentials: 'include',\n    });\n\n    //fomat data to json, and catch error\n    let data;\n    try {\n      data = await res.json();\n    } catch (error) {\n      console.error(error);\n    }\n\n    //if there is error in respond, throw error message\n    if (res.status > 299 || res.status < 200) {\n      const message =\n        data && data.message ? data.message : 'http error!';\n\n      return new Error(message);\n    }\n\n    //if everything is okay, return json data\n    return data;\n  }\n}\n","export default class PostService {\n  constructor (http) {\n    this.http = http;\n  }\n\n  async getPosts() {\n    return this.http.fetch(`/posts`, {\n      method: 'GET',\n    });\n  }\n\n  async getPostById(id) {\n    return this.http.fetch(`/posts/${id}`, {\n      method: 'GET',\n    });\n  }\n\n  async createPost(title, text) {\n    return this.http.fetch(`/posts`, {\n      method: 'POST',\n      body: JSON.stringify({ title, text })\n    });\n  }\n\n  async updatePost(id, title, text) {\n    return this.http.fetch(`/posts/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({ title, text })\n    });\n  }\n\n  async deletePost(id) {\n    return this.http.fetch(`/posts/${id}`, {\n      method: 'DELETE',\n    });\n  }\n}","export default class AuthService {\n  constructor (http) {\n    this.http = http;\n  }\n\n  async login(username, password) {\n    return this.http.fetch(`/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password })\n    });\n  }\n\n  async logout() {\n    return this.http.fetch(`/auth/logout`, {\n      method: 'POST',\n    });\n  }\n\n  async me() { \n    return this.http.fetch(`/auth/me`, {\n      method: 'GET',\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport { AuthProvider } from './context/AuthContext';\nimport HttpClient from './network/http';\nimport PostService from './service/post.js';\nimport AuthService from './service/auth';\n\n//basic api url\nconst baseURL = 'https://jia-blog.herokuapp.com';\n// const baseURL = `http://localhost:8080`;\n\n//class that has http common option and error handling\nconst httpClient = new HttpClient(baseURL);\n\n//class that controll all post/auth related APIs\nconst postService = new PostService(httpClient);\nconst authService = new AuthService(httpClient);\n\n//basic url\nconst routeBase = '/blog-client';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={routeBase}>\n      <AuthProvider authService={authService}>\n        <App postService={postService} />\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}