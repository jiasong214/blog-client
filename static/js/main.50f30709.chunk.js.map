{"version":3,"sources":["context/AuthContext.jsx","components/Footer.jsx","assets/image.png","components/Intro.jsx","components/PostCard.jsx","components/Loading.jsx","components/PostCartsList.jsx","components/CreatePostBtn.jsx","pages/Main.jsx","components/BackBtn.jsx","components/Markdown.jsx","components/PostSetting.jsx","components/Comments.jsx","pages/Post.jsx","pages/Login.jsx","pages/CreatePost.jsx","App.js","network/http.js","service/post.js","service/auth.js","index.js"],"names":["AuthContext","createContext","AuthProvider","authService","children","useState","undefined","user","setUser","useEffect","me","then","data","onLogin","useCallback","username","password","a","login","onLogout","logout","context","useMemo","Provider","value","useAuth","useContext","Footer","history","useHistory","className","token","onClick","window","confirm","push","to","Intro","href","target","rel","src","image","alt","PostCard","id","index","title","createdAt","text","pathname","converted","Date","year","getFullYear","month","toLocaleString","date","getDate","convertDate","textLength","innerWidth","trimmedText","substr","replaceAll","generatePreview","Loading","PostCardsList","posts","length","map","post","CreatePostBtn","viewBox","d","Main","BackBtn","Markdown","syntaxHighlighter","code","node","inline","props","match","exec","style","materialDark","language","PreTag","String","replace","components","remarkPlugins","gfm","PostSetting","onDelete","Comments","commentRef","createRef","utterances","document","createElement","Object","entries","repo","theme","crossorigin","async","forEach","key","setAttribute","current","appendChild","ref","Post","postService","changePostsByDelete","params","useParams","setPost","getPostById","catch","console","error","deletePost","Login","setUsername","setPassword","onSubmit","event","preventDefault","type","placeholder","onChange","onChangeUsername","onChangePassword","CreatePost","changePostsByCreate","changePostsByUpdate","formerData","setFormerData","setTitle","markdown","setMarkdown","alert","validateTitle","updatePost","createPost","App","setPosts","getPosts","exact","path","updated","parseInt","filter","component","HttpClient","baseURL","this","url","options","fetch","headers","credentials","res","json","status","message","Error","PostService","http","method","body","JSON","stringify","AuthService","httpClient","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50f30709.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, createContext } from 'react';\nimport { useContext } from 'react';\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = ({authService, children}) => {\n  const [user, setUser] = useState(undefined);\n\n  useEffect(() => {\n    authService\n      .me()\n      .then((data) => setUser(data));\n  }, [authService]);\n\n  const onLogin = useCallback(async (username, password) => {\n    authService\n      .login(username, password)\n      .then((data) => setUser(data))\n  }, [authService])\n\n  const onLogout = useCallback(async () => {\n    authService\n      .logout()\n      .then(() => setUser(undefined));\n  }, [authService])\n\n  const context = useMemo(() => ({\n    user, onLogin, onLogout\n  }), [user, onLogin, onLogout])\n\n  return (\n    <AuthContext.Provider value={context}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => useContext(AuthContext);","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../style/footer.scss';\n\nconst Footer = () => {\n  const history = useHistory();\n  const { user, onLogout } = useAuth();\n\n  const onClickLogout = () => {\n    if (window.confirm('Do you want to log out?')) {\n      onLogout();\n      history.push('/');\n    }\n  }\n\n  return (\n    <footer className=\"footer\">\n       {user ? user.token ? \n          <div className='footer__logout' onClick={onClickLogout}>Logout Admin</div> : \n          <Link className=\"footer__login\" to='/login'>Admin account</Link> :\n          <Link className=\"footer__login\" to='/login'>Admin account</Link>\n        }\n      <p className=\"footer__copyright\">\n        &copy; 2021 Jia Song\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/image.1836321e.png\";","import React from 'react';\nimport '../style/intro.scss';\n// import Avatar from '../images/avatar2.jpg';\nimport image from '../assets/image.png';\n\nconst Intro = () => {\n  return (\n    <aside className=\"intro\">\n      <h1 className=\"intro__title\">\n        Blog\n      </h1>\n      <p className=\"intro__text\">\n        About ... by <a href='https://github.com/JiaSong214' target=\"_blank\" rel=\"noreferrer\">Jia Song</a>\n      </p>\n      <div className=\"intro__img\">\n        <img src={image} alt=\"profile\" />\n      </div>\n    </aside>\n  )\n}\n\nexport default Intro;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/postCard.scss';\n\nconst PostCard = ({id, index, title, createdAt, text }) => {\n\n  const convertDate = (value) => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const month = converted.toLocaleString('en', { month: 'long' });;\n    const date = converted.getDate();\n\n    return `${date} ${month}, ${year}`;\n  }\n\n  const convertIndex = (value) => {\n    if(value === 11 || value === 12 || value === 13) return `${value}th Post`;\n\n    if(value % 10 === 1) return `${value}st Post`;\n    if(value % 10 === 2) return `${value}nd Post`;\n    if(value % 10 === 3) return `${value}st Post`;\n\n    return `${value}th Post`;\n  }\n\n  const generatePreview = (text) => {\n    let textLength = window.innerWidth > 768 ? 500 : window.innerWidth > 480 ? 360 : 280;\n    const previewText = text.substr(0, textLength);\n    const trimmedText = previewText.replaceAll('#', '').replaceAll('`', '').replaceAll('*', '');\n\n    return `${trimmedText}...`;\n  }\n\n  return (\n    <li className=\"postCard\">\n      <Link to={{pathname: `/post/${id}`}}>\n        <h3 className=\"postCard__title\">{title}</h3>\n      </Link>\n      <div className=\"postCard-container\">\n        <span className=\"postCard__index\">{convertIndex(index)}</span>\n        <span className=\"postCard__dot\"></span>\n        <span className=\"postCard__createdAt\">{convertDate(createdAt)}</span>\n      </div>\n      <div className=\"postCard__preview\">{generatePreview(text)}</div>\n      <Link to={{pathname: `/post/${id}`}}>\n        <div className=\"postCard__readBtn\">Continue Reading &rarr;</div>\n      </Link>\n    </li>\n  )\n}\n\nexport default PostCard;","import React from 'react';\nimport '../style/loading.scss';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <div className=\"ellipsis\">\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Loading;","import React from 'react';\nimport PostCard from './PostCard';\nimport Loading from './Loading';\nimport '../style/postCardsList.scss';\n\nconst PostCardsList = ({posts}) => {\n  let index = posts.length + 1;\n\n  return (\n    <>\n      {posts.length === 0 && <Loading />}\n      <ul className=\"postCardsList\">\n        {posts.map((post) => {\n          index --;\n\n          return (\n            <PostCard \n              key={post.id}\n              id={post.id}\n              index={index}\n              title={post.title}\n              createdAt={post.createdAt}\n              text={post.text} \n            />\n          )  \n        })}\n      </ul>\n    </>\n  )\n}\n\nexport default PostCardsList;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/createPostBtn.scss';\n\nconst CreatePostBtn = () => {\n  return (\n    <aside className='createPostBtn'>\n      <Link to='/post/compose'>\n        <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <g><path d=\"M8.8 7.2H5.6V3.9c0-.4-.3-.8-.8-.8s-.7.4-.7.8v3.3H.8c-.4 0-.8.3-.8.8s.3.8.8.8h3.3v3.3c0 .4.3.8.8.8s.8-.3.8-.8V8.7H9c.4 0 .8-.3.8-.8s-.5-.7-1-.7zm15-4.9v-.1h-.1c-.1 0-9.2 1.2-14.4 11.7-3.8 7.6-3.6 9.9-3.3 9.9.3.1 3.4-6.5 6.7-9.2 5.2-1.1 6.6-3.6 6.6-3.6s-1.5.2-2.1.2c-.8 0-1.4-.2-1.7-.3 1.3-1.2 2.4-1.5 3.5-1.7.9-.2 1.8-.4 3-1.2 2.2-1.6 1.9-5.5 1.8-5.7z\"></path></g>\n        </svg>\n      </Link>\n    </aside>\n  )\n}\n\nexport default CreatePostBtn;","import React from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport Intro from '../components/Intro';\nimport PostCardsList from '../components/PostCartsList';\nimport CreatePostBtn from '../components/CreatePostBtn';\n\nconst Main = ({ posts }) => {\n  const { user } = useAuth();\n\n  return (\n    <main className='main'>\n      <Intro />\n      <PostCardsList posts={posts} />\n      {user && user.token &&  <CreatePostBtn /> }\n    </main>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/backBtn.scss';\n\n\nconst BackBtn = () => {\n  return (\n    <aside className=\"backBtn\">\n      <div>\n        <Link to='/'>\n          &larr; Back\n        </Link>\n      </div>\n    </aside>\n  )\n}\n\nexport default BackBtn;","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport {materialDark} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport gfm from 'remark-gfm';\nimport '../style/markdown.scss';\n\n\nconst Markdown = ({text}) => {\n\n  const syntaxHighlighter = {\n    code({node, inline, className, children, ...props}) {\n      const match = /language-(\\w+)/.exec(className || '')\n      return !inline && match ? (\n        <SyntaxHighlighter style={materialDark} language={match[1]} PreTag=\"div\" children={String(children).replace(/\\n$/, '')} {...props} />\n      ) : (\n        <code className={className} {...props}>\n          {children}\n        </code>\n      )\n    }\n  }\n\n  return (\n    <div className=\"markdown\">\n      <ReactMarkdown\n        components={syntaxHighlighter}\n        remarkPlugins={[gfm]} \n        children={text} />\n    </div>\n  )\n}\n\nexport default Markdown;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/postSetting.scss';\n\nconst PostSetting = ({id, onDelete}) => {\n  return (\n    <div className=\"postSetting\">\n      <Link to={{ pathname: `/post/${id}/edit` }}>\n        Edit\n      </Link>\n      <div className='deletePostBtn' onClick={() => onDelete(id)}>\n        Delete\n      </div>\n    </div>\n  )\n}\n\nexport default PostSetting;","import React, { createRef, useEffect } from 'react';\nimport '../style/comments.scss';\n\nconst Comments = () => {\n  const commentRef = createRef();\n\n  useEffect(() => {\n    const utterances = document.createElement('script');\n\n    const utterancesConfig = {\n      src: \"https://utteranc.es/client.js\",\n      repo: \"jiasong214/blog-comments\",\n      \"issue-term\": \"pathname\",\n      theme: \"github-light\",\n      crossorigin: \"anonymous\",\n      async: true\n    }\n\n    Object.entries(utterancesConfig).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    commentRef.current.appendChild(utterances);\n  }, []);\n\n  return (\n    <div className='comments' ref={commentRef} />\n  )\n}\n\nexport default Comments;","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport BackBtn from '../components/BackBtn';\nimport Markdown from '../components/Markdown';\nimport PostSetting from '../components/PostSetting';\nimport Comments from '../components/Comments';\nimport Loading from '../components/Loading';\nimport '../style/post.scss';\n\n\nconst Post = ({postService, changePostsByDelete}) => {\n  const params = useParams();\n  const history = useHistory();\n  const [post, setPost] = useState([]);\n  const { user } = useAuth();\n\n  //get the post\n  useEffect(() => {\n    postService\n      .getPostById(params.id)\n      .then((data) => setPost(data))\n      .catch(console.error());\n  }, [postService, params.id]);\n\n  //최적화하기\n  //delete the post\n  const onDelete = (id) => {\n    if (window.confirm('Do you want to delete this post?')) {\n      postService\n        .deletePost(id)\n        .then(() => changePostsByDelete(id))\n        .catch(console.error());\n      \n      history.push(\"/\");\n    }\n  };\n\n  const convertDate = (value) => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const month = converted.toLocaleString('en', { month: 'long' });;\n    const date = converted.getDate();\n\n    return `${date} ${month}, ${year}`;\n  }\n\n  return (\n    <>\n    <BackBtn />\n    {post.length === 0 ? <Loading /> :\n      (<section className='post'>\n        <h2 className=\"post__title\">{post.title}</h2>\n        <span className=\"post__createdAt\">Posted on {convertDate(post.createdAt)}</span>\n        <div className=\"post__contents\">\n          <Markdown text={post.text} />\n        </div>\n        {user && user.token && <PostSetting id={params.id} onDelete={onDelete} />}\n        <Comments />\n      </section>\n      )\n    }\n    </>\n  )\n}\n\nexport default Post;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport BackBtn from '../components/BackBtn';\nimport '../style/login.scss';\n\nconst Login = () => {\n  const history = useHistory();\n  const { onLogin } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onChangeUsername = (event) => setUsername(event.target.value);\n  const onChangePassword = (event) => setPassword(event.target.value);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    //fix: login fail notice\n    onLogin(username, password)\n    history.push('/')\n  }\n\n  return (\n    <>\n      <BackBtn />\n      <div className=\"login\">\n        <h2 className=\"login__title\">Admin</h2>\n        <form onSubmit={(event) => onSubmit(event)}>\n          <input \n            type=\"text\" \n            placeholder=\"Username\"\n            value={username}\n            onChange={(event) => onChangeUsername(event)}\n          />\n          <input \n            type=\"password\" \n            placeholder=\"Password\"\n            value={password}\n            onChange={(event) => onChangePassword(event)}\n          />\n          <button type=\"submit\">LOG IN</button>\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default Login;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport BackBtn from '../components/BackBtn';\nimport Markdown from '../components/Markdown';\nimport '../style/createPost.scss';\n\nconst CreatePost = ({postService, changePostsByCreate, changePostsByUpdate}) => {\n  const history = useHistory();\n  const params = useParams();\n  const [formerData, setFormerData] = useState();\n  const [title, setTitle] = useState();\n  const [markdown, setMarkdown] = useState('');\n\n  //UPDATE: if it's for update, set post's data\n  useEffect(() => {\n    if(params.id){\n      postService\n        .getPostById(params.id)\n        .then((data) => setFormerData(data))\n        .catch(console.error());\n    }\n  }, [postService, params.id]);\n\n  //UPDATE: after formerData is set, set all input state with that.\n  useEffect(() => {\n    if(formerData){\n      //set former state\n      setTitle(formerData.title);\n      setMarkdown(formerData.text);\n    }\n  }, [formerData])\n\n  //input handling\n  const onTitleChange = (event) => setTitle(event.target.value);\n  const onMarkdownChange = (event) => setMarkdown(event.target.value);\n\n  //input validating\n  const validateTitle = (title) => {\n    if(title === '') {\n      alert(\"Title must be filled out\");\n      return false;\n    }\n    return true;\n  }\n\n\n  //form submit\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    //if title is not filled out, return\n    if(!validateTitle(title)) return;\n\n\n    if(params.id){\n    //UPDATE\n      postService\n        .updatePost(params.id, title, markdown)\n        // .then((data) => changePostsByUpdate(params.id, data))\n        // changePostsByCreate로 연결이 안됨.\n        .catch(console.error);\n\n      history.push(`/post/${params.id}`);\n    }else {\n    //CREATE\n      postService\n        .createPost(title, markdown)\n        .then((data) => changePostsByCreate(data))\n        .catch(console.error);\n\n      history.push(\"/\");\n    }\n  }\n\n  return (\n    <>\n      <BackBtn />\n      <div className=\"createPost\">\n        <div className=\"createPost-titlebox\">\n          <input \n            type=\"text\" \n            className=\"createPost__title\" \n            placeholder=\"Post Title\" \n            value={title ? title : ''}\n            onChange={onTitleChange} \n          />\n          </div>\n        <div className=\"createPost-textbox\">\n            <textarea onChange={onMarkdownChange} value={markdown}></textarea>\n            <div className=\"createPost__markdown\">\n              <Markdown text={markdown} />\n            </div>\n          </div>\n        <div className=\"createPost-buttonbox\">\n          <button onClick={onSubmit} className=\"createPost__submitBtn\">Compost</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CreatePost;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Main from './pages/Main';\nimport Post from './pages/Post';\nimport Login from './pages/Login';\nimport CreatePost from './pages/CreatePost';\n\nfunction App({postService}) {\n  const [posts, setPosts] = useState([]);\n\n  //update post list depend on selected category\n  useEffect(() => {\n    postService\n      .getPosts()\n      .then((data) => setPosts(data))\n      .catch(console.error())\n  }, [postService]);\n\n  //change posts stateb with CRUD actions\n  const changePostsByDelete = (id) => {\n    setPosts(() => posts.filter((post) => parseInt(post.id) !== parseInt(id)));\n  };\n\n  const changePostsByCreate = (post) => {\n    setPosts(() => [post, ...posts]);\n  };\n\n\n  const changePostsByUpdate = (id, updated) => {\n    setPosts(() => posts.map((post) => parseInt(post.id) === parseInt(id) ? updated : post));\n  };\n\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        {/* main: all posts */}\n        <Route exact path=\"/\">\n          <Main \n            postService={postService}  \n            posts={posts} \n          />\n        </Route>\n\n        {/* create post page */}\n        <Route exact path=\"/post/compose\">\n          <CreatePost \n            postService={postService} \n            changePostsByCreate={changePostsByCreate}\n            changePostsByUpdate={changePostsByUpdate}\n          />\n        </Route>\n\n        {/* post(id) page */}\n        <Route exact path=\"/post/:id\">\n          <Post \n            postService={postService} \n            changePostsByDelete={changePostsByDelete} \n          />\n        </Route>\n\n        {/* edit post(id)  */}\n        <Route exact path=\"/post/:id/edit\">\n          <CreatePost postService={postService} />\n        </Route>\n\n        {/* login page  */}\n        <Route exact path=\"/login\" component={Login} />\n\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","export default class HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async fetch(url, options) {\n    //set all http options, and fetch data\n    const res = await fetch(`${this.baseURL}${url}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      credentials: 'include',\n    });\n\n    //fomat data to json, and catch error\n    let data;\n    try {\n      data = await res.json();\n    } catch (error) {\n      console.error(error);\n    }\n\n    //if there is error in respond, throw error message\n    if (res.status > 299 || res.status < 200) {\n      const message =\n        data && data.message ? data.message : 'http error!';\n\n      return new Error(message);\n    }\n\n    //if everything is okay, return json data\n    return data;\n  }\n}\n","export default class PostService {\n  constructor (http) {\n    this.http = http;\n  }\n\n  async getPosts() {\n    return this.http.fetch(`/posts`, {\n      method: 'GET',\n    });\n  }\n\n  async getPostById(id) {\n    return this.http.fetch(`/posts/${id}`, {\n      method: 'GET',\n    });\n  }\n\n  async createPost(title, text) {\n    return this.http.fetch(`/posts`, {\n      method: 'POST',\n      body: JSON.stringify({ title, text })\n    });\n  }\n\n  async updatePost(id, title, text) {\n    return this.http.fetch(`/posts/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({ title, text })\n    });\n  }\n\n  async deletePost(id) {\n    return this.http.fetch(`/posts/${id}`, {\n      method: 'DELETE',\n    });\n  }\n}","export default class AuthService {\n  constructor (http) {\n    this.http = http;\n  }\n\n  async login(username, password) {\n    return this.http.fetch(`/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password })\n    });\n  }\n\n  async logout() {\n    return this.http.fetch(`/auth/logout`, {\n      method: 'POST',\n    });\n  }\n\n  async me() { \n    return this.http.fetch(`/auth/me`, {\n      method: 'GET',\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport { AuthProvider } from './context/AuthContext';\nimport HttpClient from './network/http';\nimport PostService from './service/post.js';\nimport AuthService from './service/auth';\n\n//basic api url\nconst baseURL = 'https://jia-blog.herokuapp.com';\n// const baseURL = `http://localhost:8080`;\n\n//class that has http common option and error handling\nconst httpClient = new HttpClient(baseURL);\n\n//class that controll all post/auth related APIs\nconst postService = new PostService(httpClient);\nconst authService = new AuthService(httpClient);\n\n// //basic url\n// const routeBase = '/blog-client';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider authService={authService}>\n        <App postService={postService} />\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}