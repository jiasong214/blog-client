{"version":3,"sources":["hooks/useInfitineScroll.jsx","assets/image.png","components/Intro.jsx","components/PostCard.jsx","components/PostCartsList.jsx","components/CreatePostBtn.jsx","pages/Main.jsx","components/Loading.jsx"],"names":["useInfiniteScroll","root","threshold","rootMargin","onIntersect","useState","target","setTarget","useEffect","observer","IntersectionObserver","observe","disconnect","Intro","className","href","rel","src","image","alt","PostCard","value","id","index","title","createdAt","text","to","pathname","converted","Date","year","getFullYear","month","toLocaleString","date","getDate","convertDate","textLength","window","innerWidth","trimmedText","substr","replaceAll","generatePreview","PostCardsList","posts","total","length","Loading","map","post","CreatePostBtn","viewBox","d","Main","updateCurrentPostIndex","user","useAuth","useCallback","entries","isIntersecting","token","ref"],"mappings":"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","file":"static/js/5.636adba2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = ({\n  root = null,\n  threshold = 0.1,\n  rootMargin = '0px',\n  onIntersect,\n}) => {\n  const [target, setTarget] = useState(null);\n\n  useEffect(() => {\n    let observer = new IntersectionObserver(onIntersect, { root, rootMargin, threshold });   \n\n    if (target) observer.observe(target);\n    return () => observer && observer.disconnect();\n  }, [target, root, rootMargin, threshold, onIntersect]);\n\n  return { setTarget };\n};\n\nexport default useInfiniteScroll;","export default __webpack_public_path__ + \"static/media/image.1836321e.png\";","import React from 'react';\nimport '../style/intro.scss';\n// import Avatar from '../images/avatar2.jpg';\nimport image from '../assets/image.png';\n\nconst Intro = () => {\n  return (\n    <aside className=\"intro\">\n      <h1 className=\"intro__title\">\n        Blog\n      </h1>\n      <p className=\"intro__text\">\n        About ... by <a href='https://github.com/JiaSong214' target=\"_blank\" rel=\"noreferrer\">Jia Song</a>\n      </p>\n      <div className=\"intro__img\">\n        <img src={image} alt=\"profile\" />\n      </div>\n    </aside>\n  )\n}\n\nexport default Intro;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/postCard.scss';\n\nconst PostCard = ({id, index, title, createdAt, text }) => {\n\n  const convertDate = (value) => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const month = converted.toLocaleString('en', { month: 'long' });;\n    const date = converted.getDate();\n\n    return `${date} ${month}, ${year}`;\n  }\n\n  const convertIndex = (value) => {\n    if(value === 11 || value === 12 || value === 13) return `${value}th Post`;\n\n    if(value % 10 === 1) return `${value}st Post`;\n    if(value % 10 === 2) return `${value}nd Post`;\n    if(value % 10 === 3) return `${value}st Post`;\n\n    return `${value}th Post`;\n  }\n\n  const generatePreview = (text) => {\n    let textLength = window.innerWidth > 768 ? 500 : window.innerWidth > 480 ? 360 : 280;\n    const previewText = text.substr(0, textLength);\n    const trimmedText = previewText.replaceAll('#', '').replaceAll('`', '').replaceAll('*', '');\n\n    return `${trimmedText}...`;\n  }\n\n  return (\n    <li className=\"postCard\">\n      <Link to={{pathname: `/post/${id}`}}>\n        <h3 className=\"postCard__title\">{title}</h3>\n      </Link>\n      <div className=\"postCard-container\">\n        <span className=\"postCard__index\">{convertIndex(index)}</span>\n        <span className=\"postCard__dot\"></span>\n        <span className=\"postCard__createdAt\">{convertDate(createdAt)}</span>\n      </div>\n      <div className=\"postCard__preview\">{generatePreview(text)}</div>\n      <Link to={{pathname: `/post/${id}`}}>\n        <div className=\"postCard__readBtn\">Continue Reading &rarr;</div>\n      </Link>\n    </li>\n  )\n}\n\nexport default PostCard;","import React from 'react';\nimport PostCard from './PostCard';\nimport Loading from './Loading';\nimport '../style/postCardsList.scss';\n\nconst PostCardsList = ({posts, total}) => {\n  let index = total + 1;\n\n  return (\n    <>\n      {posts.length === 0 && <Loading />}\n      <ul className=\"postCardsList\">\n        {posts.map((post) => {\n          index --;\n\n          return (\n            <PostCard \n              key={post.id}\n              id={post.id}\n              index={index}\n              title={post.title}\n              createdAt={post.createdAt}\n              text={post.text} \n            />\n          )  \n        })}\n      </ul>\n    </>\n  )\n}\n\nexport default PostCardsList;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/createPostBtn.scss';\n\nconst CreatePostBtn = () => {\n  return (\n    <aside className='createPostBtn'>\n      <Link to='/post/compose'>\n        <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <g><path d=\"M8.8 7.2H5.6V3.9c0-.4-.3-.8-.8-.8s-.7.4-.7.8v3.3H.8c-.4 0-.8.3-.8.8s.3.8.8.8h3.3v3.3c0 .4.3.8.8.8s.8-.3.8-.8V8.7H9c.4 0 .8-.3.8-.8s-.5-.7-1-.7zm15-4.9v-.1h-.1c-.1 0-9.2 1.2-14.4 11.7-3.8 7.6-3.6 9.9-3.3 9.9.3.1 3.4-6.5 6.7-9.2 5.2-1.1 6.6-3.6 6.6-3.6s-1.5.2-2.1.2c-.8 0-1.4-.2-1.7-.3 1.3-1.2 2.4-1.5 3.5-1.7.9-.2 1.8-.4 3-1.2 2.2-1.6 1.9-5.5 1.8-5.7z\"></path></g>\n        </svg>\n      </Link>\n    </aside>\n  )\n}\n\nexport default CreatePostBtn;","import React, { useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport useInfiniteScroll from '../hooks/useInfitineScroll';\nimport Intro from '../components/Intro';\nimport PostCardsList from '../components/PostCartsList';\nimport CreatePostBtn from '../components/CreatePostBtn';\n\nconst Main = ({ posts, total, updateCurrentPostIndex }) => {\n  const { user } = useAuth();\n\n  //when target touch a bottom, update post index. (to get more posts in usePosts)\n  const onIntersect = useCallback((entries) => {\n    if(posts.length >= total) return;\n\n    const target = entries[0];\n    if (target.isIntersecting) updateCurrentPostIndex(posts.length);\n  }, [posts]);\n\n  const { setTarget } = useInfiniteScroll({onIntersect});\n\n  return (\n    <main className='main'>\n      <Intro />\n      <PostCardsList posts={posts} total={total} />\n      {user && user.token &&  <CreatePostBtn /> }\n      <div ref={setTarget}/>\n    </main>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport '../style/loading.scss';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <div className=\"ellipsis\">\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n        <div>.</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Loading;"],"sourceRoot":""}