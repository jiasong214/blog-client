{"version":3,"sources":["hooks/useInfitineScroll.jsx","components/Intro.jsx","components/PostCard.jsx","components/PostCartsList.jsx","components/CreatePostBtn.jsx","pages/Main.jsx","components/Loading.jsx","components/Footer.jsx"],"names":["useInfiniteScroll","root","threshold","rootMargin","onIntersect","useState","target","setTarget","useEffect","observer","IntersectionObserver","observe","disconnect","Intro","className","href","size","rel","React","memo","PostCard","id","index","title","createdAt","text","value","converted","Date","shortYear","getFullYear","toString","substr","month","toLocaleString","date","getDate","convertDate","to","pathname","trimmedText","replaceAll","generatePreview","PostCardsList","posts","total","length","Loading","map","post","Footer","CreatePostBtn","Main","updateCurrentPostIndex","user","useAuth","useCallback","entries","isIntersecting","motion","main","initial","opacity","animate","exit","transition","duration","token","style","position","top","ref","console","log","onOpenLoginModal","history","useHistory","onLogout","onClick","window","confirm","push"],"mappings":"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","file":"static/js/6.ffbfbc69.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = ({\n  root = null,\n  threshold = 0,\n  rootMargin = '0px',\n  onIntersect,\n}) => {\n  const [target, setTarget] = useState(null);\n\n  useEffect(() => {\n    let observer = new IntersectionObserver(onIntersect, { root, rootMargin, threshold });   \n\n    if (target) observer.observe(target);\n    return () => observer && observer.disconnect();\n  }, [target, root, rootMargin, threshold, onIntersect]);\n\n  return { setTarget };\n};\n\nexport default useInfiniteScroll;","import React from 'react';\nimport {FaGithub} from 'react-icons/fa';\nimport {MdMail} from 'react-icons/md';\n// import {AiFillLinkedin} from 'react-icons/ai'\nimport '../style/intro.scss';\n\nconst Intro = () => {\n  return (\n    <section className=\"intro\">\n      <div className=\"intro__innerbox\">\n        <h1 className=\"intro__title\">\n          Blog\n        </h1>\n        <p className=\"intro__text\">\n          About blabla React Hook useCallback has ... by Jia Song \n        </p>\n        <div className=\"intro__links\">\n          <a href=\"mailto:jiasong214@gmail.com\">\n            <MdMail size={18} />\n          </a>\n          <a href=\"https://github.com/jiasong214\" target=\"_blank\" rel=\"noreferrer\">\n            <FaGithub size={18} />\n          </a>\n          {/* <AiFillLinkedin size={18}></AiFillLinkedin> */}\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default React.memo(Intro);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/postCard.scss';\n\nconst PostCard = ({id, index, title, createdAt, text }) => {\n\n  const convertDate = (value) => {\n    const converted = new Date(value);\n    const year = converted.getFullYear();\n    const shortYear = year.toString().substr(2,4);\n    const month = converted.toLocaleString('en', { month: 'short' });;\n    const date = converted.getDate();\n\n    return `${date} ${month} ${shortYear}`;\n  }\n\n  const generatePreview = (text) => {\n    let textLength = 180;\n    const previewText = text.substr(0, textLength);\n    const trimmedText = previewText.replaceAll('#', '').replaceAll('`', '').replaceAll('*', '');\n\n    return `${trimmedText}...`;\n  }\n\n  return (\n    <article className=\"postCard\">\n      <div className=\"postCard__leftbox\">\n        <span className=\"postCard__index\">\n          {`No. ${index}`}\n        </span>\n        <span className=\"postCard__createAt\">\n          {convertDate(createdAt)}\n        </span>\n      </div>\n      <div className=\"postCard__middlebox\">\n        <Link to={{pathname: `/post/${id}`}}>\n          <h3 className=\"postCard__title\">{title}</h3>\n        </Link>\n        <p className=\"postCard__preview\">{generatePreview(text)}</p>\n      </div>\n      <div className=\"postCard__rightbox\">\n        <Link to={{pathname: `/post/${id}`}} className=\"postCard__readBtn hover-button\">\n          Read more\n        </Link>\n      </div>\n    </article>\n  )\n}\n\nexport default React.memo(PostCard);","import React from 'react';\nimport PostCard from './PostCard';\nimport Loading from './Loading';\nimport Footer from './Footer';\n\nconst PostCardsList = ({posts, total}) => {\n  let index = total + 1;\n\n  return (\n    <>\n      {posts.length === 0 && <Loading />}\n      <section className=\"postCardsList\">\n        {posts.map((post) => {\n          index --;\n\n          return (\n            <PostCard\n              key={post.id}\n              id={post.id}\n              index={index}\n              title={post.title}\n              createdAt={post.createdAt}\n              text={post.text} \n            />\n          )\n        })}\n        <Footer />\n      </section>\n    </>\n  )\n}\n\nexport default React.memo(PostCardsList);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/createPostBtn.scss';\n\nconst CreatePostBtn = () => {\n  return (\n    <aside className='createPostBtn'>\n      <Link to='/post/compose'>\n        Create new post\n        {/* <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <g><path d=\"M8.8 7.2H5.6V3.9c0-.4-.3-.8-.8-.8s-.7.4-.7.8v3.3H.8c-.4 0-.8.3-.8.8s.3.8.8.8h3.3v3.3c0 .4.3.8.8.8s.8-.3.8-.8V8.7H9c.4 0 .8-.3.8-.8s-.5-.7-1-.7zm15-4.9v-.1h-.1c-.1 0-9.2 1.2-14.4 11.7-3.8 7.6-3.6 9.9-3.3 9.9.3.1 3.4-6.5 6.7-9.2 5.2-1.1 6.6-3.6 6.6-3.6s-1.5.2-2.1.2c-.8 0-1.4-.2-1.7-.3 1.3-1.2 2.4-1.5 3.5-1.7.9-.2 1.8-.4 3-1.2 2.2-1.6 1.9-5.5 1.8-5.7z\"></path></g>\n        </svg> */}\n      </Link>\n    </aside>\n  )\n}\n\nexport default React.memo(CreatePostBtn);","import React, { useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport useInfiniteScroll from '../hooks/useInfitineScroll';\nimport Intro from '../components/Intro';\nimport PostCardsList from '../components/PostCartsList';\nimport CreatePostBtn from '../components/CreatePostBtn';\nimport '../style/main.scss';\nimport { motion } from 'framer-motion';\n\nconst Main = ({ posts, total, updateCurrentPostIndex }) => {\n  const { user } = useAuth();\n\n  //when target touch a bottom, update post index. (to get more posts in usePosts)\n  const onIntersect = useCallback((entries) => {\n    if(posts.length >= total) return;\n\n    const target = entries[0];\n    if (target.isIntersecting) updateCurrentPostIndex(posts.length);\n  }, [posts]);\n\n  const { setTarget } = useInfiniteScroll({onIntersect});\n\n  const targetStyle = {\n    position: \"relative\",\n    top: \"-30vh\"\n  }\n\n  return (\n    <motion.main \n      className='main'\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 0.3 }}\n    >\n      <div className=\"main-innerbox\">\n        <Intro />\n        <PostCardsList posts={posts} total={total} />\n      </div>\n      {user && user.token &&  <CreatePostBtn /> }\n      <div style={targetStyle} ref={setTarget}/>\n    </motion.main>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport '../style/loading.scss';\n\nconst Loading = () => {\n  console.log(\"loading...\")\n  return (\n    <div className=\"loading\">\n      <div />\n    </div>\n  )\n}\n\nexport default Loading;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../style/footer.scss';\n\nconst Footer = ({onOpenLoginModal}) => {\n  const history = useHistory();\n  const { user, onLogout } = useAuth();\n\n  const handleClickLogout = () => {\n    if (window.confirm('Do you want to log out?')) {\n      onLogout();\n      history.push('/');\n    }\n  }\n\n  return (\n    <footer className=\"footer\">\n       {user?.token ?\n          <button className='footer__logout' onClick={handleClickLogout}>\n            Logout Admin\n          </button> \n          : \n          <Link className=\"footer__login\" to=\"/login\">\n            Admin account\n          </Link>\n        }\n      <p className=\"footer__copyright\">\n        &copy; 2021 Jia Song\n      </p>\n    </footer>\n  )\n}\n\nexport default React.memo(Footer);"],"sourceRoot":""}